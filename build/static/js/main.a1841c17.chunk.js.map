{"version":3,"sources":["hoc/hoc.js","store/actions/auth.js","store/actions/actionsTypes.js","containers/account/Login.js","store/actions/project.js","containers/utils.js","containers/projects/ProjectList.js","containers/homepage/Homepage.js","containers/account/UserRegister.js","containers/account/UserDetail.js","store/actions/sector.js","containers/account/UserEdit.js","containers/account/UserList.js","containers/projects/ProjectCreate.js","containers/projects/ProjectEdit.js","containers/meetings/MeetingCreate.js","store/actions/meeting.js","containers/meetings/MeetingList.js","store/actions/meetingsInProject.js","containers/sectors/SectorCreate.js","containers/sectors/SectorEdit.js","containers/sectors/SectorList.js","routes.js","containers/layout/AutoComplete.js","containers/navbar/DropdownNav.js","containers/navbar/Navbar.js","containers/layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/project.js","store/reducers/sector.js","store/reducers/meeting.js","index.js"],"names":["Hoc","props","children","authSuccess","user","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","getUsers","token","axios","defaults","headers","Content-Type","Authorization","concat","get","then","res","users","data","setItem","JSON","stringify","getUserListSuccess","catch","err","getUser","userId","antIcon","react_default","a","createElement","icon","style","fontSize","spin","Login","handleSubmit","e","preventDefault","_this","form","validateFields","values","onAuth","username","password","history","push","errorMessage","this","message","getFieldDecorator","loading","indicator","es_form","onSubmit","className","Item","rules","required","input","prefix","color","placeholder","es_button","htmlType","marginRight","react_router_dom","to","React","Component","LoginForm","Form","create","connect","state","user_username","post","key","is_administrator","user_type","is_participant","ramal","name","sector","expirationDate","Date","getTime","authLogin","getProjectListSuccess","projects","getProjectListFail","getProject","projectId","project","getProjectDetailSuccess","dynamicSort","property","sortOrder","substr","b","localeCompare","ProjectsList","undefined","forceUpdate","getProjects","newProps","dataSource","innerArray","aux","length","id","title","tags","status","sort","hoc","skeleton","active","table","columns","dataIndex","render","text","record","list","map","tag","es_tag","toUpperCase","auth","Content","Layout","Homepage","padding","ProjectList","alignItems","withRouter","Option","Select","UserRegister","confirmDirty","validateFieldsAndScroll","userType","email","password1","password2","fail","success","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","label","max","hasFeedback","validator","onBlur","es_select","UserRegisterForm","authSignup","confirm","Modal","UserDetail","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showDeleteConfirm","propsForms","content","okText","okType","cancelText","onOk","deleteUser","onCancel","formLayout","currentUser","_this2","formItemLayout","labelCol","span","wrapperCol","layout","assign","disabled","align","onClick","UserDetailForm","delete","getSectorListSuccess","sectors","getSectorListFail","getSectors","UserEdit","parse","getItem","sector_id","warning","initials","updateUser","UserEdit_Option","UserEditForm","userObject","put","UserList","permission","setor","ProjectCreate","console","log","createProject","ProjectCreate_Option","ProjectCreateForm","ProjectEdit","currentProject","updateProject","project_id","deleteProject","match","params","marginLeft","ProjectEditForm","projectObject","RangePicker","DatePicker","MeetingCreate","date_value","meeting","subject_matter","initial_date","format","final_date","initial_hour","final_hour","meeting_leader","place","createMeeting","xs","sm","showTime","time_picker","MeetingCreateForm","MeetingList","getMeetings","meetings","size","getMeetingListSuccess","SectorCreate","createSector","SectorCreateForm","SetorEdit","updateSector","sectorId","deleteSector","getSector","currentSector","SectorEditForm","getSectorDetailSuccess","sectorObject","SectorList","BaseRouter","react_router","exact","path","component","SectorEdit","AutoComplete","OptGroup","options","count","group","float","href","rel","opt","AutoComplete_Option","Complete","width","paddingBottom","auto_complete","dropdownClassName","dropdownMatchSelectWidth","dropdownStyle","optionLabelProp","suffix","AutoCompleteComponent","DropdownNav","dropdown","overlay","menu","trigger","Header","Navbar","mode","defaultSelectedKeys","lineHeight","navbar_DropdownNav","actions","Footer","CustomLayout","navbar_Navbar","Layout_Content","margin","overflow","background","minHeight","textAlign","App","onTryAutoSignup","routes","isAuthenticated","Boolean","window","location","hostname","updateObject","oldObject","updateProperties","_objectSpread","initialState","reducer","arguments","action","authStart","authLogout","getUserListStart","getUserListFail","getProjectListStart","getProjectDetailStart","getProjectDetailFail","createProjectStart","createProjectSuccess","createProjectFail","getSectorListStart","getSectorDetailStart","getSectorDetailFail","createSectorStart","createSectorSuccess","createSectorFail","currentMeeting","getMeetingListStart","getMeetingListFail","getMeetingDetailStart","getMeetingDetailSuccess","getMeetingDetailFail","createMeetingStart","createMeetingSuccess","createMeetingFail","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","projectReducer","sectorReducer","meetingReducer","store","createStore","applyMiddleware","thunk","app","config_provider","locale","pt_BR","es","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1841c17.chunk.js","sourcesContent":["const Hoc = props => props.children;\n\nexport default Hoc;","import axios from 'axios';\nimport { \n\tAUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT,\n\tUSER_LIST_START, USER_LIST_SUCCESS, USER_LIST_FAIL \n} from './actionsTypes';\n\nexport const authStart = () => {\n    return {\n    \ttype: AUTH_START\n  \t};\n};\n\nexport const authSuccess = user => {\n  \treturn {\n    \ttype: AUTH_SUCCESS,\n    \tuser\n  \t};\n};\n\nexport const authFail = error => {\n  \treturn {\n    \ttype: AUTH_FAIL,\n    \terror: error\n  \t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem('user');\n\treturn {\n\t\ttype: AUTH_LOGOUT\n\t};\n};\n\nconst getUserListStart = () => {\n    return {\n        type: USER_LIST_START\n    };\n};\n\nconst getUserListSuccess = users => {\n    return {\n        type: USER_LIST_SUCCESS,\n        users\n    };\n};\n\nconst getUserListFail = error => {\n    return {\n      \ttype: USER_LIST_FAIL,\n      \terror: error\n    };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\nexport const authCheckState = () => {\n  \treturn dispatch => {\n    \tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tif (user === undefined || user === null) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(user.expirationDate);\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccess(user));\n\t\t\t\tdispatch(\n\t\t\t\t\tcheckAuthTimeout(\n\t\t\t\t\t\t(expirationDate.getTime() - new Date().getTime()) / 1000\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n  \t};\n};\n\nexport const authLogin = (username, password) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.post('http://0.0.0.0:8000/rest-auth/login/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t})\n\t\t.then(res => {\n\t\t\tconst user = {\n\t\t\t\ttoken: res.data.key,\n\t\t\t\tusername,\n\t\t\t\tuserId: res.data.user,\n\t\t\t\tis_administrator: res.data.user_type.is_administrator,\n\t\t\t\tis_participant: res.data.user_type.is_participant,\n\t\t\t\tramal: res.data.ramal,\n\t\t\t\tname: res.data.name,\n\t\t\t\tsector: res.data.sector,\n\t\t\t\texpirationDate: new Date(new Date().getTime() + 3600 * 1000)\n\t\t\t};\n\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\tdispatch(authSuccess(user));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n};\n\nexport const authSignup = (user) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.post('http://0.0.0.0:8000/rest-auth/registration/', user)\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n};\n\nexport const getUsers = (token) => {\n\treturn dispatch => {\n        dispatch(getUserListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get('http://0.0.0.0:8000/users/')\n        .then(res => {\n\t\t\tconst users = res.data;\n\t\t\tlocalStorage.setItem('users', JSON.stringify(users));\n\t\t\tdispatch(getUserListSuccess(users));\n        })\n        .catch(err => {\n            dispatch(getUserListFail(err));\n        });\n    };\n}\n\nexport const getUser = (token, userId) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.get(`http://0.0.0.0:8000/users/informacoes/${ userId }/`)\n\t\t.then(res => {\n\t\t\tconst user = res.data;\n\t\t\tdispatch(authSuccess(user));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n}\n\nexport const updateUser = (token, userObject) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.put(`http://0.0.0.0:8000/users/alterar_informacoes/${ userObject.userId }/`, \n\t\tuserObject)\n\t\t.then(res => {\n\t\t\tconst user = {\n\t\t\t\ttoken: token,\n\t\t\t\tusername: userObject.username,\n\t\t\t\tuserId: userObject.userId,\n\t\t\t\tis_administrator: userObject.is_administrator,\n\t\t\t\tramal: userObject.ramal,\n\t\t\t\tname: userObject.name,\n\t\t\t\temail: userObject.email,\n\t\t\t\tsector: userObject.sector,\n\t\t\t\tis_participant: !userObject.is_administrator,\n\t\t\t\texpirationDate: new Date(new Date().getTime() + 3600 * 1000)\n\t\t\t};\n\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\tdispatch(authSuccess(user));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n}\n\nexport const deleteUser = (token, userId) => {\n\treturn dispatch => {\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.delete(`http://0.0.0.0:8000/users/excluir_usuario/${ userId }/`)\n\t\tdispatch(logout());\n\t};\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const USER_LIST_START = 'USER_LIST_START';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\n\nexport const CREATE_PROJECT_START = 'CREATE_PROJECT_START';\nexport const CREATE_PROJECT_SUCCESS = 'CREATE_PROJECT_SUCCESS';\nexport const CREATE_PROJECT_FAIL = 'CREATE_PROJECT_FAIL';\n\nexport const PROJECT_LIST_START = 'PROJECT_LIST_START';\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS';\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL';\n\nexport const GET_PROJECT_DETAIL_START = 'GET_PROJECT_DETAIL_START';\nexport const GET_PROJECT_DETAIL_SUCCESS = 'GET_PROJECT_DETAIL_SUCCESS';\nexport const GET_PROJECT_DETAIL_FAIL = 'GET_PROJECT_DETAIL_FAIL';\n\nexport const CREATE_SECTOR_START = 'CREATE_SECTOR_START';\nexport const CREATE_SECTOR_SUCCESS = 'CREATE_SECTOR_SUCCESS';\nexport const CREATE_SECTOR_FAIL = 'CREATE_SECTOR_FAIL';\n\nexport const SECTOR_LIST_START = 'SECTOR_LIST_START';\nexport const SECTOR_LIST_SUCCESS = 'SECTOR_LIST_SUCCESS';\nexport const SECTOR_LIST_FAIL = 'SECTOR_LIST_FAIL';\n\nexport const GET_SECTOR_DETAIL_START = 'GET_SECTOR_DETAIL_START';\nexport const GET_SECTOR_DETAIL_SUCCESS = 'GET_SECTOR_DETAIL_SUCCESS';\nexport const GET_SECTOR_DETAIL_FAIL = 'GET_SECTOR_DETAIL_FAIL';\n\nexport const CREATE_MEETING_START = 'CREATE_MEETING_START';\nexport const CREATE_MEETING_SUCCESS = 'CREATE_MEETING_SUCCESS';\nexport const CREATE_MEETING_FAIL = 'CREATE_MEETING_FAIL';\n\nexport const MEETING_LIST_START = 'MEETING_LIST_START';\nexport const MEETING_LIST_SUCCESS = 'MEETING_LIST_SUCCESS';\nexport const MEETING_LIST_FAIL = 'MEETING_LIST_FAIL';\n\nexport const GET_MEETING_DETAIL_START = 'GET_MEETING_DETAIL_START';\nexport const GET_MEETING_DETAIL_SUCCESS = 'GET_MEETING_DETAIL_SUCCESS';\nexport const GET_MEETING_DETAIL_FAIL = 'GET_MEETING_DETAIL_FAIL';","import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { authLogin } from '../../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Login extends React.Component {\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.onAuth(values.username, values.password);\n            }\n        });\n        this.props.history.push('/');\n    };\n\n    render() {\n\n    let errorMessage = null;\n    if(this.props.error) {\n        errorMessage = (\n            <p> { this.props.error.message } </p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ? (\n\n                    <Spin indicator = { antIcon } />\n\n                ): (\n                    <Form onSubmit = { this.handleSubmit } className = 'login-form' >\n\n                        <Form.Item>\n                            {\n                                getFieldDecorator('username', {\n                                rules: [{ \n                                    required: true, \n                                    message: 'Por favor, Coloque o Seu Usuário!' \n                                }],\n                            })(\n                                <Input\n                                    prefix = { \n                                        <Icon \n                                            type = 'user' \n                                            style = {{ \n                                                color: 'rgba(0,0,0,.25)' \n                                            }} \n                                        />\n                                    }\n                                    placeholder = 'Usuário'\n                                />,\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {\n                                getFieldDecorator('password', {\n                                rules: [{ \n                                    required: true, \n                                    message: 'Por favor, Coloque Sua Senha!' }],\n                            })(\n                                <Input\n                                    prefix = {\n                                        <Icon \n                                            type = 'lock' \n                                            style = {{ \n                                                color: 'rgba(0,0,0,.25)' \n                                            }} \n                                        />\n                                    }\n                                    type = 'password'\n                                    placeholder = 'Senha'\n                                />,\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button \n                                type = 'primary' \n                                htmlType = 'submit' \n                                style = {{\n                                    marginRight: '10px'\n                                }} \n                            >\n                                Login\n                            </Button>\n                            Ou\n                            <NavLink \n                                style = {{\n                                    marginRight: '10px'\n                                }} \n                                to = '/adicionar_usuario/' > \n                                Cadastrar\n                            </NavLink>\n                        </Form.Item>\n                    </Form>\n                )\n            }\n        </div>\n        );\n    }\n}\n\nconst LoginForm = Form.create()(Login);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        user_username: state.username\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import axios from 'axios';\nimport { \n        PROJECT_LIST_START, PROJECT_LIST_SUCCESS, PROJECT_LIST_FAIL,\n        GET_PROJECT_DETAIL_START, GET_PROJECT_DETAIL_SUCCESS, GET_PROJECT_DETAIL_FAIL,\n        CREATE_PROJECT_START, CREATE_PROJECT_SUCCESS, CREATE_PROJECT_FAIL\n    } from './actionsTypes';\n\nconst getProjectListStart = () => {\n    return {\n        type: PROJECT_LIST_START\n    };\n};\n\nconst getProjectListSuccess = projects => {\n    return {\n        type: PROJECT_LIST_SUCCESS,\n        projects\n    };\n};\n\nconst getProjectListFail = error => {\n    return {\n      type: PROJECT_LIST_FAIL,\n      error: error\n    };\n};\n\nconst getProjectDetailStart = () => {\n    return {\n        type: GET_PROJECT_DETAIL_START\n    };\n};\n  \nconst getProjectDetailSuccess = project => {\n    return {\n        type: GET_PROJECT_DETAIL_SUCCESS,\n        project\n    };\n};\n  \nconst getProjectDetailFail = error => {\n    return {\n        type: GET_PROJECT_DETAIL_FAIL,\n        error: error\n    };\n};\n\nconst createProjectStart = () => {\n    return {\n        type: CREATE_PROJECT_START\n    };\n};\n  \n  const createProjectSuccess = project => {\n    return {\n        type: CREATE_PROJECT_SUCCESS,\n        project\n    };\n};\n  \n  const createProjectFail = error => {\n    return {\n        type: CREATE_PROJECT_FAIL,\n        error: error\n    };\n};\n\nexport const getProjects = token => {\n    return dispatch => {\n        dispatch(getProjectListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get('http://0.0.0.0:8000/projects/list_projects_sectors/')\n        .then(res => {\n            const projects = res.data;\n            dispatch(getProjectListSuccess(projects));\n        })\n        .catch(err => {\n            dispatch(getProjectListFail(err));\n        });\n    };\n};\n\nexport const getProject = (token, projectId) => {\n    return dispatch => {\n        dispatch(getProjectDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get(`http://0.0.0.0:8000/projects/detail/${ projectId }/`)\n        .then(res => {\n            const project = res.data;\n            dispatch(getProjectDetailSuccess(project));\n        })\n        .catch(err => {\n            dispatch(getProjectDetailFail(err));\n        });\n    };\n};\n  \nexport const createProject = (token, project) => {\n\n    return dispatch => {\n        dispatch(createProjectStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.post('http://0.0.0.0:8000/projects/create/', project)\n        .then(res => {\n            dispatch(createProjectSuccess(res));\n        })\n        .catch(err => {\n            dispatch(createProjectFail(err));\n        });\n    };\n};\n\nexport const updateProject = (token, projectObject) => {\n    return dispatch => {\n        dispatch(getProjectListStart());\n        axios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n        };\n        axios.put(`http://0.0.0.0:8000/projects/update/${ projectObject.projectId }/`, \n        projectObject)\n\t\t.then(res => {\n\t\t\tconst project = {\n                projectId: projectObject.id,\n\t\t\t\ttitle: projectObject.title,\n                status: projectObject.status,\n                sector: projectObject.sector\n            };\n            dispatch(getProjectListSuccess(project));\n\t\t})\n\t\t.catch(err => {\n            dispatch(getProjectListFail(err));\n\t\t});\n    };\n}\n\nexport const deleteProject = (token, projectId) => {\n\treturn dispatch => {\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${ token }`\n\t\t};\n        axios.delete(`http://0.0.0.0:8000/projects/delete/${ projectId }/`);\n\t};\n}","export function dynamicSort(property) {\n    \n    var sortOrder = 1;\n\n    if(property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n\n    return function (a,b) {\n        if(sortOrder === -1){\n            return b[property].localeCompare(a[property]);\n        }else{\n            return a[property].localeCompare(b[property]);\n        }        \n    }\n}\n\nexport function getSectorInProject(sectors, currentProject) {\n\n    let sector_name = '';\n\n    for(let aux = 0; aux < sectors.length; aux ++) {\n        if(currentProject.sector === sectors[aux].id) {\n            sector_name = sectors[aux].name;\n            break;\n        } else {\n\n        }\n    }\n\n    return sector_name;\n}\n\nexport function getUsersInSector(users, sectors, currentProject) {\n\n    let dataSourceUsers = {\n        innerArrayUsers: [\n\n        ]\n    }\n\n    for(let aux = 0; aux < users.length; aux ++) {\n        if(users[aux].is_administrator === true) {\n            for(let auxSector = 0; auxSector < sectors.length; auxSector ++) {\n                if(users[aux].sector === sectors[auxSector].id \n                    && users[aux].sector !== null \n                    && users[aux].sector === currentProject.sector) {\n                    dataSourceUsers.innerArrayUsers.push(\n                        {\n                            key: users[aux].id,\n                            name: users[aux].name,\n                            username: users[aux].username\n                        }\n                    );\n                }\n            }\n        } else {\n\n        }\n    }\n\n    return dataSourceUsers.innerArrayUsers;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { List, Skeleton, Table, Tag, Button, Icon } from 'antd';\n\nimport { getProjects } from '../../store/actions/project';\nimport { dynamicSort } from '../utils';\nimport Hoc from '../../hoc/hoc';\n\nclass ProjectsList extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            this.props.getProjects(this.props.token);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                this.forceUpdate();\n                this.props.getProjects(newProps.token);\n                this.forceUpdate();\n            }\n        }\n    }\n\n    render() {\n        \n        const projects = this.props.projects;\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        \n        for(let aux = 0; aux < projects.length; aux ++) {\n            \n            dataSource.innerArray.push({\n                key: projects[aux].id,\n                title: projects[aux].title,\n                sector: projects[aux].sector,\n                tags: [ projects[aux].status ]\n            }); \n        }\n        \n        dataSource.innerArray.sort(dynamicSort('title'));\n\n        return (\n            \n            <Hoc>\n                {\n                    this.props.loading ? (\n                        <Skeleton active />\n                    ) : (\n                            <Table columns = {\n                                [{\n                                    title: 'Título',\n                                    dataIndex: 'title',\n                                    key: 'title',\n                                    render: (text, record) => (\n                                        <Link to = { `/lista_de_reunioes/${ record.key }`} >\n                                            <List.Item>\n                                                <b>{text}</b>\n                                            </List.Item>\n                                        </Link>\n                                    )   \n                                },\n                                {\n                                    title: 'Setor Responsável',\n                                    dataIndex: 'sector',\n                                    key: 'sector',\n                                    render: (text) => (\n                                        <b>{text}</b>\n                                    )\n                                },\n                                {\n                                    title: 'Status',\n                                    key: 'tags',\n                                    dataIndex: 'tags',\n                                    render: tags => (\n                                        <span>\n                                        {\n                                            tags.map(tag => {\n                                                let color = tag.length > 5 ? 'geekblue' : 'green';\n                                                if (tag === 'Pendente') {\n                                                \tcolor = 'orange';\n                                                } else {\n                                                    color = 'green';\n                                                }\n                                                return (\n                                                <Tag color = { color } key = { tag }>\n                                                    <b> { tag.toUpperCase() } </b> \n                                                </Tag>\n                                                );\n                                            })\n                                        }\n                                        </span>\n                                    ),\n                                },\n                                {\n                                    title: 'Ação',\n                                    key: 'action',\n                                    render: (record) => (\n                                      <span>\n                                        <Button \n                                            type = 'primary' \n                                            htmlType = 'submit' \n                                            style = {{ \n                                                marginRight: '20px' \n                                            }}\n                                    >\n                                            <Link to = { `/editar_projeto/${ record.key }`} >\n                                                <Icon \n                                                    type = 'edit' \n                                                    style = {{ marginRight: '10px' }} />\n                                                    <b> Editar Projeto </b>\n                                            </Link>\n                                        </Button>\n                                      </span>\n                                    ),\n                                },\n                            ]}\n                            dataSource = {\n\t\t\t\t\t\t\t\tdataSource.innerArray\n\t\t\t\t\t\t\t} \n                        />\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return {\n        \n        token: state.auth.token,\n        projects: state.project.projects,\n        loading: state.project.loading,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n        getProjects: token => dispatch(getProjects(token)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsList);","import React, { Component } from 'react';\nimport { Layout, Icon } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport ProjectList from '../projects/ProjectList';\n\nconst { Content } = Layout;\n\nclass Homepage extends Component {\n\n    render () {\n        return (\n            <Content style = {{ \n                        padding: '0 50px' \n                    }}>\n                {\n                    this.props.token !== null ? (\n                        <ProjectList />\n                    ) : <div>\n                            Ta OFF <Icon type='frown' />\n                        </div>\n                }               \n                <div style = {{ \n                        alignItems: 'center'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Content>          \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Homepage));","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, Select, message } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\n\nimport { authSignup } from '../../store/actions/auth';\n\nconst Option = Select.Option;\n  \nclass UserRegister extends Component {\n\n\tstate = {\n\t\tconfirmDirty: false,\n\t};\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\t\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\n\t\t\tif (!err) {\n\t\t\t\tlet is_administrator = false;\n\n\t\t\t\tif(values.userType === 'administrator') {\n\t\t\t\t\tis_administrator = true;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tconst user = {\n\t\t\t\t\tusername: values.username,\n\t\t\t\t\tname: values.name,\n\t\t\t\t\tramal: values.ramal,\n\t\t\t\t\temail: values.email,\n\t\t\t\t\tpassword1: values.password1,\n\t\t\t\t\tpassword2: values.password2,\n\t\t\t\t\tis_administrator: is_administrator\n\t\t\t\t}\n\n\t\t\t\tif((this.props.onAuth(user)) !== fail) {\n\t\t\t\t\tmessage.success('O Usuário ' + values.username + \n\t\t\t\t\t\t\t\t\t' Foi Cadastrado Com Sucesso!');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Cadastrar o Usuário. ' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n\t};\n\n\thandleConfirmBlur = e => {\n\t\t\n\t\tconst { value } = e.target;\n\t\tthis.setState({ \n\t\t\tconfirmDirty: this.state.confirmDirty || !!value \n\t\t});\n\t};\n\n\tcompareToFirstPassword = (rule, value, callback) => {\n\t\t\n\t\tconst { form } = this.props;\n\t\tif (value && value !== form.getFieldValue('password1')) {\n\t\t\tcallback('As senhas digitadas não são iguais!');\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tvalidateToNextPassword = (rule, value, callback) => {\n\t\t\n\t\tconst { form } = this.props;\n\t\tif (value && this.state.confirmDirty) {\n\t\t\tform.validateFields(['password2'], { force: true });\n\t\t}\n\t\tcallback();\n\t};\n\n\trender() {\n\t\t\n\t\tconst { getFieldDecorator } = this.props.form;\n\n\t\treturn (\n\t\t\t<Form onSubmit = { this.handleSubmit } >\n\t\t\t\t<Form.Item label = 'Nome Completo' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('name', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira Seu Nome Completo!'\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'user' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Nome Completo'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Usuário' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('username', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque Seu Usuário!',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmax: 10,\n\t\t\t\t\t\t\t\tmessage: 'O Usuário Pode Ter no Máximo 10 Caracteres!',\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'user' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Usuário'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'E-mail' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('email', {\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\tmessage: 'Esse tipo de E-mail Não é Válido!',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: 'Por Favor, Coloque Seu E-mail!',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'mail' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' }} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Email'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Ramal' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('ramal', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque Seu Ramal!' \n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'phone' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype = 'number'\n\t\t\t\t\t\t\t\tplaceholder = 'Ramal'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label='Senha' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('password1', {\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira Sua Senha!',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalidator: this.validateToNextPassword,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'lock' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype = 'password'\n\t\t\t\t\t\t\t\tplaceholder = 'Senha'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Repita a Senha' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('password2', {\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: 'Por favor, Repita a Sua Senha!',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalidator: this.compareToFirstPassword,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'lock' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype = 'password'\n\t\t\t\t\t\t\t\tplaceholder = 'Repita sua senha' \n\t\t\t\t\t\t\t\tonBlur = { this.handleConfirmBlur } \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Tipo de Usuário' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('userType', {\n\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Tipo de Usuário!',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Select placeholder = 'Escolha o Tipo de Usuário' >\n\t\t\t\t\t\t\t\t<Option value = 'administrator'> Administrador </Option>\n\t\t\t\t\t\t\t\t<Option value = 'participant'> Participante da Reunião </Option>\n\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item >\n\t\t\t\t\t<Button \n\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t}} \n\t\t\t\t\t>\n\t\t\t\t\t\tCadastrar\n\t\t\t\t\t</Button>\n\t\t\t\t\tOu\n\t\t\t\t\t<NavLink \n\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t}} \n\t\t\t\t\t\tto = '/login/'\n\t\t\t\t\t> \n\t\t\t\t\t\tEntrar\n\t\t\t\t\t</NavLink>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst UserRegisterForm = Form.create()(UserRegister);\n\nconst mapStateToProps = (state) => {\n\n\treturn {\n\t\tloading: state.loading,\n\t\terror: state.error,\n\t\ttoken: state.auth.token\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAuth: (user) => dispatch(authSignup(user))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRegisterForm);","import React, { Component } from 'react';\nimport { Skeleton, Form, Input, Button, Modal, message, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getUser, deleteUser } from '../../store/actions/auth';\nimport Hoc from '../../hoc/hoc';\n\nconst { confirm } = Modal;\n\nclass UserDetail extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\tthis.props.getUser(this.props.token, this.props.currentUser.userId);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\t\tthis.props.getUser(newProps.token, newProps.currentUser.userId);\n\t\t\t}\n\t\t}\n\t}\n\n\tshowDeleteConfirm = (token, name, userId) => {\n\t\t\n\t\tconst propsForms = this.props;\n\t\t\n\t\tconfirm ({\n\t\t\ttitle: 'Exclusão de Conta',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir a Conta de ' + name + '?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n\t\t\n\t\t\tonOk() {\n\t\t\t\tpropsForms.deleteUser(token, userId);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Conta Excluída Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tpropsForms.history.push('/')\n\t\t\t},\n\t\t\tonCancel() {\n\t\t\t\tmessage.success('Exclusão de Conta Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst { currentUser } = this.props;\n\t\tconst token = this.props.token;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\n\t\tif(currentUser.sector === null) {\n\t\t\tcurrentUser.sector = 'Não Possui Setor no Momento';\n\t\t}\n\n\t\treturn (\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t<h1> Informações Cadastradas </h1>\n\t\t\t\t\t\t\t<Form layout = 'vertical'>\n\t\t\t\t\t\t\t\t<Form.Item label = 'Nome' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.name } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Usuário' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.username } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Email' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.email } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t<Form.Item label = 'Setor' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.sector } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Ramal' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.ramal } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcurrentUser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Administrador' \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcurrentUser.is_participant === true ? (\n\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Participante da Reunião'\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t) : null\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\tstyle = {{ marginRight: '20px' }}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/alterar_informacoes/' } >\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'edit' \n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ marginRight: '10px' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t    Editar Perfil\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\tonClick = { () => \n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.showDeleteConfirm(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser.userId)} \n\t\t\t\t\t\t\t\t\t\t\ttype = 'danger' >\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'delete' />\n\t\t\t\t\t\t\t\t\t\t\t\tExcluir Perfil \n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst UserDetailForm = Form.create()(UserDetail);\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tcurrentUser: state.auth.currentUser,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetUser: (token, userId) => dispatch(getUser(token, userId)),\n\t\tdeleteUser: (token, userId) => dispatch(deleteUser(token, userId)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetailForm);","import axios from 'axios';\nimport {\n    CREATE_SECTOR_START, CREATE_SECTOR_SUCCESS, CREATE_SECTOR_FAIL,\n    SECTOR_LIST_START, SECTOR_LIST_SUCCESS, SECTOR_LIST_FAIL,\n    GET_SECTOR_DETAIL_START, GET_SECTOR_DETAIL_SUCCESS, GET_SECTOR_DETAIL_FAIL\n} from './actionsTypes';\n\nconst getSectorListStart = () => {\n    return {\n        type: SECTOR_LIST_START\n    };\n}\n\nconst getSectorListSuccess = sectors => {\n    return {\n        type: SECTOR_LIST_SUCCESS,\n        sectors\n    };\n}\n\nconst getSectorListFail = error => {\n    return {\n        type: SECTOR_LIST_FAIL,\n        error: error\n    };\n}\n\nconst getSectorDetailStart = () => {\n    return {\n        type: GET_SECTOR_DETAIL_START\n    };\n}\n\nconst getSectorDetailSuccess = sector => {\n    return {\n        type: GET_SECTOR_DETAIL_SUCCESS,\n        sector\n    };\n}\n  \nconst getSectorDetailFail = error => {\n    return {\n        type: GET_SECTOR_DETAIL_FAIL,\n        error: error\n    }\n}\n\nconst createSectorStart = () => {\n    return {\n        type: CREATE_SECTOR_START\n    };\n};\n  \nconst createSectorSuccess = sector => {\n    return {\n        type: CREATE_SECTOR_SUCCESS,\n        sector\n    };\n};\n  \nconst createSectorFail = error => {\n    return {\n        type: CREATE_SECTOR_FAIL,\n        error: error\n    };\n};\n\nexport const getSectors = token => {\n    return dispatch => {\n        dispatch(getSectorListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get('http://0.0.0.0:8000/sectors/')\n        .then(res => {\n            const sectors = res.data;\n            dispatch(getSectorListSuccess(sectors));\n        })\n        .catch(err => {\n            dispatch(getSectorListFail(err));\n        });\n    };\n};\n\nexport const getSector = (token, sectorId) => {\n    return dispatch => {\n        dispatch(getSectorDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get(`http://0.0.0.0:8000/sectors/detail/${ sectorId }/`)\n        .then(res => {\n            const sector = res.data;\n            dispatch(getSectorDetailSuccess(sector));\n        })\n        .catch(err => {\n            dispatch(getSectorDetailFail(err));\n        });\n    };\n};\n  \nexport const createSector = (token, sector) => {\n    return dispatch => {\n        dispatch(createSectorStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.post('http://0.0.0.0:8000/sectors/create/', sector)\n        .then(res => {\n            dispatch(createSectorSuccess(res));\n        })\n        .catch(err => {\n            dispatch(createSectorFail(err));\n        });\n    };\n};\n\nexport const updateSector = (token, sectorObject) => {\n\treturn dispatch => {\n\t\tdispatch(getSectorListStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.put(`http://0.0.0.0:8000/sectors/update/${ sectorObject.id }/`, sectorObject)\n\t\t.then(res => {\n\t\t\tconst sector = {\n                sectorId: sectorObject.id,\n\t\t\t\tinitials: sectorObject.initials,\n\t\t\t\tname: sectorObject.name\n\t\t\t};\n\t\t\tdispatch(getSectorListSuccess(sector));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(getSectorListFail(err));\n\t\t});\n\t};\n}\n\nexport const deleteSector = (token, sectorId) => {\n\treturn dispatch => {\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${ token }`\n\t\t};\n        axios.delete(`http://0.0.0.0:8000/sectors/delete/${ sectorId }/`);\n\t};\n}","import React, { Component } from 'react';\nimport { Skeleton, Form, Input, Button, Icon, message, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport { getUser, updateUser } from '../../store/actions/auth';\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\nimport Hoc from '../../hoc/hoc';\nimport './user.css';\n\nconst Option = Select.Option;\n\nclass UserEdit extends Component {\n\n    constructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n\tstate = {\n\t\tconfirmDirty: false,\n\t};\n\t\n\tcomponentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\n\t\t\tthis.props.getUser(this.props.token, this.props.currentUser.userId);\n\t\t\tthis.props.getSectors(this.props.token);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tthis.props.getUser(newProps.token, newProps.currentUser.userId);\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\t\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\t\t\n\t\t\t\tconst { currentUser } = this.props;\n\t\t\t\tconst userGetItem = JSON.parse(localStorage.getItem('user'));\n\t\t\t\tconst token = userGetItem.token;\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tlet is_administrator = false;\n\t\t\t\tlet sector_id = 0;\n\n\t\t\t\tif(values.sector === undefined) {\n\t\t\n\t\t\t\t\tmessage.warning('O Setor Não Pode Ser Nulo.' + \n\t\t\t\t\t\t\t\t\t'Caso Não Tenha Setores Cadastrados, ' +\n\t\t\t\t\t\t\t\t\t'Entre em Contato Com o Administrador do Setor ' + \n\t\t\t\t\t\t\t\t\t'ou Com o Desenvolvedor');\n\t\t\t\t\tthis.props.history.push('/informacoes_usuario/');\n\t\t\t\t} else {\n\t\t\n\t\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\n\t\t\t\t\t\tif(sectors[aux].initials === values.sector) {\n\t\t\t\t\t\t\tsector_id = sectors[aux].id;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\n\t\t\t\t\tif(values.userType === 'administrator') {\n\t\t\t\t\t\tis_administrator = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst user = {\n\t\t\t\t\t\tuserId: currentUser.id,\n\t\t\t\t\t\temail: currentUser.email,\n\t\t\t\t\t\tusername: currentUser.username,\n\t\t\t\t\t\tramal: values.ramal,\n\t\t\t\t\t\tname: values.name,\n\t\t\t\t\t\tis_administrator: is_administrator,\n\t\t\t\t\t\tsector: sector_id\n\t\t\t\t\t};\n\n\t\t\t\t\tif((this.props.updateUser(token, user)) !== fail) {\n\t\t\t\t\t\tmessage.success('O Usuário ' + currentUser.username + \n\t\t\t\t\t\t\t\t\t\t' Teve Suas Informações Alteradas Com Sucesso!');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.error('Não Foi Possível Alterar Informações do Usuário. ' + \n\t\t\t\t\t\t\t\t\t'Entre em contato com o desenvolvedor!');\n\t\t\t\t\t}\n\t\t\t\t\tthis.props.history.push('/informacoes_usuario/');\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n\t};\n\n    render() {\n\t\tconst { currentUser } = this.props;\n\t\tconst sectors = this.props.sectors;\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\t\t\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n\t\t}\n\n\t\tif(currentUser.sector === null) {\n\t\t\tcurrentUser.sector = 'Não Possui Setor no Momento';\t\t\t\n\t\t}\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n            dataSource.innerArray.push(\n                {\n                    key: sectors[aux].id,\n                    initials: sectors[aux].initials,\n                    name: sectors[aux].name\n                }\n\t\t\t); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n\t\treturn (\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t<h1> Informações Cadastradas </h1>\n\t\t\t\t\t\t\t<Form layout = 'vertical' >\n\t\t\t\t\t\t\t\t<Form.Item label = 'Nome' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.name } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Usuário' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.username } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Email' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.email } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t<Form.Item label = 'Setor' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.sector } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Ramal' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.ramal } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcurrentUser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Administrador' \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcurrentUser.is_participant === true ? (\n\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Participante da Reunião'\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t) : null\t\n\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t<Hoc>\n\t\t\t\t\t{\n\t\t\t\t\t\tsectors.length === 0 ? (\n\t\t\t\t\t\t\t<Hoc> \n\t\t\t\t\t\t\t\t<h1> Você Não Possui Setor Cadastrado um Antes e Volte Aqui Depois </h1>\n\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\ttype = 'primary'\n\t\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: '40px'\n\t\t\t\t\t\t\t\t\t\t}} >\n\t\t\t\t\t\t\t\t\t\t<Link to = { '/criar_setor/' } >\n\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ttype = 'highlight' />\n\t\t\t\t\t\t\t\t\t\t\tCriar Setor\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button type = 'primary' >\n\t\t\t\t\t\t\t\t\t\t<Link to = { '/informacoes_usuario/' } >\n\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ttype = 'stop' />\n\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t<h1> Informações A Serem Alteradas </h1>\n\t\t\t\t\t\t\t\t<Form layout = 'vertical' onSubmit = { this.handleSubmit } >\n\t\t\t\t\t\t\t\t\t<Form.Item label = 'Nome Completo' >\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('name', {\n\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira Seu Nome Completo!'\n\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'user' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ color: 'rgba(0,0,0,.25)' }} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Nome Completo'\n\t\t\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<Form.Item label='Setor' hasFeedback >\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('sector', {\n\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Setor do Usuário!',\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t<Select placeholder = 'Escolha o Setor' >\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ dataSource.innerArray.map(sector => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey = { sector.key } \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { sector.initials }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ sector.name }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<Form.Item label = 'Ramal' >\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('ramal', {\n\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque Seu Ramal!' \n\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'phone' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'rgba(0,0,0,.25)' }} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'number'\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Ramal\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<Form.Item label = 'Tipo de Usuário' hasFeedback >\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('userType', {\n\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Tipo de Usuário!',\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t<Select placeholder = 'Escolha o tipo de usuário' >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Option \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'administrator' > \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdministrador\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Option \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'participant' > \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tParticipante da Reunião\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '20px'\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'edit' />\n\t\t\t\t\t\t\t\t\t\t\t\t\tAlterar Informações\t\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button type = 'primary' >\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/informacoes_usuario/' } >\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'stop' />\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t) \n\t\t\t\t\t}\n\t\t\t\t</Hoc>\n\t\t\t</Hoc>\n\t\t);\n    }\n}\n\nconst UserEditForm = Form.create()(UserEdit);\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tcurrentUser: state.auth.currentUser,\n\t\tsectors: state.sector.sectors,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetUser: (token, userId) => dispatch(getUser(token, userId)),\n\t\tupdateUser: (token, user) => dispatch(updateUser(token, user)),\n\t\tgetSectors: token => dispatch(getSectors(token))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Table, Tag } from 'antd';\n\nimport { getUsers } from '../../store/actions/auth';\nimport { dynamicSort } from '../utils';\nimport Hoc from '../../hoc/hoc';\n\nclass UserList extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            this.props.getUsers(this.props.token);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                this.forceUpdate();\n                this.props.getUsers(newProps.token);\n            }\n        }\n    }\n\n    render() {\n        \n\t\tconst users = this.props.users;\n        let permission = '';\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n\n            if(users[aux].is_administrator === true) {\n                permission = 'Administrador';\n            } else {\n                permission = 'Participante da Reunião';\n            }\n            if(users[aux].sector === null || users[aux].sector === undefined) {\n                users[aux].sector = 'Não Possui Setor no Momento';\n            }\n\n            dataSource.innerArray.push(\n                {\n                    key: users[aux].id,\n                    name: users[aux].name,\n                    username: users[aux].username,\n                    ramal: users[aux].ramal,\n                    setor: users[aux].sector,\n                    email: users[aux].email,\n\t\t\t\t\ttags: [permission],\n                }\n\t\t\t); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('name'))\n\n        return (\n            <Hoc>\n                {\n                    this.props.loading ? (\n                        <Skeleton active />\n                    ) : (\n                            <Table columns = {\n                                [{\n                                    title: 'Nome',\n                                    dataIndex: 'name',\n                                    key: 'name',\n                                    render: (text) => (\n                                        <b>{text}</b>\n                                    )\n\t\t\t\t\t\t\t\t},\n                                {\n                                    title: 'Usuário',\n                                    dataIndex: 'username',\n                                    key: 'username',\n                                    render: (text) => (\n                                        <b>{text}</b>\n                                    )\n                                },\n                                {\n                                    title: 'Ramal',\n                                    dataIndex: 'ramal',\n                                    key: 'ramal',\n                                    render: (text) => (\n                                        <b>{text}</b>\n                                    )\n                                },\n                                {\n                                    title: 'Setor',\n                                    dataIndex: 'setor',\n                                    key: 'setor',\n                                    render: (text) => (\n                                        <b>{text}</b>\n                                    )\n                                },\n                                {\n                                    title: 'Email',\n                                    dataIndex: 'email',\n                                    key: 'email',\n                                    render: (text) => (\n                                        <b>{text}</b>\n                                    )\n                                },\n                                {\n                                    title: 'Tipo de Permissão',\n                                    key: 'tags',\n                                    dataIndex: 'tags',\n                                    render: tags => (\n                                        <span>\n                                        {\n                                            tags.map(tag => {\n                                                let color = tag.length > 5 ? 'geekblue' : 'green';\n                                                if (tag === 'Participante da Reunião') {\n                                                \tcolor = 'volcano';\n                                                }\n                                                return (\n                                                <Tag color = { color } key = { tag }>\n                                                    <b> { tag.toUpperCase() } </b>\n                                                </Tag>\n                                                );\n                                            })\n                                        }\n                                        </span>\n                                    ),\n                                },\n                            ]}\n                            dataSource = {\n\t\t\t\t\t\t\t\tdataSource.innerArray\n\t\t\t\t\t\t\t} \n                        />\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.auth.users,\n        loading: state.auth.loading,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUsers: token => dispatch(getUsers(token)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, message, Select } from 'antd';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\n\nimport { createProject } from '../../store/actions/project';\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\n\nconst Option = Select.Option;\n\nclass ProjectCreate extends Component {\n    \n    state = {\n\t\tconfirmDirty: false,\n\t};\n\n\tcomponentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\tthis.props.getSectors(this.props.token);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\t\t\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tconst token = this.props.token;\n\t\t\t\tlet sector_id = '';\n\n\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\n\t\t\t\t\tif(sectors[aux].initials === values.sector) {\n\t\t\t\t\t\tsector_id = sectors[aux].id;\n\t\t\t\t\t} \n\t\t\t\t}\n\n\t\t\t\tconsole.log(sector_id)\n\n\t\t\t\tconst project = {\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tstatus: 'Pendente',\n\t\t\t\t\tsector: sector_id\n\t\t\t\t};\n\n\t\t\t\tif((this.props.createProject(token, project)) !== fail) {\n\t\t\t\t\tmessage.success('O Projeto Foi Cadastrado Com Sucesso!');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Cadastrar o Projeto.' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst sectors = this.props.sectors;\n\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n            dataSource.innerArray.push(\n                {\n                    key: sectors[aux].id,\n                    initials: sectors[aux].initials,\n                    name: sectors[aux].name,\n                }\n\t\t\t); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n\t\treturn (\n\t\t\t<Form onSubmit = { this.handleSubmit } >\n\t\t\t\t<Form.Item label = 'Título'>\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('title', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque o Título!' \n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Usuário'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label='Setor' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('sector', {\n\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Setor do Usuário!',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Select placeholder = 'Escolha o Setor' >\n\t\t\t\t\t\t\t\t{ dataSource.innerArray.map(sector => \n\t\t\t\t\t\t\t\t\t<Option \n\t\t\t\t\t\t\t\t\t\tkey = { sector.key } \n\t\t\t\t\t\t\t\t\t\tvalue = { sector.initials }>\n\t\t\t\t\t\t\t\t\t\t{ sector.name }\n\t\t\t\t\t\t\t\t\t</Option>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Status' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('status', {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'mail' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' }} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Pendente'\n\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button \n\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t}} >\n\t\t\t\t\t\tCadastrar\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst ProjectCreateForm = Form.create()(ProjectCreate);\n\nconst mapStateToProps = (state) => {\n\n\treturn {\n\t\tloading: state.project.loading,\n\t\terror: state.project.error,\n\t\ttoken: state.auth.token,\n\t\tsectors: state.sector.sectors\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tcreateProject: (token, project) => dispatch(createProject(token, project)),\n\t\tgetSectors: token => dispatch(getSectors(token))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectCreateForm);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, message, Skeleton, Modal } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { fail } from 'assert';\n\nimport Hoc from '../../hoc/hoc';\nimport { getProject, updateProject, deleteProject } from '../../store/actions/project';\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\n\nconst { confirm } = Modal;\n\nclass ProjectEdit extends Component {\n\n    constructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            const projectId = this.props.match.params.id;\n\t\t\tthis.props.getSectors(this.props.token);\n            this.props.getProject(this.props.token, projectId);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                const projectId = this.props.match.params.id;\n                this.props.getSectors(newProps.token);\n                this.props.getProject(newProps.token, projectId);\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        \n        e.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n        \n            if (!err) {\n                \n                const { currentProject } = this.props;\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tconst token = this.props.token;\n\t\t\t\tlet sector_id = '';\n\n\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n                    \n                    if(sectors[aux].initials === values.sector) {\n\t\t\t\t\t\tsector_id = sectors[aux].id;\n\t\t\t\t\t} \n\t\t\t\t}\n\n\t\t\t\tconst project = {\n                    projectId: currentProject.id,\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tstatus: currentProject.status,\n\t\t\t\t\tsector: sector_id\n                };\n                \n\t\t\t\tif((this.props.updateProject(token, project)) !== fail) {\n                    message.success('As Informações do Projeto ' +\n                                    'Foram Alteradas Com Sucesso');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não foi possível cadastrar o projeto.' + \n\t\t\t\t\t\t\t\t  'Entre em contato com o desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n    };\n    \n    showDeleteConfirm = (token, project_id) => {\n        \n        const propsForms = this.props;\n        \n        confirm ({\n            \n            title: 'Exclusão de Projeto',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir Este Projeto ?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n            \n            onOk() {\n            \n                propsForms.deleteProject(token, project_id);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Projeto Excluído Com Sucesso!',\n                });\n                propsForms.history.push('/');\n\t\t\t},\n\t\t\tonCancel() {\n                message.success('Exclusão de Projeto Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n    render() {\n        \n        const { currentProject } = this.props;\n        const { getFieldDecorator } = this.props.form;\n        const { formLayout } = this.state;\n        const formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n        const sectors = this.props.sectors;\n\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n            dataSource.innerArray.push(\n                {\n                    key: sectors[aux].id,\n                    initials: sectors[aux].initials,\n                    name: sectors[aux].name\n                }\n\t\t\t); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n        return(\n            <Hoc>\n                {\n                    this.props.loading ? (\n                        <Skeleton active />\n                    ) : (\n                        <Hoc>\n                            <h1> Informações Cadastradas </h1>\n                            <Form layout = 'vertical' >\n                                <Form.Item label = 'Nome' { ...formItemLayout } >\n                                    <Input \n                                        value = { currentProject.title } \n                                        disabled = { true } \n                                    />\n                                </Form.Item>\n                            </Form>\n                            <Form layout = 'vertical' >\n                                <Form.Item label = 'Status' { ...formItemLayout } >\n                                    <Input \n                                        value = { currentProject.status } \n                                        disabled = { true } \n                                    />\n                                </Form.Item>\n                            </Form>\n                            <Form layout = 'vertical' >\n                                <Form.Item label = 'Setor' { ...formItemLayout } >\n                                    <Input \n                                        value = { currentProject.sector } \n                                        disabled = { true } \n                                    />\n                                </Form.Item>\n                            </Form>\n                        </Hoc>\n                    )\n                }\n                <Hoc>\n                    <h1> Informações A Serem Alteradas </h1>\n                    <Form onSubmit = { this.handleSubmit } >\n                        <Form.Item label = 'Título'>\n                            {\n                                getFieldDecorator('title', {\n                                    rules: [{ \n                                        required: true, \n                                        message: 'Por favor, Coloque o Título!' \n                                    }],\n                                })(\n                                    <Input\n                                        prefix = {\n                                            <Icon \n                                                type = 'form' \n                                                style = {{ \n                                                    color: 'rgba(0,0,0,.25)' \n                                                }} \n                                            />\n                                        }\n                                        placeholder = 'Usuário'\n                                    />,\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label = 'Setor' >\n                            {\n                                getFieldDecorator('sector', {\n                                rules: [\n                                    {\n                                        required: false,\n                                    }\n                                    ],\n                                })(\n                                    <Input\n                                        prefix = {\n                                            <Icon \n                                                type = 'form' \n                                                style = {{ \n                                                    color: 'rgba(0,0,0,.25)' \n                                                }} \n                                            />\n                                        }\n                                        placeholder = { currentProject.sector }\n                                        disabled = { true }\n                                    />  \n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label = 'Status' >\n                            {\n                                getFieldDecorator('status', {\n                                \n                                })(\n                                    <Input \n                                        prefix = {\n                                            <Icon \n                                                type = 'mail' \n                                                style = {{ \n                                                    color: 'rgba(0,0,0,.25)' }} \n                                            />\n                                        }\n                                        placeholder = 'Pendente'\n                                        disabled = { true }\n                                    />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item>\n\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t<Button \n                                    type = 'primary' \n                                    htmlType = 'submit' \n\t\t\t\t\t\t\t\t>\n                                    <Icon style = {{\n                                            marginRight: '10px'\n                                        }}\n                                        type = 'edit' />\n\t\t\t\t\t\t\t\t\tAlterar Informações\t\n\t\t\t\t\t\t\t\t</Button>\n                                <Button \n                                    type = 'primary'\n                                    style = {{\n                                        marginLeft: '20px'\n                                    }} \n                                >\n\t\t\t\t\t\t\t\t\t<Link to = { '/' }>\n                                    <Icon \n                                        style = {{\n                                            marginRight: '10px'\n                                        }}\n                                        type = 'stop' />\n\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n                                <Button \n                                    style = {{\n                                        marginLeft: '20px'\n                                    }}\n                                    onClick = { () => \n                                        this.showDeleteConfirm(\n                                            this.props.token,\n                                            currentProject.id\n                                        )\n                                    } \n                                    type = 'danger' >\n                                        <Icon type = 'delete' />\n                                        Excluir Projeto \n                                </Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Item>\n                    </Form>\n                </Hoc>\n            </Hoc>\n        );\n    }\n}\n\nconst ProjectEditForm = Form.create()(ProjectEdit);\n\nconst mapStateToProps = state => {\n    \n    return {\n    \n        token: state.auth.token,\n        currentProject: state.project.currentProject,\n        loading: state.project.loading,\n\t\tsectors: state.sector.sectors\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n    \n        getProject: (token, id) => dispatch(getProject(token, id)),\n        getSectors: token => dispatch(getSectors(token)),\n        updateProject: (token, project) => dispatch(updateProject(token, project)),\n        deleteProject: (token, projectId) => dispatch(deleteProject(token, projectId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectEditForm);","import React, { Component } from 'react';\nimport { DatePicker, TimePicker, Button, Form, Input, Icon, message } from 'antd';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport { createMeeting } from '../../store/actions/meeting';\nimport { getProject } from '../../store/actions/project';\nimport { getSectors } from '../../store/actions/sector';\n\nconst { RangePicker } = DatePicker;\n\nclass MeetingCreate extends Component {\n\n    state = {\n\t\tconfirmDirty: false,\n\t};\n\n\tcomponentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\n\t\t\tthis.forceUpdate();\n\t\t\tthis.props.getSectors(this.props.token);\n\t\t\tthis.props.getProject(this.props.token, this.props.match.params.id);\n\t\t\tthis.forceUpdate();\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tthis.forceUpdate();\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t\tthis.props.getProject(newProps.token, newProps.match.params.id);\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t}\n\t}\n\n    handleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tconst token = this.props.token;\n\t\t\t\tconst { currentProject } = this.props;\n                const project_id = this.props.match.params.id;\n                const date_value = values['range-picker'];\n                let user_id = 0;\n\t\t\t\tlet sector_id = 0;\n\n\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\n\t\t\t\t\tif(sectors[aux].name === currentProject.sector) {\n                        sector_id = sectors[aux].id;\n                    }\n\t\t\t\t}\n\n\t\t\t\tconst meeting = {\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tsubject_matter: values.subject_matter,\n\t\t\t\t\tstatus: 'Pendente',\n\t\t\t\t\tinitial_date: date_value[0].format('DD/MM/YYYY'),\n\t\t\t\t\tfinal_date: date_value[1].format('DD/MM/YYYY'),\n\t\t\t\t\tinitial_hour: values['time-picker-initial'].format('HH:mm:ss'),\n\t\t\t\t\tfinal_hour: values['time-picker-final'].format('HH:mm:ss'),\n\t\t\t\t\tmeeting_leader: user_id,\n\t\t\t\t\tplace: sector_id,\n\t\t\t\t\tproject: project_id\n\t\t\t\t};\n\n\t\t\t\tif((this.props.createMeeting(token, meeting)) !== fail) {\n\t\t\t\t\tmessage.success('Reunião Criada Com Sucesso!');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Criar a Reunião. ' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t} \n\t\t\t\tthis.props.history.push(`/lista_de_reunioes/${ project_id }`);\n\t\t\t} else {\n\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\n\t\tconst { currentProject } = this.props;\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst formItemLayout = {\n\t\t\tlabelCol: {\n\t\t\t  xs: { span: 24 },\n\t\t\t  sm: { span: 6 },\n\t\t\t},\n\t\t\twrapperCol: {\n\t\t\t  xs: { span: 24 },\n\t\t\t  sm: { span: 16 },\n\t\t\t},\n\t\t  };\n\t\tconst rangeConfig = {\n\t\t\trules: [{ \n\t\t\t\ttype: 'array', \n\t\t\t\trequired: true, \n\t\t\t\tmessage: 'Por Favor, Selecione a Hora!' \n\t\t\t}],\n\t\t};\n\n\t\treturn (\n\t\t\t<Form { ...formItemLayout } onSubmit = { this.handleSubmit } >\n\t\t\t\t<Form.Item label = 'Título' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('title', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira o Título da Reunião!'\n\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\tmax: 30,\n\t\t\t\t\t\t\t\tmessage: 'O Título Pode Ter no Máximo 30 Caracteres!',\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Ex: O Título Dessa Reunião é ...'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Assunto' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('subject_matter', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira o Assunto da Reunião!'\n\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\tmax: 40,\n\t\t\t\t\t\t\t\tmessage: 'O Título Pode Ter no Máximo 40 Caracteres!',\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Ex: O Assunto Dessa Reunião é ...'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Status' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('status', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: false \n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Pendente'\n\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Local' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('local', {\n\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t})(\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = { currentProject.sector }\n\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Data Inicio - Data Fim' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('range-picker', rangeConfig) (\n\t\t\t\t\t\t\t<RangePicker showTime format = 'DD/MM/YYYY' />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Hora de Inicio' >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('time-picker-initial') (\n\t\t\t\t\t\t\t<TimePicker />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Hora de Encerramento' hasFeedback >\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('time-picker-final') (\n\t\t\t\t\t\t\t<TimePicker />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<div align = 'center' >\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t}} >\n\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ttype = 'save' />\n\t\t\t\t\t\t\t\tCadastrar Reunião\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type = 'primary' \n\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\tmarginLeft: '50px'\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link to = { `/lista_de_reunioes/${ currentProject.id }` } >\n\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype = 'stop' />\n\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst MeetingCreateForm = Form.create()(MeetingCreate);\n\nconst mapStateToProps = (state) => {\n\t\n\treturn {\n\t\n\t\tloading: state.meeting.loading,\n\t\terror: state.meeting.error,\n\t\ttoken: state.auth.token,\n\t\tcurrentProject: state.project.currentProject,\n\t\tsectors: state.sector.sectors\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n\t\tcreateMeeting: (token, meeting) => dispatch(createMeeting(token, meeting)),\n\t\tgetSectors: token => dispatch(getSectors(token)),\n\t\tgetProject: (token, project_id) => dispatch(getProject(token, project_id))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingCreateForm);","import axios from 'axios';\nimport { \n    CREATE_MEETING_START, CREATE_MEETING_SUCCESS, CREATE_MEETING_FAIL,\n    GET_MEETING_DETAIL_START, GET_MEETING_DETAIL_SUCCESS, GET_MEETING_DETAIL_FAIL\n} from './actionsTypes';\n\nconst getMeetingDetailStart = () => {\n    return {\n        type: GET_MEETING_DETAIL_START \n    };\n}\n\nconst getMeetingDetailSuccess = meeting => {\n    return {\n        type: GET_MEETING_DETAIL_SUCCESS,\n        meeting\n    };\n}\n\nconst getMeetingDetailFail = error => {\n    return {\n        type: GET_MEETING_DETAIL_FAIL,\n        error: error\n    };\n}\n\nconst createMeetingStart = () => {\n    return {\n        type: CREATE_MEETING_START\n    };\n}\n\nconst createMeetingSuccess = meeting => {\n    return {\n        type: CREATE_MEETING_SUCCESS,\n        meeting\n    };\n}\n\nconst createMeetingFail = error => {\n    return {\n        type: CREATE_MEETING_FAIL,\n        error: error\n    };\n}\n\nexport const getMeeting = (token, meetingId) => {\n    return dispatch => {\n        dispatch(getMeetingDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get(`http://0.0.0.0:8000/meetings/detail/${ meetingId }/`)\n        .then(res => {\n            const meeting = res.data;\n            dispatch(getMeetingDetailSuccess(meeting));\n        })\n        .catch(err => {\n            dispatch(getMeetingDetailFail(err));\n        });\n    };\n};\n  \nexport const createMeeting = (token, meeting) => {\n    return dispatch => {\n        dispatch(createMeetingStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.post('http://0.0.0.0:8000/meetings/create/', meeting)\n        .then(res => {\n            dispatch(createMeetingSuccess(res));\n        })\n        .catch(err => {\n            dispatch(createMeetingFail(err));\n        });\n    };\n};\n\nexport const updateMeeting = (token, meetingObject) => {\n\treturn dispatch => {\n\t\tdispatch(getMeetingDetailStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.put(`http://0.0.0.0:8000/meetings/update/${ meetingObject.id }/`, meetingObject)\n\t\t.then(res => {\n\t\t\tconst meeting = {\n                meetingId: meetingObject.id,\n                title: meetingObject.title,\n                subject_matter: meetingObject.subject_matter,\n                status: meetingObject.status,\n                first_date: meetingObject.first_date,\n                final_date: meetingObject.final_date,\n                first_hour: meetingObject.first_hour,\n                final_hour: meetingObject.final_hour,\n                meeting_leader: meetingObject.meeting_leader,\n                place: meetingObject.place\n\t\t\t};\n\t\t\tdispatch(getMeetingDetailSuccess(meeting));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(getMeetingDetailFail(err));\n\t\t});\n\t};\n}\n\nexport const deleteMeeting = (token, meetingId) => {\n\treturn dispatch => {\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${ token }`\n\t\t};\n        axios.delete(`http://0.0.0.0:8000/meetings/delete/${ meetingId }/`);\n\t};\n}","import React, { Component } from 'react';\nimport { List, Skeleton, Table, Tag, Button, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getProject } from '../../store/actions/project';\nimport { getMeetings } from '../../store/actions/meetingsInProject';\nimport { getUsers } from '../../store/actions/auth';\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\nimport Hoc from '../../hoc/hoc';\n\nclass MeetingList extends Component {\n\n\tcomponentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\n\t\t\tconst project_id = this.props.match.params.id;\n            this.props.getSectors(this.props.token);\n\t\t\tthis.props.getUsers(this.props.token);\n\t\t\tthis.props.getMeetings(this.props.token, project_id);\n\t\t\tthis.props.getProject(this.props.token, project_id);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tconst project_id = newProps.match.params.id;\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t\tthis.props.getUsers(newProps.token);\n\t\t\t\tthis.props.getMeetings(newProps.token, project_id);\n\t\t\t\tthis.props.getProject(newProps.token, project_id);\n            }\n        }\n    }\n\n    render() {\n\t\t\n\t\tconst projectId = this.props.match.params.id;\n\t\tconst meetings = this.props.meetings;\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n\t\t}\n\n\t\tfor (let aux = 0; aux < meetings.length; aux ++) {\n\n\t\t\tdataSource.innerArray.push(\n\t\t\t\t{\n\t\t\t\t\tkey: meetings[aux].id,\n\t\t\t\t\ttitle: meetings[aux].title,\n\t\t\t\t\tinitial_date: meetings[aux].initial_date,\n\t\t\t\t\tfinal_date: meetings[aux].final_date,\n\t\t\t\t\tinitial_hour: meetings[aux].initial_hour,\n\t\t\t\t\tfinal_hour: meetings[aux].final_hour,\n\t\t\t\t\tsector: meetings[aux].sector,\n\t\t\t\t\ttags: [meetings[aux].status]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n        dataSource.innerArray.sort(dynamicSort('title'));\n\t\t\n\t\treturn (\n\n\t\t\t<div align = 'right'>\n\t\t\t\t<Button \n\t\t\t\t\ttype = 'primary' \n\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\tstyle = {{\n\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t}}\n\t\t\t\t\tsize = 'large'\n\t\t\t\t>\n\t\t\t\t\t<Link to = { `/criar_reuniao/projeto/${ projectId } `} >\n\t\t\t\t\t\tNova Reunião\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t\t<div align = 'center'>\n\t\t\t\t\t<Hoc> \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Table columns = {\n\t\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Título',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'title',\n\t\t\t\t\t\t\t\t\t\tkey: 'title',\n\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t<Link to = {`/lista_de_reunioes/${record.key}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{text}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t)   \n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Setor Responsável',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\t\t\tkey: 'sector',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Data de Inicio',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'initial_date',\n\t\t\t\t\t\t\t\t\t\tkey: 'initial_date',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Data de Encerramento',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'final_date',\n\t\t\t\t\t\t\t\t\t\tkey: 'final_date',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Hora de Inicio',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'initial_hour',\n\t\t\t\t\t\t\t\t\t\tkey: 'initial_hour',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Hora de Encerramento',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'final_hour',\n\t\t\t\t\t\t\t\t\t\tkey: 'final_hour',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Status',\n\t\t\t\t\t\t\t\t\t\tkey: 'tags',\n\t\t\t\t\t\t\t\t\t\tdataIndex: 'tags',\n\t\t\t\t\t\t\t\t\t\trender: tags => (\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttags.map(tag => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet color = tag.length > 5 ? 'geekblue' : 'green';\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (tag === 'Pendente') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'orange';\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'green';\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tag color = { color } key = { tag }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b> { tag.toUpperCase() } </b> \n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: 'Ação',\n\t\t\t\t\t\t\t\t\t\tkey: 'action',\n\t\t\t\t\t\t\t\t\t\trender: (record) => (\n\t\t\t\t\t\t\t\t\t\t  <span>\n\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: '20px' \n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to = {`/editar_projeto/${record.key}`} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'edit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ marginRight: '10px' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b> Editar Projeto </b>\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t  </span>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tdataSource = {\n\t\t\t\t\t\t\t\t\tdataSource.innerArray\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Hoc>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        users: state.auth.users,\n        loading: state.meeting.loading,\n\t\tsectors: state.sector.sectors,\n\t\tmeetings: state.meeting.meetings,\n\t\tcurrentProject: state.project.currentProject\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n\t\tgetSectors: token => dispatch(getSectors(token)),\n\t\tgetUsers: token => dispatch(getUsers(token)),\n\t\tgetMeetings: (token, project_id) => dispatch(getMeetings(token, project_id)),\n\t\tgetProject: (token, project_id) => dispatch(getProject(token, project_id))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingList);","import axios from 'axios';\nimport { \n    MEETING_LIST_START, MEETING_LIST_SUCCESS, MEETING_LIST_FAIL\n} from './actionsTypes';\n\nconst getMeetingListStart = () => {\n    \n    return {\n        type: MEETING_LIST_START\n    };\n}\n\nconst getMeetingListSuccess = meetings => {\n    \n    return {\n    \n        type: MEETING_LIST_SUCCESS,\n        meetings\n    };\n}\n\nconst getMeetingListFail = error => {\n    \n    return {\n    \n        type: MEETING_LIST_FAIL,\n        error: error\n    };\n}\n\nexport const getMeetings = (token, projectId) => {\n    \n    return dispatch => {\n    \n        dispatch(getMeetingListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get(`http://0.0.0.0:8000/meetings/meetings_project/${ projectId }/`)\n        .then(res => {\n            const meetings = res.data;\n            dispatch(getMeetingListSuccess(meetings));\n        })\n        .catch(err => {\n            dispatch(getMeetingListFail(err));\n        });\n    };\n};","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, message } from 'antd';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport { createSector } from '../../store/actions/sector';\n\nclass SectorCreate extends Component {\n\n    state = {\n\t\tconfirmDirty: false,\n\t};\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\n\t\t\t\tconst token = this.props.token;\n\t\t\t\tconst sector = {\n\t\t\t\t\tinitials: values.initials,\n\t\t\t\t\tname: values.name\n\t\t\t\t};\n\t\t\t\tif((this.props.createSector(token, sector)) !== fail) {\n\t\t\t\t\tmessage.success('O Setor ' + sector.initials + ' Foi Cadastrado Com Sucesso');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Cadastrar o Setor.' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/lista_de_setores/');\t\t\t\n\t\t\t} else {\n                message.error('Formúlario Com Problemas.' + \n                              'Entre em Contato Com o Desenvolvedor!');\n\t\t\t}\t\n\t\t});\n\t};\n\n\trender() {\n\t\t\n\t\tconst { getFieldDecorator } = this.props.form;\n\n\t\treturn (\n\t\t\n\t\t\t<Form onSubmit = { this.handleSubmit } >\n\t\t\t\t<Form.Item label = 'Sigla'>\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('initials', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque a Sigla!' \n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Sigla'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label = 'Nome do Setor'>\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFieldDecorator('name', {\n\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque o Nome do Setor!' \n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tprefix = {\n\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\ttype = 'form' \n\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,.25)' \n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder = 'Nome do Setor'\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\ttype = 'primary' \n\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t}} >\n\t\t\t\t\t\t\tCadastrar Setor\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type = 'primary' >\n\t\t\t\t\t\t\t<Link to = { '/lista_de_setores/' } >\n\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\tmarginRight: '10px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ttype = 'stop' />\n\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst SectorCreateForm = Form.create()(SectorCreate);\n\nconst mapStateToProps = (state) => {\n\n\treturn {\n\t\tloading: state.loading,\n\t\terror: state.error,\n\t\ttoken: state.auth.token\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tcreateSector: (token, project) => dispatch(createSector(token, project))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectorCreateForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Form, Input, Button, Icon, message, Modal } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { fail } from 'assert';\n\nimport { getSector, updateSector, deleteSector } from '../../store/actions/sector';\nimport Hoc from '../../hoc/hoc';\n\nconst { confirm } = Modal;\n\nclass SetorEdit extends Component {\n\n    constructor() {\n        \n        super();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n\tstate = {\n\t\tconfirmDirty: false,\n    };\n    \n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            const sectorId = this.props.match.params.id;\n\t\t\tthis.props.getSector(this.props.token, sectorId);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                const sectorId = this.props.match.params.id;\n\t\t\t\tthis.props.getSector(newProps.token, sectorId);\n\t\t\t}\n\t\t}\n    }\n    \n    handleSubmit = e => {\n        \n        e.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n        \n            if (!err) {\n        \n                const token = this.props.token;\n                const sector = {\n                    id: this.props.match.params.id,\n                    initials: values.initials,\n                    name: values.name\n                };\n        \n                if((this.props.updateSector(\n                    token, sector\n                )) !== fail) {\n                    message.success('As Informações do Setor Foram Alteradas Com Sucesso!');\n                } else {\n                    message.error('Ocorreu um Erro ao Alterar as Informações do Setor. ' +\n                                  'Entre em Contato Com o Desenvolvedor!');\n                } this.props.history.push('/lista_de_setores/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n    };\n    \n    showDeleteConfirm = (token, sectorId) => {\n        \n        const propsForms = this.props;\n        \n        confirm ({\n\t\t\ttitle: 'Exclusão de Setor',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir Este Setor ?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n        \n            onOk() {\n\t\t\t\tpropsForms.deleteSector(token, sectorId);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Setor Excluído Com Sucesso!',\n                });\n                propsForms.history.push('/lista_de_setores/');\n\t\t\t},\n        \n            onCancel() {\n                message.success('Exclusão de Setor Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n    render() {\n        \n        const { currentSector } = this.props;\n        const { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n        : null;\n        \n        return (\n        \n            <Hoc>\n                {\n                    this.props.loading ? (\n                        <Skeleton active />\n                    ) : (\n                        <Hoc>\n                            <h1> Informações Cadastradas </h1>\n\n                            <Form layout = 'vertical' onSubmit = { this.handleSubmit } >\n\t\t\t\t\t\t\t\t<Form.Item label = 'Sigla' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentSector.initials } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Item label = 'Nome' { ...formItemLayout } >\n\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\tvalue = { currentSector.name } \n\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n                            </Form>\n                        </Hoc>\n                    )\n                }\n                <Hoc>\n                    <h1> Informações A Serem Alteradas </h1>\n                    <Form layout = 'vertical' onSubmit = { this.handleSubmit } >\n                        <Form.Item label = 'Sigla'>\n                            {\n                                getFieldDecorator('initials', {\n                                    rules: [{ \n                                        required: true, \n                                        message: 'Por favor, Coloque a Sigla!' \n                                    },\n                                    {\n                                        max: 6,\n                                        message: 'O usuário pode ter no máximo 6 caracteres!',\n                                    }],\n                                })(\n                                    <Input\n                                        prefix = {\n                                            <Icon \n                                                type = 'form' \n                                                style = {{ \n                                                    color: 'rgba(0,0,0,.25)' \n                                                }} \n                                            />\n                                        }\n                                        placeholder = 'Sigla'\n                                    />,\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label = 'Nome do Setor'>\n                            {\n                                getFieldDecorator('name', {\n                                    rules: [{ \n                                        required: true, \n                                        message: 'Por favor, Coloque o Nome do Setor!' \n                                    }],\n                                })(\n                                    <Input\n                                        prefix = {\n                                            <Icon \n                                                type = 'form' \n                                                style = {{ \n                                                    color: 'rgba(0,0,0,.25)' \n                                                }} \n                                            />\n                                        }\n                                        placeholder = 'Nome do Setor'\n                                    />,\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item>\n\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t<Button \n                                    type = 'primary' \n                                    htmlType = 'submit' \n                                    style = {{\n                                        marginRight: '20px'\n                                    }}\n\t\t\t\t\t\t\t\t>\n                                    <Icon type = 'edit' />\n\t\t\t\t\t\t\t\t\tAlterar Informações\t\n\t\t\t\t\t\t\t\t</Button>\n                                <Button \n                                    type = 'primary' \n                                >\n\t\t\t\t\t\t\t\t\t<Link to = { '/lista_de_setores/' }>\n                                    <Icon \n                                        style = {{\n                                            marginRight: '10px'\n                                        }}\n                                        type = 'stop' />\n\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n                                <Button\n                                    style = {{\n                                        marginLeft: '20px'\n                                    }} \n                                    onClick = { () => \n                                        this.showDeleteConfirm(\n                                            this.props.token,\n                                            currentSector.id\n                                        )\n                                    } \n                                    type = 'danger' >\n                                        <Icon type = 'delete' />\n                                        Excluir Setor\n                                </Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Item>\n                    </Form> \n                </Hoc>\n            </Hoc>\n        )\n    }\n}\n\nconst SectorEditForm = Form.create()(SetorEdit);\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        currentSector: state.sector.currentSector,\n        loading: state.sector.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n        getSector: (token, sectorId) => dispatch(getSector(token, sectorId)),\n        updateSector: (token, sector) => dispatch(updateSector(token, sector)),\n        deleteSector: (token, sectorId) => dispatch(deleteSector(token, sectorId))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectorEditForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Table, Icon, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\nimport Hoc from '../../hoc/hoc';\n\nclass SectorList extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            this.props.getSectors(this.props.token);\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                this.forceUpdate();\n                this.props.getSectors(newProps.token);   \n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n         \n            if (newProps.token !== undefined && newProps.token !== null) {\n         \n                this.forceUpdate();\n                this.props.getSectors(newProps.token);   \n            }\n        }\n    }\n\n    render() {\n        \n        const sectors = this.props.sectors;\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n            \n            dataSource.innerArray.push({\n                key: sectors[aux].id,\n                initials: sectors[aux].initials,\n                name: sectors[aux].name\n            }); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n        return (\n            <Hoc>\n                {\n                    this.props.loading ? (\n                        <Skeleton active />\n                    ) : (\n                            <Table columns = {\n                                [\n                                    {\n                                        title: 'Sigla',\n                                        dataIndex: 'initials',\n                                        key: 'initials',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Nome',\n                                        dataIndex: 'name',\n                                        key: 'name',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Ação',\n                                        key: 'action',\n                                        render: (record) => (\n                                        <span>\n                                            <Button \n                                                type = 'primary' \n                                                htmlType = 'submit' \n                                                style = {{ marginRight: '20px' }}\n                                            >\n                                                <Link to = { `/editar_setor/${ record.key }` } >\n                                                    <Icon \n                                                        type = 'edit' \n                                                        style = {{ marginRight: '10px' }} />\n                                                        Editar Setor\n                                                </Link>\n                                            </Button>\n                                        </span>\n                                        ),\n                                    },\n                                ]\n                            }\n                            dataSource = {\n\t\t\t\t\t\t\t\tdataSource.innerArray\n\t\t\t\t\t\t\t} \n                        />\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return {\n        token: state.auth.token,\n        sectors: state.sector.sectors,\n        loading: state.auth.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n        getSectors: token => dispatch(getSectors(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectorList);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Hoc from \"./hoc/hoc\";\n\nimport Login from './containers/account/Login';\nimport Homepage from './containers/homepage/Homepage';\nimport UserRegister from './containers/account/UserRegister';\nimport UserDetail from './containers/account/UserDetail';\nimport UserEdit from './containers/account/UserEdit';\nimport UserList from './containers/account/UserList';\nimport ProjectCreate from './containers/projects/ProjectCreate';\nimport ProjectEdit from './containers/projects/ProjectEdit';\nimport MeetingCreate from './containers/meetings/MeetingCreate';\nimport MeetingList from './containers/meetings/MeetingList';\nimport SectorCreate from './containers/sectors/SectorCreate';\nimport SectorEdit from './containers/sectors/SectorEdit';\nimport SectorList from './containers/sectors/SectorList';\n\nconst BaseRouter = () => (\n    <Hoc>\n        <Route exact path = '/' component = { Homepage } />\n        <Route exact path = '/login/' component = { Login } />\n        <Route exact path = '/adicionar_usuario/' component = { UserRegister } />\n        <Route exact path = '/informacoes_usuario/' component = { UserDetail } />\n        <Route exact path = '/lista_usuarios/' component = { UserList } />\n        <Route exact path = '/alterar_informacoes/' component = { UserEdit } />\n        <Route exact path = '/criar_projeto/' component = { ProjectCreate } />\n        <Route exact path = '/editar_projeto/:id' component = { ProjectEdit } />\n        <Route exact path = '/criar_reuniao/projeto/:id' component = { MeetingCreate } />\n        <Route exact path = '/lista_de_reunioes/:id' component = { MeetingList } />\n        <Route exact path = '/criar_setor/' component = { SectorCreate } /> \n        <Route exact path = '/editar_setor/:id' component = { SectorEdit } />\n        <Route exact path = '/lista_de_setores/' component = { SectorList } />\n    </Hoc>\n);\n\nexport default BaseRouter;","import React, { Component } from 'react';\nimport { Icon, Input, AutoComplete } from 'antd';\n\nconst { Option, OptGroup } = AutoComplete;\n\nconst dataSource = [\n    {\n      title: 'Projetos',\n      children: [\n        {\n            title: 'Reuniões ',\n            count: 10000,\n        },\n      ],\n    },\n];\n  \n  function renderTitle(title) {\n    return (\n      <span>\n        {title}\n        <a\n          style={{ float: 'right' }}\n          href=\"https://www.google.com/search?q=antd\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          more\n        </a>\n      </span>\n    );\n  }\n  \n  const options = dataSource\n    .map(group => (\n      <OptGroup key={group.title} label={renderTitle(group.title)}>\n        {group.children.map(opt => (\n          <Option key={opt.title} value={opt.title}>\n            {opt.title}\n            <span className=\"certain-search-item-count\">{opt.count} people</span>\n          </Option>\n        ))}\n      </OptGroup>\n    ))\n    .concat([\n      <Option disabled key=\"all\" className=\"show-all\">\n        <a href=\"https://www.google.com/search?q=antd\" target=\"_blank\" rel=\"noopener noreferrer\">\n          View all results\n        </a>\n      </Option>,\n    ]);\n  \n  function Complete() {\n    return (\n        <div className=\"certain-category-search-wrapper\" style={{ width: '100%', paddingBottom: 25 }}>\n            <AutoComplete\n                className=\"certain-category-search\"\n                dropdownClassName=\"certain-category-search-dropdown\"\n                dropdownMatchSelectWidth={false}\n                dropdownStyle={{ width: 300 }}\n                size=\"large\"\n                style={{ width: '100%' }}\n                dataSource={options}\n                placeholder=\"POR ENQUANTO NÃO FUNCIONA\"\n                optionLabelProp=\"value\"\n            >\n            <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n            </AutoComplete>\n        </div>\n    );\n  }\n\n\nclass AutoCompleteComponent extends Component {\n    render () {\n        return (\n            <Complete />\n        )\n    }\n}\n\nexport default AutoCompleteComponent;\n\n// import { AutoComplete } from 'antd';\n\n// function onSelect(value) {\n//   console.log('onSelect', value);\n// }\n\n// class Complete extends React.Component {\n//   state = {\n//     dataSource: [],\n//   }\n\n//   handleSearch = (value) => {\n//     this.setState({\n//       dataSource: !value ? [] : [\n//         value,\n//         value + value,\n//         value + value + value,\n//       ],\n//     });\n//   }\n\n//   render() {\n//     const { dataSource } = this.state;\n//     return (\n//       <AutoComplete\n//         dataSource={dataSource}\n//         style={{ width: 200 }}\n//         onSelect={onSelect}\n//         onSearch={this.handleSearch}\n//         placeholder=\"input here\"\n//       />\n//     );\n//   }\n// }\n\n// ReactDOM.render(<Complete />, mountNode);","import React, { Component } from 'react';\nimport { Menu, Dropdown, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport './navbar.css';\n\nclass DropdownNav extends Component {\n\n    render () {\n\t\treturn (\n        \t<div>\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t<Icon type = 'user' />\n\t\t\t\t\t\t\t\t<Link to = { '/informacoes_usuario/' } >\n\t\t\t\t\t\t\t\t\tVisualizar Perfil\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'edit' />\n\t\t\t\t\t\t\t\t<Link to= { '/alterar_informacoes/' } >\n\t\t\t\t\t\t\t\t\tEditar Perfil\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' \n\t\t\t\t\t\thref={ `/informacoes_usuario/` } >\n\t\t\t\t\t\t<Icon type = 'user' />  Usuário <Icon type='down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t<Icon type=\"user-add\" />\n\t\t\t\t\t\t\t\t<Link to = '/adicionar_usuario/' >\n\t\t\t\t\t\t\t\t\tAdicionar Usuário\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'team' />\n\t\t\t\t\t\t\t\t<Link to = '/lista_usuarios/' >\n\t\t\t\t\t\t\t\t\tVisualizar Usuários\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' href='/'>\n\t\t\t\t\t\t<Icon type = 'team' /> Participante <Icon type='down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t<Icon type = 'project' />\n\t\t\t\t\t\t\t\t<Link to = { '/criar_setor/' } >\n\t\t\t\t\t\t\t\t\tAdicionar Setor\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'ordered-list' />\n\t\t\t\t\t\t\t\t<Link to= { '/lista_de_setores/' } >\n\t\t\t\t\t\t\t\t\tVisualizar Setores\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' \n\t\t\t\t\t\thref={ `/lista_de_setores/` } >\n\t\t\t\t\t\t<Icon type = 'unordered-list' />  Setores <Icon type='down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t<Icon type = 'project' />\n\t\t\t\t\t\t\t\t<Link to = { '/criar_projeto/' } >\n\t\t\t\t\t\t\t\t\tAdicionar Projeto\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'ordered-list' />\n\t\t\t\t\t\t\t\t<Link to = { '/' } >\n\t\t\t\t\t\t\t\t\tVisualizar Projetos\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' \n\t\t\t\t\t\thref ={ `/informacoes_usuario/` } >\n\t\t\t\t\t\t<Icon type = 'unordered-list' />  Projetos <Icon type='down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\t\t\t\t<Dropdown trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' href='/' >\n\t\t\t\t\t\t<Icon type = 'book' /> Manuais\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n          </div>\n        );\n    }\n}\n\nexport default DropdownNav;","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './navbar.css';\nimport DropdownNav from './DropdownNav';\nimport * as actions from '../../store/actions/auth';\n\nconst { Header } = Layout;\n\nclass Navbar extends React.Component {\n\n    render () {\n        return (\n            <Header className = 'header'>\n                <Menu   \n                    className = 'menu'                        \n                    mode=\"horizontal\"\n                    defaultSelectedKeys={[\"4\"]}\n                    style={{ lineHeight: '63px'}}\n                >\n                    {\n                        this.props.token !== null ? (\n                            <Menu.Item>\n                                <DropdownNav/> \n                            </Menu.Item>\n                        ) : null\n                    }\n                                       \n                    {\n                        this.props.token !== null ? (\n                            <Menu.Item key ='4' onClick = {this.props.logout}>\n                                <Icon type='logout' className = 'icon' />\n                                Logout\n                            </Menu.Item>\n                            ) : (\n                            <Menu.Item key = '4'>\n                                <Link to='/login'>Login</Link>\n                            </Menu.Item>\n                        )\n                    }                 \n                </Menu>\n            </Header>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    };\n};\n\nconst mapDispatchToProps = (dispatch )=> {\n    return {\n        logout: () => dispatch(actions.logout())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navbar));","import React from 'react';\nimport { Layout } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AutoComplete from './AutoComplete';\nimport Navbar from '../navbar/Navbar';\n\nconst { Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n  \n\trender() {\n\t\treturn (\n\t\t\t<Layout className = 'layout' >\n\t\t\t\t<Navbar />\n\t\t\t\t<Content \n\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\tmargin: '24px 42px 0', \n\t\t\t\t\t\toverflow: 'initial' \n\t\t\t\t\t}\n\t\t\t\t} >\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.token !== null ? (\n\t\t\t\t\t\t\t<AutoComplete />\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\tbackground: 'white', \n\t\t\t\t\t\t\tpadding: 24, \n\t\t\t\t\t\t\tminHeight: 280\t \n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</div>\t\n        \t\t</Content>\n\t\t\t\t<Footer style={{ textAlign: 'center' }}>\n\t\t\t\t\tGrata - Gerenciamento de Reuniões e Atas ©2019 \n\t\t\t\t\tCriado por Victor Hugo Lopes Mota.\n\t\t\t\t</Footer>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n  \treturn {\n\t\tuserId: state.auth.userId,\n\t\ttoken: state.auth.token,\n\t\tis_administrator: state.auth.is_administrator\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(CustomLayout));","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\n\nimport * as actions from './store/actions/auth';\nimport Layout from './containers/layout/Layout';\n\nclass App extends Component {\n\t  \n\tcomponentDidMount() {\n\t\n\t\tthis.props.onTryAutoSignup();\n  \t}\n\n  \trender() {\n    \treturn (\n\t\t\t<Router>\n\t\t\t\t<Layout {...this.props}>\n\t\t\t\t\t<BaseRouter />\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n  \treturn {\n    \tisAuthenticated: state.auth.token !== null\n  \t};\n};\n\nconst mapDispatchToProps = dispatch => {\n  \treturn {\n    \tonTryAutoSignup: () => dispatch(actions.authCheckState())\n  \t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updateProperties) => {\n    return {\n        ...oldObject,\n        ...updateProperties \n    }\n}","import { \n\tAUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT,\n\tUSER_LIST_START, USER_LIST_SUCCESS, USER_LIST_FAIL \n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n\tusers: [],\n\tcurrentUser: {},\n    token: null,\n    error: null,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: null,\n\t\tloading: true\n\t});\n};\n\nconst authSuccess = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: action.user.token,\n\t\tcurrentUser: action.user,\n\t\terror: null,\n\t\tloading: false\n\t});\n};\n\nconst authFail = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: action.error,\n\t\tloading: false\n\t});\n};\n\nconst authLogout = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: null\n\t});\n};\n\nconst getUserListStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getUserListSuccess = (state, action) => {\n    return updateObject(state, {\n        users: action.users,\n        error: null,\n        loading: false\n    });\n};\n\nconst getUserListFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase AUTH_START:\n\t\t\treturn authStart(state, action);\n\t\tcase AUTH_SUCCESS:\n\t\t\treturn authSuccess(state, action);\n\t\tcase AUTH_FAIL:\n\t\t\treturn authFail(state, action);\n\t\tcase AUTH_LOGOUT:\n\t\t\treturn authLogout(state, action);\n\t\tcase USER_LIST_START:\n\t\t\treturn getUserListStart(state, action);\n\t\tcase USER_LIST_SUCCESS:\n\t\t\treturn getUserListSuccess(state, action);\n\t\tcase USER_LIST_FAIL:\n\t\t\treturn getUserListFail(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;","import { \n    PROJECT_LIST_START, PROJECT_LIST_SUCCESS, PROJECT_LIST_FAIL,\n    GET_PROJECT_DETAIL_START, GET_PROJECT_DETAIL_SUCCESS, GET_PROJECT_DETAIL_FAIL,\n    CREATE_PROJECT_START, CREATE_PROJECT_SUCCESS, CREATE_PROJECT_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    projects: [],\n    currentProject: {},\n    sector: null,\n    error: null,\n    loading: false\n};\n\nconst getProjectListStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getProjectListSuccess = (state, action) => {\n    return updateObject(state, {\n        projects: action.projects,\n        error: null,\n        loading: false\n    });\n};\n\nconst getProjectListFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n  \nconst getProjectDetailStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getProjectDetailSuccess = (state, action) => {\n    return updateObject(state, {\n        currentProject: action.project,\n        error: null,\n        loading: false\n    });\n};\n\nconst getProjectDetailFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst createProjectStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst createProjectSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false\n    });\n};\n\nconst createProjectFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROJECT_LIST_START:\n            return getProjectListStart(state, action);\n        case PROJECT_LIST_SUCCESS:\n            return getProjectListSuccess(state, action);\n        case PROJECT_LIST_FAIL:\n            return getProjectListFail(state, action);\n        case GET_PROJECT_DETAIL_START:\n            return getProjectDetailStart(state, action);\n        case GET_PROJECT_DETAIL_SUCCESS:\n            return getProjectDetailSuccess(state, action);\n        case GET_PROJECT_DETAIL_FAIL:\n            return getProjectDetailFail(state, action);\n        case CREATE_PROJECT_START:\n            return createProjectStart(state, action);\n        case CREATE_PROJECT_SUCCESS:\n            return createProjectSuccess(state, action);\n        case CREATE_PROJECT_FAIL:\n            return createProjectFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import {\n    SECTOR_LIST_START, SECTOR_LIST_SUCCESS, SECTOR_LIST_FAIL,\n    GET_SECTOR_DETAIL_START, GET_SECTOR_DETAIL_SUCCESS, GET_SECTOR_DETAIL_FAIL,\n    CREATE_SECTOR_START, CREATE_SECTOR_SUCCESS, CREATE_SECTOR_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    sectors: [],\n    currentSector: {},\n    error: null,\n    loading: false\n};\n\nconst getSectorListStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getSectorListSuccess = (state, action) => {\n    return updateObject(state, {\n        sectors: action.sectors,\n        error: null,\n        loading: false\n    });\n};\n\nconst getSectorListFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n  \nconst getSectorDetailStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getSectorDetailSuccess = (state, action) => {\n    return updateObject(state, {\n        currentSector: action.sector,\n        error: null,\n        loading: false\n    });\n};\n\nconst getSectorDetailFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst createSectorStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst createSectorSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false\n    });\n};\n\nconst createSectorFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SECTOR_LIST_START:\n            return getSectorListStart(state, action);\n        case SECTOR_LIST_SUCCESS:\n            return getSectorListSuccess(state, action);\n        case SECTOR_LIST_FAIL:\n            return getSectorListFail(state, action);\n        case GET_SECTOR_DETAIL_START:\n            return getSectorDetailStart(state, action);\n        case GET_SECTOR_DETAIL_SUCCESS:\n            return getSectorDetailSuccess(state, action);\n        case GET_SECTOR_DETAIL_FAIL:\n            return getSectorDetailFail(state, action);\n        case CREATE_SECTOR_START:\n            return createSectorStart(state, action);\n        case CREATE_SECTOR_SUCCESS:\n            return createSectorSuccess(state, action);\n        case CREATE_SECTOR_FAIL:\n            return createSectorFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import { \n    MEETING_LIST_START, MEETING_LIST_SUCCESS, MEETING_LIST_FAIL,\n    CREATE_MEETING_START, CREATE_MEETING_SUCCESS, CREATE_MEETING_FAIL,\n    GET_MEETING_DETAIL_START, GET_MEETING_DETAIL_SUCCESS, GET_MEETING_DETAIL_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    meetings: [],\n    currentMeeting: {},\n    error: null,\n    loading: false\n};\n\nconst getMeetingListStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getMeetingListSuccess = (state, action) => {\n    return updateObject(state, {\n        meetings: action.meetings,\n        error: null,\n        loading: false\n    });\n};\n\nconst getMeetingListFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst getMeetingDetailStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getMeetingDetailSuccess = (state, action) => {\n    return updateObject(state, {\n        currentMeeting: action.meeting,\n        error: null,\n        loading: false\n    });\n};\n\nconst getMeetingDetailFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst createMeetingStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst createMeetingSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false\n    });\n};\n\nconst createMeetingFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case MEETING_LIST_START:\n            return getMeetingListStart(state, action);\n        case MEETING_LIST_SUCCESS:\n            return getMeetingListSuccess(state, action);\n        case MEETING_LIST_FAIL:\n            return getMeetingListFail(state, action);\n        case GET_MEETING_DETAIL_START:\n            return getMeetingDetailStart(state, action);\n        case GET_MEETING_DETAIL_SUCCESS:\n            return getMeetingDetailSuccess(state, action);\n        case GET_MEETING_DETAIL_FAIL:\n            return getMeetingDetailFail(state, action);\n        case CREATE_MEETING_START:\n            return createMeetingStart(state, action);\n        case CREATE_MEETING_SUCCESS:\n            return createMeetingSuccess(state, action);\n        case CREATE_MEETING_FAIL:\n            return createMeetingFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ConfigProvider } from 'antd';\nimport pt_BR from 'antd/es/locale/pt_BR';\n\nimport authReducer from './store/reducers/auth';\nimport projectReducer from './store/reducers/project';\nimport sectorReducer from './store/reducers/sector';\nimport meetingReducer from './store/reducers/meeting';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\tproject: projectReducer,\n\tsector: sectorReducer,\n\tmeeting: meetingReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n\t<ConfigProvider locale = { pt_BR }>\n\t\t<Provider store = { store } >\n\t\t\t<App />\n\t\t</Provider>\n\t</ConfigProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}