{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","Router.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","Article_IconText","extra","width","alt","src","Meta","avatar","href","concat","id","description","content","CustomForm","handleFormSubmit","event","requestType","articleID","preventDefault","target","elements","value","axios","post","then","res","catch","error","put","_this2","this","es_form","onSubmit","label","input","name","placeholder","es_button","htmlType","btnText","React","Component","ArticleList","state","articles","fetchDataFromApi","get","_this","setState","setTimeout","Article","Form_CustomForm","ArticleDetail","article","handleDelete","match","params","delete","history","push","forceUpdate","card","BaseRouter","react_router","exact","path","component","Header","Layout","Content","Footer","CustomLayout","layout","className","menu","theme","mode","defaultSelectedKeys","lineHeight","padding","breadcrumb","margin","react_router_dom","to","background","minHeight","children","textAlign","App","Router","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e4d96a8.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar, Icon } from 'antd';\n\nconst Articles = (props) => {\n    return (\n        <List\n    itemLayout=\"vertical\"\n    size=\"large\"\n    pagination={{\n      onChange: page => {\n        console.log(page);\n      },\n      pageSize: 3,\n    }}\n    dataSource={props.data}\n    renderItem={item => (\n      <List.Item\n        key={item.title}\n        actions={[\n          <IconText type=\"star-o\" text=\"156\" />,\n          <IconText type=\"like-o\" text=\"156\" />,\n          <IconText type=\"message\" text=\"2\" />,\n        ]}\n        extra={\n          <img\n            width={272}\n            alt=\"logo\"\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n          />\n        }\n      >\n        <List.Item.Meta\n          avatar={<Avatar src={item.avatar} />}\n          title={<a href={`/${item.id}`}>{item.title}</a>}\n          description={item.description}\n        />\n        {item.content}\n      </List.Item>\n    )}\n  />\n    );\n}\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nexport default Articles;","/* eslint-disable default-case */\nimport React from 'react';\nimport axios from 'axios';\n\nimport { Form, Input, Button } from 'antd';\n\nexport default class CustomForm extends React.Component {\n\n    handleFormSubmit = (event, requestType, articleID) => {\n        event.preventDefault();\n        const title = event.target.elements.title.value;\n        const content = event.target.elements.content.value;\n\n        switch ( requestType ) {\n            case 'post':\n                return axios.post('https://api-grata.herokuapp.com/api/create/', {\n                    title: title,\n                    content: content\n                })\n                .then(res => console.log(res))\n                .catch(error => console.log(error));\n\n            case 'put':\n                return axios.put(`https://api-grata.herokuapp.com/api/${articleID}/update/`, {\n                    title: title,\n                    content: content\n                })\n                .then(res => console.log(res))\n                .catch(error => console.log(error));   \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={(event) => this.handleFormSubmit(\n                    event, this.props.requestType, this.props.articleID)}>\n                <Form.Item label=\"Title\">\n                    <Input name='title' placeholder=\"Put a title here\" />\n                </Form.Item>\n                <Form.Item label=\"Content\">\n                    <Input name='content' placeholder=\"Enter some content ...\" />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" >{this.props.btnText}</Button>\n                </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Articles from '../components/Article';\nimport CustomForm from '../components/Form';\nimport axios from 'axios';\n\nexport default class ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n        this.fetchDataFromApi();\n    }\n\n    fetchDataFromApi = () => {\n        axios.get('https://api-grata.herokuapp.com/api/')\n        .then(res => {\n            this.setState({\n                articles: res.data\n            });\n        });\n        setTimeout(() => {\n            this.fetchDataFromApi();\n        }, 100);\n    }\n\n    render() {\n        return (\n            <div>\n                <Articles data={this.state.articles}/>\n                <br />\n                <h2>Create an article</h2>\n                <CustomForm \n                    requestType = 'post'\n                    articleID = {null}\n                    btnText = 'Create'\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { Card, Button } from 'antd';\n\nimport CustomForm from '../components/Form';\n\nexport default class ArticleDetail extends React.Component {\n\n    state = {\n        article: {}\n    }\n\n    handleDelete = (event) => {\n        const articleID = this.props.match.params.articleID;\n        axios.delete(`https://api-grata.herokuapp.com/api/${articleID}/delete/`);\n        this.props.history.push('/');\n        this.forceUpdate();\n    }\n\n    componentDidMount() {\n        this.fetchDataFromApi();\n    }\n\n    fetchDataFromApi = () => {\n\n        const articleID = this.props.match.params.articleID;\n        axios.get(`https://api-grata.herokuapp.com/api/${articleID}/`)\n          .then(res => {\n              this.setState({\n                  article: res.data\n              });\n          });\n        setTimeout(() => {\n            this.fetchDataFromApi();\n        }, 100);\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                <p>{this.state.article.content}</p>\n                </Card>\n                <CustomForm \n                    requestType = 'put'\n                    articleID = {this.props.match.params.articleID}\n                    btnText = 'Update'\n                />\n                <form onSubmit={this.handleDelete}>\n                    <Button type=\"danger\" htmlType = \"submit\">Delete</Button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport ArticleList from './containers/ArticleListView';\nimport ArticleDetail from './containers/ArticleDetailView';\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArticleList}/>\n        <Route exact path='/:articleID' component={ArticleDetail}/>\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n        <Layout className=\"layout\">\n            <Header>\n                <div className=\"logo\" />\n                <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={['2']}\n                style={{ lineHeight: '64px' }}\n                >\n                <Menu.Item key=\"1\">nav 1</Menu.Item>\n                <Menu.Item key=\"2\">nav 2</Menu.Item>\n                <Menu.Item key=\"3\">nav 3</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item><Link to='/'>Home</Link></Breadcrumb.Item>\n                <Breadcrumb.Item><Link to='/'>List</Link></Breadcrumb.Item>\n                </Breadcrumb>\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                        {props.children}\n                    </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n    );\n}\n\nexport default CustomLayout;","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './Router';\n\nimport CustomLayout from './containers/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <CustomLayout>\n          <BaseRouter></BaseRouter>\n      </CustomLayout> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}