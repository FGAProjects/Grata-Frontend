{"version":3,"sources":["hoc/hoc.js","store/actions/auth.js","store/actions/actionsTypes.js","containers/Login.js","containers/Signup.js","components/Result.js","containers/Profile.js","store/actions/gradedAssignments.js","containers/AssignmentList.js","store/actions/assignments.js","containers/Questions.js","components/Choices.js","containers/AssignmentDetail.js","containers/QuestionForm.js","containers/AssignmentCreate.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/assignments.js","store/reducers/gradedAssignments.js","index.js"],"names":["Hoc","props","children","authSuccess","user","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","react_default","a","createElement","icon","style","fontSize","spin","Login","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","onAuth","username","password","history","push","errorMessage","this","message","getFieldDecorator","loading","indicator","es_form","onSubmit","className","Item","rules","required","input","prefix","color","placeholder","es_button","htmlType","marginRight","react_router_dom","to","React","Component","WrappedNormalLoginForm","Form","create","connect","state","user_username","axios","post","then","res","token","data","key","userId","is_student","user_type","is_teacher","expirationDate","Date","getTime","setItem","JSON","stringify","catch","actions","Option","Select","RegistrationForm","confirmDirty","validateFieldsAndScroll","console","log","userType","email","confirm","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","label","hasFeedback","validator","onBlur","es_select","FormItem_default","WrappedRegistrationForm","password1","password2","Result","progress","percent","grade","width","Profile","undefined","getGradedASNTS","newProps","hoc","skeleton","active","list","size","dataSource","gradedAssignments","renderItem","components_Result","id","PureComponent","auth","assignments","defaults","headers","Content-Type","Authorization","concat","get","getGradedASNTListSuccess","AssignmentList","getASNTS","item","title","margin","bordered","getASNTListSuccess","Step","Steps","Questions","current","_this2","questions","steps","progressDot","map","q","index","length","onClick","next","submit","marginLeft","prev","RadioGroup","Radio","Group","radioStyle","display","height","lineHeight","Choices","questionId","usersAnswers","onChange","qId","change","choices","c","es_radio","cardStyle","marginTop","marginBottom","AssignmentDetail","getASNTSDetail","match","params","success","asnt","asntId","currentAssignment","answers","createGradedASNT","Object","keys","card","containers_Questions","order","question","components_Choices","assignment","getASNTDetailSuccess","FormItem","QuestionForm","remove","k","setFieldsValue","filter","add","nextKeys","_this$props$form","initialValue","formItems","QuestionForm_FormItem","validateTrigger","whitespace","disabled","AssignmentCreate","formCount","i","el","answer","teacher","createASNT","containers_QuestionForm","assign","divider","AssignmentCreate_FormItem","WrappedAssignmentCreate","BaseRouter","react_router","exact","path","component","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","isAuthenticated","padding","breadcrumb","background","minHeight","textAlign","withRouter","App","onTryAutoSignup","routes","parse","getItem","Boolean","window","location","hostname","updateObject","oldObject","updateProperties","objectSpread","initialState","reducer","arguments","action","authStart","authLogout","getASNTListStart","getASNTListFail","getASNTDetailStart","getASNTDetailFail","createASNTStart","createASNTSuccess","createASNTFail","getGradedASNTListStart","getGradedASNTListFail","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","assignmentReducer","gradedAssignmentReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6fc5332.chunk.js","sourcesContent":["const Hoc = props => props.children;\n\nexport default Hoc;","import axios from \"axios\";\nimport * as actionTypes from \"./actionsTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://0.0.0.0:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student: res.data.user_type.is_student,\n          is_teacher: res.data.user_type.is_teacher,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (\n  username,\n  email,\n  password1,\n  password2,\n  is_student\n) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2,\n      is_student,\n      is_teacher: !is_student\n    };\n    axios\n      .post(\"http://0.0.0.0:8000/rest-auth/registration/\", user)\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student,\n          is_teacher: !is_student,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const GET_ASSIGNMENT_LIST_START = \"GET_ASSIGNMENT_LIST_START\";\nexport const GET_ASSIGNMENTS_LIST_FAIL = \"GET_ASSIGNMENTS_LIST_FAIL\";\nexport const GET_ASSIGNMENTS_LIST_SUCCESS = \"GET_ASSIGNMENTS_LIST_SUCCESS\";\n\nexport const GET_ASSIGNMENT_DETAIL_START = \"GET_ASSIGNMENT_DETAIL_START\";\nexport const GET_ASSIGNMENT_DETAIL_FAIL = \"GET_ASSIGNMENT_DETAIL_FAIL\";\nexport const GET_ASSIGNMENT_DETAIL_SUCCESS = \"GET_ASSIGNMENT_DETAIL_SUCCESS\";\n\nexport const CREATE_ASSIGNMENT_START = \"CREATE_ASSIGNMENT_START\";\nexport const CREATE_ASSIGNMENT_FAIL = \"CREATE_ASSIGNMENT_FAIL\";\nexport const CREATE_ASSIGNMENT_SUCCESS = \"CREATE_ASSIGNMENT_SUCCESS\";\n\nexport const GET_GRADED_ASSIGNMENT_LIST_START =\n  \"GET_GRADED_ASSIGNMENT_LIST_START\";\nexport const GET_GRADED_ASSIGNMENTS_LIST_FAIL =\n  \"GET_GRADED_ASSIGNMENTS_LIST_FAIL\";\nexport const GET_GRADED_ASSIGNMENTS_LIST_SUCCESS =\n  \"GET_GRADED_ASSIGNMENTS_LIST_SUCCESS\";","import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Login extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.username, values.password);\n      }\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n\n    let errorMessage = null;\n    if(this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                    <Spin indicator={antIcon} />\n\n                :\n\n\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                        <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{ required: true, message: 'Please input your username!' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Username\"\n                            />,\n                        )}\n                        </Form.Item>\n\n                        <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: 'Please input your Password!' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            />,\n                        )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                                Login\n                            </Button>\n                            Or\n                            <NavLink style={{marginRight: '10px'}} \n                            to='/signup/'> signup\n                            </NavLink>\n                        </Form.Item>\n                    </Form>\n            }\n        </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(Login);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        user_username: state.username\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport {\n    Form,\n    Input,\n    Icon,\n    Button,\n    Select\n} from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport FormItem from 'antd/lib/form/FormItem';\n\nconst Option = Select.Option;\n  \n  class RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n            let is_student = false;\n            console.log(values.userType)\n            if(values.userType === 'student') {\n                is_student = true;\n            }\n            this.props.onAuth(values.username,\n                              values.email, \n                              values.password,\n                              values.confirm,\n                              is_student);\n            console.log(values.username,values.email,values.password,values.confirm,is_student)\n        }\n        // this.props.history.push('/');\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n  \n      return (\n        <Form onSubmit={this.handleSubmit}>\n            <Form.Item>\n                {getFieldDecorator('username', {\n                    rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                    <Input\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder=\"Username\"\n                    />,\n                )}\n            </Form.Item>\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Email\"/>)}\n          </Form.Item>\n          <Form.Item label=\"Password\" hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n            placeholder=\"Password\"/>)}\n          </Form.Item>\n          <Form.Item label=\"Confirm Password\" hasFeedback>\n            {getFieldDecorator('confirm', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                {\n                  validator: this.compareToFirstPassword,\n                },\n              ],\n            })(<Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n            placeholder=\"Password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n          <Form.Item label=\"Select a user type\" hasFeedback>\n            {getFieldDecorator('userType', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please select a user!',\n                }\n              ],\n            })(\n              <Select placeholder=\"Select a user type\">\n                <Option value=\"student\">Student</Option>\n                <Option value=\"teacher\">Teacher</Option>\n              </Select>  \n            )}\n          </Form.Item>\n\n          <FormItem>\n\n          </FormItem>\n\n        <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                Signup\n            </Button>\n            Or\n            <NavLink style={{marginRight: '10px'}} \n            to='/login/'> login\n            </NavLink>\n        </Form.Item>\n        </Form>\n      );\n    }\n  }\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2, is_student) => dispatch(actions.authSignup(username, email, password1, password2, is_student))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","import React from \"react\";\nimport { Progress } from \"antd\";\n\nconst Result = props => (\n  <Progress type=\"circle\" percent={props.grade} width={80} />\n);\n\nexport default Result;","import React from \"react\";\nimport { List, Skeleton } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Result from \"../components/Result\";\nimport { getGradedASNTS } from \"../store/actions/gradedAssignments\";\nimport Hoc from \"../hoc/hoc\";\n\nclass Profile extends React.PureComponent {\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getGradedASNTS(this.props.username, this.props.token);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getGradedASNTS(newProps.username, newProps.token);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Hoc>\n        {this.props.loading ? (\n          <Skeleton active />\n        ) : (\n          <Hoc>\n            <h1>Hi {this.props.username}</h1>\n            <List\n              size=\"large\"\n              dataSource={this.props.gradedAssignments}\n              renderItem={a => <Result key={a.id} grade={a.grade} />}\n            />\n          </Hoc>\n        )}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    gradedAssignments: state.gradedAssignments.assignments,\n    loading: state.gradedAssignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGradedASNTS: (username, token) =>\n      dispatch(getGradedASNTS(username, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Profile);","import axios from \"axios\";\nimport * as actionTypes from \"./actionsTypes\";\n\nconst getGradedASNTListStart = () => {\n  return {\n    type: actionTypes.GET_GRADED_ASSIGNMENT_LIST_START\n  };\n};\n\nconst getGradedASNTListSuccess = assignments => {\n  return {\n    type: actionTypes.GET_GRADED_ASSIGNMENTS_LIST_SUCCESS,\n    assignments\n  };\n};\n\nconst getGradedASNTListFail = error => {\n  return {\n    type: actionTypes.GET_GRADED_ASSIGNMENTS_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const getGradedASNTS = (username, token) => {\n  return dispatch => {\n    dispatch(getGradedASNTListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`http://0.0.0.0:8000/graded-assignments/?username=${username}`)\n      .then(res => {\n        const assignments = res.data;\n        dispatch(getGradedASNTListSuccess(assignments));\n      })\n      .catch(err => {\n        dispatch(getGradedASNTListFail(err));\n      });\n  };\n};\n\nexport const createGradedASNT = (token, asnt) => {\n  return dispatch => {\n    //   dispatch(createASNTStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .post(`http://0.0.0.0:8000/graded-assignments/create/`, asnt)\n      .then(res => {\n        console.log(\"success\");\n        //   dispatch(createASNTSuccess());\n      })\n      .catch(err => {\n        //   dispatch(createASNTFail());\n      });\n  };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { List, Skeleton } from \"antd\";\nimport * as actions from \"../store/actions/assignments\";\nimport Hoc from \"../hoc/hoc\";\n\nclass AssignmentList extends React.PureComponent {\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getASNTS(this.props.token);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getASNTS(newProps.token);\n      }\n    }\n  }\n\n  renderItem(item) {\n    return (\n      <Link to={`/assignments/${item.id}`}>\n        <List.Item>{item.title}</List.Item>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      <Hoc>\n        {this.props.loading ? (\n          <Skeleton active />\n        ) : (\n          <div>\n            <h3 style={{ margin: \"16px 0\" }}>Assignment List</h3>\n            <List\n              size=\"large\"\n              bordered\n              dataSource={this.props.assignments}\n              renderItem={item => this.renderItem(item)}\n            />\n          </div>\n        )}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    assignments: state.assignments.assignments,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getASNTS: token => dispatch(actions.getASNTS(token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssignmentList);","import axios from \"axios\";\nimport * as actionTypes from \"./actionsTypes\";\n\nconst getASNTListStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_LIST_START\n  };\n};\n\nconst getASNTListSuccess = assignments => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS,\n    assignments\n  };\n};\n\nconst getASNTListFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTS = token => {\n  return dispatch => {\n    dispatch(getASNTListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(\"http://0.0.0.0:8000/assignments/\")\n      .then(res => {\n        const assignments = res.data;\n        dispatch(getASNTListSuccess(assignments));\n      })\n      .catch(err => {\n        dispatch(getASNTListFail());\n      });\n  };\n};\n\nconst getASNTDetailStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_START\n  };\n};\n\nconst getASNTDetailSuccess = assignment => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS,\n    assignment\n  };\n};\n\nconst getASNTDetailFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTSDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getASNTDetailStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`http://0.0.0.0:8000/assignments/${id}/`)\n      .then(res => {\n        const assignment = res.data;\n        dispatch(getASNTDetailSuccess(assignment));\n      })\n      .catch(err => {\n        dispatch(getASNTDetailFail());\n      });\n  };\n};\n\nconst createASNTStart = () => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_START\n  };\n};\n\nconst createASNTSuccess = assignment => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_SUCCESS,\n    assignment\n  };\n};\n\nconst createASNTFail = error => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_FAIL,\n    error: error\n  };\n};\n\nexport const createASNT = (token, asnt) => {\n  return dispatch => {\n    dispatch(createASNTStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .post(`http://0.0.0.0:8000/assignments/`, asnt)\n      .then(res => {\n        dispatch(createASNTSuccess());\n      })\n      .catch(err => {\n        dispatch(createASNTFail());\n      });\n  };\n};","import React from \"react\";\nimport { Steps, Button } from \"antd\";\n\nconst Step = Steps.Step;\n\nclass Questions extends React.Component {\n  state = {\n    current: 0\n  };\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({ current });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current });\n  }\n\n  render() {\n    const { current } = this.state;\n    const { questions } = this.props;\n    return (\n      <div>\n        <Steps progressDot current={current}>\n          {questions.map((q, index) => (\n            <Step key={index} />\n          ))}\n        </Steps>\n        <div>{questions[current]}</div>\n        <div>\n          {current < questions.length - 1 && (\n            <Button type=\"primary\" onClick={() => this.next()}>\n              Next\n            </Button>\n          )}\n          {current === questions.length - 1 && (\n            <Button type=\"primary\" onClick={() => this.props.submit()}>\n              Submit\n            </Button>\n          )}\n          {current > 0 && (\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n              Previous\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questions;","import React from \"react\";\nimport { Radio } from \"antd\";\n\nconst RadioGroup = Radio.Group;\n\nconst radioStyle = {\n  display: \"block\",\n  height: \"30px\",\n  lineHeight: \"30px\"\n};\n\nclass Choices extends React.Component {\n  render() {\n    const { questionId } = this.props;\n    const { usersAnswers } = this.props;\n    return (\n      <RadioGroup\n        onChange={(e, qId) => this.props.change(e, questionId)}\n        value={\n          usersAnswers[questionId] !== undefined &&\n          usersAnswers[questionId] !== null\n            ? usersAnswers[questionId]\n            : null\n        }\n      >\n        {this.props.choices.map((c, index) => {\n          return (\n            <Radio style={radioStyle} value={c} key={index}>\n              {c}\n            </Radio>\n          );\n        })}\n      </RadioGroup>\n    );\n  }\n}\n\nexport default Choices;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Skeleton, message } from \"antd\";\nimport Questions from \"./Questions\";\nimport Choices from \"../components/Choices\";\nimport { getASNTSDetail } from \"../store/actions/assignments\";\nimport { createGradedASNT } from \"../store/actions/gradedAssignments\";\nimport Hoc from \"../hoc/hoc\";\n\nconst cardStyle = {\n  marginTop: \"20px\",\n  marginBottom: \"20px\"\n};\n\nclass AssignmentDetail extends React.Component {\n  state = {\n    usersAnswers: {}\n  };\n\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getASNTSDetail(this.props.token, this.props.match.params.id);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getASNTSDetail(newProps.token, this.props.match.params.id);\n      }\n    }\n  }\n\n  onChange = (e, qId) => {\n    const { usersAnswers } = this.state;\n    usersAnswers[qId] = e.target.value;\n    this.setState({ usersAnswers });\n  };\n\n  handleSubmit() {\n    message.success(\"Submitting your assignment!\");\n    const { usersAnswers } = this.state;\n    const asnt = {\n      username: this.props.username,\n      asntId: this.props.currentAssignment.id,\n      answers: usersAnswers\n    };\n    this.props.createGradedASNT(this.props.token, asnt);\n  }\n\n  render() {\n    const { currentAssignment } = this.props;\n    const { title } = currentAssignment;\n    const { usersAnswers } = this.state;\n    return (\n      <Hoc>\n        {Object.keys(currentAssignment).length > 0 ? (\n          <Hoc>\n            {this.props.loading ? (\n              <Skeleton active />\n            ) : (\n              <Card title={title}>\n                <Questions\n                  submit={() => this.handleSubmit()}\n                  questions={currentAssignment.questions.map(q => {\n                    return (\n                      <Card\n                        style={cardStyle}\n                        type=\"inner\"\n                        key={q.id}\n                        title={`${q.order}. ${q.question}`}\n                      >\n                        <Choices\n                          questionId={q.order}\n                          choices={q.choices}\n                          change={this.onChange}\n                          usersAnswers={usersAnswers}\n                        />\n                      </Card>\n                    );\n                  })}\n                />\n              </Card>\n            )}\n          </Hoc>\n        ) : null}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    currentAssignment: state.assignments.currentAssignment,\n    loading: state.assignments.loading,\n    username: state.auth.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getASNTSDetail: (token, id) => dispatch(getASNTSDetail(token, id)),\n    createGradedASNT: (token, asnt) => dispatch(createGradedASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssignmentDetail);","import React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport Hoc from \"../hoc/hoc\";\n\nconst FormItem = Form.Item;\n\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n  remove = k => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    if (keys.length === 1) return;\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    const nextKeys = keys.concat(++id);\n    form.setFieldsValue({\n      keys: nextKeys\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    getFieldDecorator(\"keys\", { initialValue: [] });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k, index) => (\n      <FormItem label={index === 0 ? \"Choices\" : \"\"} key={k}>\n        {getFieldDecorator(`questions[${this.props.id}]choices[${k}]`, {\n          validateTrigger: [\"onChange\", \"onBlur\"],\n          rules: [\n            {\n              required: true,\n              whitespace: true,\n              message: \"Please input a choice to the question\"\n            }\n          ]\n        })(<Input placeholder=\"Answer choice\" />)}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            disabled={keys.length === 1}\n            onClick={() => this.remove(k)}\n          />\n        ) : null}\n      </FormItem>\n    ));\n    return (\n      <Hoc>\n        <FormItem label=\"Question: \">\n          {getFieldDecorator(`question[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a question\"\n              }\n            ]\n          })(<Input placeholder=\"Add a question\" />)}\n        </FormItem>\n        <FormItem label=\"Answer: \">\n          {getFieldDecorator(`answers[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input an answer to this question\"\n              }\n            ]\n          })(<Input placeholder=\"What is the answer?\" />)}\n        </FormItem>\n        {formItems}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n            <Icon type=\"plus\" /> Add an answer choice\n          </Button>\n        </FormItem>\n      </Hoc>\n    );\n  }\n}\n\nexport default QuestionForm;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\nimport QuestionForm from \"./QuestionForm\";\nimport Hoc from \"../hoc/hoc\";\nimport { createASNT } from \"../store/actions/assignments\";\n\nconst FormItem = Form.Item;\n\nclass AssignmentCreate extends React.Component {\n  state = {\n    formCount: 1\n  };\n\n  remove = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount - 1\n    });\n  };\n\n  add = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount + 1\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        const questions = [];\n        for (let i = 0; i < values.questions.length; i += 1) {\n          questions.push({\n            title: values.question[i],\n            choices: values.questions[i].choices.filter(el => el !== null),\n            answer: values.answers[i]\n          });\n        }\n        const asnt = {\n          teacher: this.props.username,\n          title: values.title,\n          questions\n        };\n        this.props.createASNT(this.props.token, asnt);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const questions = [];\n    for (let i = 0; i < this.state.formCount; i += 1) {\n      questions.push(\n        <Hoc key={i}>\n          {questions.length > 0 ? (\n            <Icon\n              className=\"dynamic-delete-button\"\n              type=\"minus-circle-o\"\n              disabled={questions.length === 0}\n              onClick={() => this.remove()}\n            />\n          ) : null}\n          <QuestionForm id={i} {...this.props} />\n          <Divider />\n        </Hoc>\n      );\n    }\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h1>Create an assignment</h1>\n        <FormItem label={\"Title: \"}>\n          {getFieldDecorator(`title`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a title\"\n              }\n            ]\n          })(<Input placeholder=\"Add a title\" />)}\n        </FormItem>\n        {questions}\n        <FormItem>\n          <Button type=\"secondary\" onClick={this.add}>\n            <Icon type=\"plus\" /> Add question\n          </Button>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createASNT: (token, asnt) => dispatch(createASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedAssignmentCreate);","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport Profile from \"./containers/Profile\";\nimport AssignmentList from \"./containers/AssignmentList\";\nimport AssignmentDetail from \"./containers/AssignmentDetail\";\nimport AssignmentCreate from \"./containers/AssignmentCreate\";\n\nconst BaseRouter = () => (\n  <Hoc>\n    <Route exact path=\"/\" component={AssignmentList} />\n    <Route exact path=\"/create/\" component={AssignmentCreate} />\n    <Route exact path=\"/login/\" component={Login} />\n    <Route exact path=\"/signup/\" component={Signup} />\n    <Route exact path=\"/assignments/:id\" component={AssignmentDetail} />\n    <Route exact path=\"/profile/:id\" component={Profile} />\n  </Hoc>\n);\n\nexport default BaseRouter;","import React from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"2\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            {this.props.isAuthenticated ? (\n              <Menu.Item key=\"2\" onClick={this.props.logout}>\n                Logout\n              </Menu.Item>\n            ) : (\n              <Menu.Item key=\"2\">\n                <Link to=\"/login\">Login</Link>\n              </Menu.Item>\n            )}\n          </Menu>\n        </Header>\n        <Content style={{ padding: \"0 50px\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\n            <Breadcrumb.Item>\n              <Link to=\"/\">Home</Link>\n            </Breadcrumb.Item>\n            {this.props.token !== null ? (\n              <Breadcrumb.Item>\n                <Link to={`/profile/${this.props.userId}`}>Profile</Link>\n              </Breadcrumb.Item>\n            ) : null}\n            {this.props.token !== null && this.props.is_teacher ? (\n              <Breadcrumb.Item>\n                <Link to=\"/create\">Create</Link>\n              </Breadcrumb.Item>\n            ) : null}\n          </Breadcrumb>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            {this.props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          Ant Design ©2016 Created by Ant UED\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId,\n    token: state.auth.token,\n    is_teacher: state.auth.is_teacher\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actions.logout())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CustomLayout)\n);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BaseRouter from \"./routes\";\nimport \"antd/dist/antd.css\";\nimport * as actions from \"./store/actions/auth\";\n\nimport CustomLayout from \"./containers/Layout\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updateProperties) => {\n    return {\n        ...oldObject,\n        ...updateProperties \n    }\n}","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  is_student: null,\n  is_teacher: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.user.token,\n    username: action.user.username,\n    is_student: action.user.is_student,\n    is_teacher: action.user.is_teacher,\n    userId: action.user.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  assignments: [],\n  currentAssignment: {},\n  error: null,\n  loading: false\n};\n\nconst getASNTListStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst getASNTListSuccess = (state, action) => {\n  return updateObject(state, {\n    assignments: action.assignments,\n    error: null,\n    loading: false\n  });\n};\n\nconst getASNTListFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst getASNTDetailStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst getASNTDetailSuccess = (state, action) => {\n  return updateObject(state, {\n    currentAssignment: action.assignment,\n    error: null,\n    loading: false\n  });\n};\n\nconst getASNTDetailFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst createASNTStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst createASNTSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: false\n  });\n};\n\nconst createASNTFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ASSIGNMENT_LIST_START:\n      return getASNTListStart(state, action);\n    case actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS:\n      return getASNTListSuccess(state, action);\n    case actionTypes.GET_ASSIGNMENTS_LIST_FAIL:\n      return getASNTListFail(state, action);\n    case actionTypes.GET_ASSIGNMENT_DETAIL_START:\n      return getASNTDetailStart(state, action);\n    case actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS:\n      return getASNTDetailSuccess(state, action);\n    case actionTypes.GET_ASSIGNMENT_DETAIL_FAIL:\n      return getASNTDetailFail(state, action);\n    case actionTypes.CREATE_ASSIGNMENT_START:\n      return createASNTStart(state, action);\n    case actionTypes.CREATE_ASSIGNMENT_SUCCESS:\n      return createASNTSuccess(state, action);\n    case actionTypes.CREATE_ASSIGNMENT_FAIL:\n      return createASNTFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  assignments: [],\n  error: null,\n  loading: false\n};\n\nconst getGradedASNTListStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst getGradedASNTListSuccess = (state, action) => {\n  return updateObject(state, {\n    assignments: action.assignments,\n    error: null,\n    loading: false\n  });\n};\n\nconst getGradedASNTListFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_GRADED_ASSIGNMENT_LIST_START:\n      return getGradedASNTListStart(state, action);\n    case actionTypes.GET_GRADED_ASSIGNMENTS_LIST_SUCCESS:\n      return getGradedASNTListSuccess(state, action);\n    case actionTypes.GET_GRADED_ASSIGNMENTS_LIST_FAIL:\n      return getGradedASNTListFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\nimport assignmentReducer from \"./store/reducers/assignments\";\nimport gradedAssignmentReducer from \"./store/reducers/gradedAssignments\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  assignments: assignmentReducer,\n  gradedAssignments: gradedAssignmentReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nserviceWorker.unregister();"],"sourceRoot":""}