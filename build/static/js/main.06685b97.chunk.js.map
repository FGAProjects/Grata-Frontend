{"version":3,"sources":["images/notPermission.gif","hoc/hoc.js","store/actions/auth.js","store/actions/actionsTypes.js","containers/user/Login.js","store/actions/project.js","store/actions/meeting.js","containers/utils.js","containers/projects/ProjectList.js","containers/homepage/Homepage.js","containers/notPermission/NotPermission.js","containers/user/UserRegister.js","containers/user/UserDetail.js","store/actions/sector.js","containers/user/UserEdit.js","containers/user/UserList.js","containers/user/UserListMeeting.js","containers/projects/ProjectCreate.js","containers/projects/ProjectEdit.js","containers/meetings/MeetingCreate.js","containers/meetings/MeetingList.js","containers/meetings/MeetingDetail.js","containers/meetings/MeetingEdit.js","containers/meetings/MeetingConfirm.js","store/actions/quiz.js","containers/topics/TopicsCreate.js","containers/sectors/SectorCreate.js","containers/sectors/SectorEdit.js","containers/sectors/SectorList.js","containers/rules/RulesCreate.js","containers/record/Record.js","containers/quiz/QuestionForm.js","containers/quiz/QuizCreator.js","store/actions/choices.js","containers/quiz/ResultsQuiz.js","components/Questions.js","components/Choices.js","containers/quiz/RespondQuiz.js","routes.js","containers/layout/AutoComplete.js","containers/navbar/DropdownNav.js","containers/navbar/Navbar.js","containers/layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/project.js","store/reducers/sector.js","store/reducers/meeting.js","store/reducers/quiz.js","store/reducers/choices.js","index.js"],"names":["module","exports","__webpack_require__","p","Hoc","props","children","authSuccess","user","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","getUsers","token","axios","defaults","headers","Content-Type","Authorization","concat","get","then","res","users","data","setItem","JSON","stringify","getUserListSuccess","catch","err","getUser","userId","Content","Layout","Login","handleSubmit","e","preventDefault","_this","form","validateFields","values","username","password","onAuth","history","push","getFieldDecorator","this","antIcon","react_default","a","createElement","icon","style","fontSize","spin","message","loading","indicator","className","es_form","onSubmit","Item","rules","required","input","prefix","color","placeholder","es_button","htmlType","React","Component","LoginForm","Form","create","connect","state","auth","post","key","is_administrator","user_type","is_participant","ramal","name","sector","expirationDate","Date","getTime","authLogin","getProjectListSuccess","projects","getProjectListFail","getProjects","getProject","projectId","project","getProjectDetailSuccess","getMeetingDetailSuccess","meeting","getMeetingDetailFail","getMeeting","meetingId","updateMeeting","meetingObject","put","id","dynamicSort","property","sortOrder","substr","b","localeCompare","size","obj","hasOwnProperty","ProjectsList","undefined","parse","getItem","forceUpdate","getAllMeeting","currentUser","newProps","allMeetings","project_id","dataSource","innerArray","confirm","dataSourceMeetings","aux","length","status","meeting_leader","title","subject_matter","usersMeeting","tags","sort","hoc","homepage_Homepage","skeleton","active","table","columns","dataIndex","render","text","record","react_router_dom","to","list","map","tag","es_tag","toUpperCase","Homepage","Homepage_Content","ProjectList","href","withRouter","NotPermission","align","src","notPermission","alt","marginBottom","Option","Select","UserRegister","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","confirmDirty","validateFieldsAndScroll","userType","email","password1","password2","fail","success","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","formLayout","formItemLayout","labelCol","span","wrapperCol","assign","label","max","hasFeedback","validator","onBlur","es_select","notPermission_NotPermission","UserRegisterForm","authSignup","Modal","UserDetail","showDeleteConfirm","propsForms","content","okText","okType","cancelText","onOk","deleteUser","onCancel","_this2","layout","disabled","onClick","UserDetailForm","delete","getSectorListSuccess","sectors","getSectorListFail","getSectors","UserEdit","sector_id","warning","initials","updateUser","UserEdit_Option","UserEditForm","userObject","UserList","permission","setor","UserListMeeting","showSearch","cont","targetKeys","currentMeeting","initial_date","final_date","initial_hour","final_hour","onChange","nextTargetKeys","triggerShowSearch","meeting_id","match","params","console","log","_this$state","es_switch","unCheckedChildren","checkedChildren","checked","UserListMeeting_TableTransfer","operations","filterOption","inputValue","item","indexOf","leftColumns","rightColumns","TableTransfer","_ref","restProps","objectWithoutProperties","transfer","showSelectAll","_ref2","direction","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","listDisabled","rowSelection","getCheckboxProps","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","_ref3","diffKeys","difference","onSelect","_ref4","selectedRowKeys","pointerEvents","onRow","_ref5","itemDisabled","includes","ProjectCreate","createProject","ProjectCreate_Option","ProjectCreateForm","ProjectEdit","currentProject","updateProject","deleteProject","ProjectEditForm","projectObject","RangePicker","DatePicker","MeetingCreate","date_value","format","topics","questionnaires","createMeeting","xs","sm","showTime","time_picker","MeetingCreateForm","createMeetingSuccess","MeetingList","getMeetings","meetings","getMeetingListSuccess","MeetingDetail","cancelMeeting","info","formItemLayoutMinimum","confirmMeeting","marginTop","marginRight","marginLeft","MeetingDetailForm","MeetingEdit","deleteMeeting","MeetingEdit_RangePicker","MeetingDetailEditForm","MeetingConfirm","visible","showDrawer","onClose","getQuesttionaireMeeting","questtionaires","bordered","renderItem","quiz","actions","Meta","avatar","MetailConfirmForm","getQuettionaireMeetingListSuccess","Topics","remove","k","keys","setFieldsValue","add","nextKeys","_this$props$form","offset","formItemLayoutWithOutLabel","initialValue","formItems","index","validateTrigger","whitespace","width","TopicsDynamicFieldSet","SectorCreate","createSector","SectorCreateForm","SetorEdit","currentSector","updateSector","sectorId","deleteSector","getSector","SectorEditForm","getSectorDetailSuccess","sectorObject","SectorList","Rules","rulesConduct","RulesDynamicFieldSet","Record","iconLoading","enterLoading","enterIconLoading","topicsMeeting","rulesMeeting","descriptions","badge","topic","FormItem","QuestionForm","QuizCreator","formCount","questions","question","choices","el","questtionaire","quiz_QuestionForm","divider","QuizCreator_FormItem","QuizCreatorForm","createQuesttionaireQuiz","createQuesttionaireQuizSuccess","getChoices","getChoicesListSuccess","ResultsQuiz","questtionaire_id","getGradedQuesttionaires","resultsGraded","auxResultsGraded","choice","porcent","result","progress","percent","currentQuesttionaire","questtionaireId","getGradedQuesttionaireInQuesttionaireListSuccess","Step","Steps","Questions","current","steps","progressDot","q","next","submit","prev","RadioGroup","Radio","Group","Choices","questionId","usersAnswers","qId","change","es_radio","radioStyle","display","height","lineHeight","RespondQuiz","getQuestionsMeeting","questionsQuesttionaires","sizeUsersAnswers","dataSourceUsersAnswers","dataSourcesId","auxUsersAnswers","answers","createRespondQuiz","card","components_Questions","cardStyle","order","components_Choices","getQuestionListQuesttionaireDetailSuccess","respondQuiz","respondQuizData","BaseRouter","react_router","exact","path","component","TopicsCreate","SectorEdit","RulesCreate","UserMeeting","AutoComplete","OptGroup","AutoCompleteComponent","options","count","group","opt","AutoComplete_Option","auto_complete","dropdownClassName","dropdownMatchSelectWidth","dropdownStyle","optionLabelProp","suffix","DropdownNav","dropdown","overlay","menu","trigger","Header","Navbar","mode","navbar_DropdownNav","Footer","CustomLayout","navbar_Navbar","App","onTryAutoSignup","routes","isAuthenticated","Boolean","window","location","hostname","updateObject","oldObject","updateProperties","_objectSpread","initialState","reducer","arguments","action","authStart","authLogout","getUserListStart","getUserListFail","getProjectListStart","getProjectDetailStart","getProjectDetailFail","createProjectStart","createProjectSuccess","createProjectFail","getSectorListStart","getSectorDetailStart","getSectorDetailFail","createSectorStart","createSectorSuccess","createSectorFail","getMeetingListStart","getMeetingListFail","getMeetingAllListStart","getMeetingAllListSuccess","getMeetingAllListFail","getMeetingDetailStart","createMeetingStart","createMeetingFail","getQuesttionaireMeetingListStart","getQuesttionaireMeetingListSuccess","getQuesttionaireMeetingListFail","getQuesttionaireDetailStart","getQuesttionaireDetailSuccess","getQuesttionaireDetailFail","getQuestionListQuesttionaireDetailStart","getQuestionListQuesttionaireDetailFail","createRespondQuizStart","createRespondQuizSuccess","createRespondQuizFail","getGradedQuesttionaireInQuesttionaireListStart","getGradedQuesttionaireQuesttionaireListFail","getChoicesListStart","getChoicesListFail","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","projectReducer","sectorReducer","meetingReducer","quizReducer","choicesReducer","store","createStore","applyMiddleware","thunk","app","config_provider","locale","pt_BR","es","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06685b97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notPermission.a1b16249.gif\";","const Hoc = props => props.children;\n\nexport default Hoc;","import axios from 'axios';\nimport { \n\tAUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT,\n\tUSER_LIST_START, USER_LIST_SUCCESS, USER_LIST_FAIL \n} from './actionsTypes';\n\nexport const authStart = () => {\n\t\n\treturn {\n    \ttype: AUTH_START\n  \t};\n};\n\nexport const authSuccess = user => {\n\t  \n\treturn {\n\t\t\n    \ttype: AUTH_SUCCESS,\n    \tuser\n  \t};\n};\n\nexport const authFail = error => {\n\t  \n\treturn {\n\t\n\t\ttype: AUTH_FAIL,\n    \terror: error\n  \t};\n};\n\nexport const logout = () => {\n\t\n\tlocalStorage.removeItem('user');\n\t\n\treturn {\n\t\ttype: AUTH_LOGOUT\n\t};\n};\n\nconst getUserListStart = () => {\n\t\n\treturn {\n        type: USER_LIST_START\n    };\n};\n\nconst getUserListSuccess = users => {\n\t\n\treturn {\n\t\n\t\ttype: USER_LIST_SUCCESS,\n        users\n    };\n};\n\nconst getUserListFail = error => {\n\t\n\treturn {\n\t\n\t\ttype: USER_LIST_FAIL,\n      \terror: error\n    };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n\t\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\nexport const authCheckState = () => {\n\t  \n\treturn dispatch => {\n\t\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\n\t\tif (user === undefined || user === null) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\n\t\t\tconst expirationDate = new Date(user.expirationDate);\n\t\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\n\t\t\t\tdispatch(authSuccess(user));\n\t\t\t\tdispatch(\n\t\t\t\t\tcheckAuthTimeout(\n\t\t\t\t\t\t(expirationDate.getTime() - new Date().getTime()) / 1000\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n  \t};\n};\n\nexport const authLogin = (username, password) => {\n\t\n\treturn dispatch => {\n\t\n\t\tdispatch(authStart());\n\t\taxios.post('http://0.0.0.0:8000/rest-auth/login/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t})\n\t\t.then(res => {\n\t\t\tconst user = {\n\t\t\t\ttoken: res.data.key,\n\t\t\t\tusername,\n\t\t\t\tuserId: res.data.user,\n\t\t\t\tis_administrator: res.data.user_type.is_administrator,\n\t\t\t\tis_participant: res.data.user_type.is_participant,\n\t\t\t\tramal: res.data.ramal,\n\t\t\t\tname: res.data.name,\n\t\t\t\tsector: res.data.sector,\n\t\t\t\texpirationDate: new Date(new Date().getTime() + 3600 * 1000)\n\t\t\t};\n\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\tdispatch(authSuccess(user));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n};\n\nexport const authSignup = (user) => {\n\t\n\treturn dispatch => {\n\t\n\t\tdispatch(authStart());\n\t\taxios.post('http://0.0.0.0:8000/rest-auth/registration/', user)\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n};\n\nexport const getUsers = (token) => {\n\t\n\treturn dispatch => {\n\t\n\t\tdispatch(getUserListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get('http://0.0.0.0:8000/users/')\n        .then(res => {\n\t\t\tconst users = res.data;\n\t\t\tlocalStorage.setItem('users', JSON.stringify(users));\n\t\t\tdispatch(getUserListSuccess(users));\n        })\n        .catch(err => {\n            dispatch(getUserListFail(err));\n        });\n    };\n}\n\nexport const getUser = (token, userId) => {\n\t\n\treturn dispatch => {\n\t\n\t\tdispatch(authStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.get(`http://0.0.0.0:8000/users/informacoes/${ userId }/`)\n\t\t.then(res => {\n\t\t\tconst user = res.data;\n\t\t\tdispatch(authSuccess(user));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n}\n\nexport const updateUser = (token, userObject) => {\n\t\n\treturn dispatch => {\n\t\n\t\tdispatch(authStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.put(`http://0.0.0.0:8000/users/alterar_informacoes/${ userObject.userId }/`, \n\t\tuserObject)\n\t\t.then(res => {\n\t\t\tconst user = {\n\t\t\t\ttoken: token,\n\t\t\t\tusername: userObject.username,\n\t\t\t\tuserId: userObject.userId,\n\t\t\t\tis_administrator: userObject.is_administrator,\n\t\t\t\tramal: userObject.ramal,\n\t\t\t\tname: userObject.name,\n\t\t\t\temail: userObject.email,\n\t\t\t\tsector: userObject.sector,\n\t\t\t\tis_participant: !userObject.is_administrator,\n\t\t\t\texpirationDate: new Date(new Date().getTime() + 3600 * 1000)\n\t\t\t};\n\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\tdispatch(authSuccess(user));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n}\n\nexport const deleteUser = (token, userId) => {\n\t\n\treturn dispatch => {\n\t\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.delete(`http://0.0.0.0:8000/users/excluir_usuario/${ userId }/`)\n\t\tdispatch(logout());\n\t};\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const USER_LIST_START = 'USER_LIST_START';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\n\nexport const CREATE_PROJECT_START = 'CREATE_PROJECT_START';\nexport const CREATE_PROJECT_SUCCESS = 'CREATE_PROJECT_SUCCESS';\nexport const CREATE_PROJECT_FAIL = 'CREATE_PROJECT_FAIL';\n\nexport const PROJECT_LIST_START = 'PROJECT_LIST_START';\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS';\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL';\n\nexport const GET_PROJECT_DETAIL_START = 'GET_PROJECT_DETAIL_START';\nexport const GET_PROJECT_DETAIL_SUCCESS = 'GET_PROJECT_DETAIL_SUCCESS';\nexport const GET_PROJECT_DETAIL_FAIL = 'GET_PROJECT_DETAIL_FAIL';\n\nexport const CREATE_SECTOR_START = 'CREATE_SECTOR_START';\nexport const CREATE_SECTOR_SUCCESS = 'CREATE_SECTOR_SUCCESS';\nexport const CREATE_SECTOR_FAIL = 'CREATE_SECTOR_FAIL';\n\nexport const SECTOR_LIST_START = 'SECTOR_LIST_START';\nexport const SECTOR_LIST_SUCCESS = 'SECTOR_LIST_SUCCESS';\nexport const SECTOR_LIST_FAIL = 'SECTOR_LIST_FAIL';\n\nexport const GET_SECTOR_DETAIL_START = 'GET_SECTOR_DETAIL_START';\nexport const GET_SECTOR_DETAIL_SUCCESS = 'GET_SECTOR_DETAIL_SUCCESS';\nexport const GET_SECTOR_DETAIL_FAIL = 'GET_SECTOR_DETAIL_FAIL';\n\nexport const CREATE_MEETING_START = 'CREATE_MEETING_START';\nexport const CREATE_MEETING_SUCCESS = 'CREATE_MEETING_SUCCESS';\nexport const CREATE_MEETING_FAIL = 'CREATE_MEETING_FAIL';\n\nexport const MEETING_LIST_START = 'MEETING_LIST_START';\nexport const MEETING_LIST_SUCCESS = 'MEETING_LIST_SUCCESS';\nexport const MEETING_LIST_FAIL = 'MEETING_LIST_FAIL';\n\nexport const MEETING_ALL_LIST_START = 'MEETING_ALL_LIST_START';\nexport const MEETING_ALL_LIST_SUCCESS = 'MEETING_ALL_LIST_SUCCESS'; \nexport const MEETING_ALL_LIST_FAIL = 'MEETING_ALL_LIST_FAIL';\n\nexport const GET_MEETING_DETAIL_START = 'GET_MEETING_DETAIL_START';\nexport const GET_MEETING_DETAIL_SUCCESS = 'GET_MEETING_DETAIL_SUCCESS';\nexport const GET_MEETING_DETAIL_FAIL = 'GET_MEETING_DETAIL_FAIL';\n\nexport const CREATE_QUESTTIONAIRE_QUIZ_START = 'CREATE_QUESTTIONAIRE_QUIZ_START'; \nexport const CREATE_QUESTTIONAIRE_QUIZ_SUCCESS = 'CREATE_QUESTTIONAIRE_QUIZ_SUCCESS';\nexport const CREATE_QUESTTIONAIRE_QUIZ_FAIL = 'CREATE_QUESTTIONAIRE_QUIZ_FAIL';\n\nexport const GET_QUESTTIONAIRE_MEETING_LIST_START = 'GET_QUESTTIONAIRE_MEETING_LIST_START';\nexport const GET_QUESTTIONAIRE_MEETING_LIST_SUCCESS = 'GET_QUESTTIONAIRE_MEETING_LIST_SUCCESS';\nexport const GET_QUESTTIONAIRE_MEETING_LIST_FAIL = 'GET_QUESTTIONAIRE_MEETING_LIST_FAIL';\n\nexport const GET_QUESTTIONAIRE_DETAIL_START = 'GET_QUESTTIONAIRE_DETAIL_START';\nexport const GET_QUESTTIONAIRE_DETAIL_SUCCESS = 'GET_QUESTTIONAIRE_DETAIL_SUCCESS';\nexport const GET_QUESTTIONAIRE_DETAIL_FAIL = 'GET_QUESTTIONAIRE_DETAIL_FAIL';\n\nexport const GET_QUESTION_QUESTTIONAIRE_DETAIL_START = 'GET_QUESTION_QUESTTIONAIRE_DETAIL_START';\nexport const GET_QUESTION_QUESTTIONAIRE_DETAIL_SUCCESS = 'GET_QUESTION_QUESTTIONAIRE_DETAIL_SUCCESS';\nexport const GET_QUESTION_QUESTTIONAIRE_DETAIL_FAIL = 'GET_QUESTION_QUESTTIONAIRE_DETAIL_FAIL';\n\nexport const CREATE_RESPOND_QUIZ_START = 'CREATE_RESPOND_QUIZ_START';\nexport const CREATE_RESPOND_QUIZ_SUCCESS = 'CREATE_RESPOND_QUIZ_SUCCESS';\nexport const CREATE_RESPOND_QUIZ_FAIL = 'CREATE_RESPOND_QUIZ_FAIL';\n\nexport const GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_START = 'GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_START';\nexport const GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_SUCCESS = 'GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_SUCCESS';\nexport const GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_FAIL = 'GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_FAIL';\n\nexport const GET_CHOICES_START = 'GET_CHOICES_START';\nexport const GET_CHOICES_SUCCESS = 'GET_CHOICES_SUCCESS';\nexport const GET_CHOICES_FAIL = 'GET_CHOICES_FAIL';","import React from 'react';\nimport { Form, Icon, Input, Button, Spin, Layout, message } from 'antd';\nimport { connect } from 'react-redux';\n\nimport { authLogin } from '../../store/actions/auth';\n\nconst { Content } = Layout;\n\nclass Login extends React.Component {\n\n    handleSubmit = e => {\n        \n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                \n                const username = values.username;\n                const password = values.password;\n                this.props.onAuth(username, password);\n                this.props.history.push('/');\n            } else {\n\n            }\n        });\n    };\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n        const antIcon = <Icon type = 'loading' style = {{ fontSize: 24 }} spin />;\n\n        if(this.props.error) {\n            message.error('Usuário ou Senha Incorretos. Tente Novamente!');\n        }\n\n        return (\n\n            <div>\n                {\n                    this.props.loading ? (\n\n                        <Spin indicator = { antIcon } />\n\n                    ): (\n                        <Content className = 'contentLogin'>\n                            <Form onSubmit = { this.handleSubmit } className = 'login-form' >\n\n                                <Form.Item className = 'inputFormLoginUser'>\n                                    {\n                                        getFieldDecorator('username', {\n                                        rules: [{ \n                                            required: true, \n                                            message: 'Por favor, Coloque o Seu Usuário!' \n                                        }],\n                                    })(\n                                        <Input\n                                            \n                                            prefix = { \n                                                <Icon \n                                                    type = 'user' \n                                                    style = {{ \n                                                        color: 'rgba(0,0,0,.25)' \n                                                    }} \n                                                />\n                                            }\n                                            placeholder = 'Usuário'\n                                        />,\n                                    )}\n                                </Form.Item>\n\n                                <Form.Item className = 'inputFormLoginPassword'>\n                                    {\n                                        getFieldDecorator('password', {\n                                        rules: [{ \n                                            required: true, \n                                            message: 'Por favor, Coloque Sua Senha!' }],\n                                    })(\n                                        <Input\n                                            prefix = {\n                                                <Icon \n                                                    type = 'lock' \n                                                    style = {{ \n                                                        color: 'rgba(0,0,0,.25)' \n                                                    }} \n                                                />\n                                            }\n                                            type = 'password'\n                                            placeholder = 'Senha'\n                                        />,\n                                    )}\n                                </Form.Item>\n\n                                <Button \n                                    type = 'primary' \n                                    htmlType = 'submit' \n                                    className = 'buttonSubmitLogin'>\n                                    Login\n                                </Button>\n                            </Form>\n                        </Content>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nconst LoginForm = Form.create()(Login);\n\nconst mapStateToProps = (state) => {\n    return {\n        \n        loading: state.auth.loading,\n        error: state.auth.error\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(authLogin(username, password))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import axios from 'axios';\nimport { \n        PROJECT_LIST_START, PROJECT_LIST_SUCCESS, PROJECT_LIST_FAIL,\n        GET_PROJECT_DETAIL_START, GET_PROJECT_DETAIL_SUCCESS, GET_PROJECT_DETAIL_FAIL,\n        CREATE_PROJECT_START, CREATE_PROJECT_SUCCESS, CREATE_PROJECT_FAIL\n} from './actionsTypes';\n\nconst getProjectListStart = () => {\n    \n    return {\n        type: PROJECT_LIST_START\n    };\n};\n\nconst getProjectListSuccess = projects => {\n    \n    return {\n    \n        type: PROJECT_LIST_SUCCESS,\n        projects\n    };\n};\n\nconst getProjectListFail = error => {\n    \n    return {\n    \n        type: PROJECT_LIST_FAIL,\n        error: error\n    };\n};\n\nconst getProjectDetailStart = () => {\n    \n    return {\n        type: GET_PROJECT_DETAIL_START\n    };\n};\n  \nconst getProjectDetailSuccess = project => {\n    \n    return {\n    \n        type: GET_PROJECT_DETAIL_SUCCESS,\n        project\n    };\n};\n  \nconst getProjectDetailFail = error => {\n    \n    return {\n    \n        type: GET_PROJECT_DETAIL_FAIL,\n        error: error\n    };\n};\n\nconst createProjectStart = () => {\n    \n    return {\n        type: CREATE_PROJECT_START\n    };\n};\n  \nconst createProjectSuccess = project => {\n    \n    return {\n        type: CREATE_PROJECT_SUCCESS,\n        project\n    };\n};\n  \nconst createProjectFail = error => {\n    \n    return {\n    \n        type: CREATE_PROJECT_FAIL,\n        error: error\n    };\n};\n\nexport const getProjects = token => {\n    \n    return dispatch => {\n    \n        dispatch(getProjectListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get('http://0.0.0.0:8000/projects/list_projects_sectors/')\n        .then(res => {\n            const projects = res.data;\n            dispatch(getProjectListSuccess(projects));\n        })\n        .catch(err => {\n            dispatch(getProjectListFail(err));\n        });\n    };\n};\n\nexport const getProject = (token, projectId) => {\n    \n    return dispatch => {\n    \n        dispatch(getProjectDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.get(`http://0.0.0.0:8000/projects/detail/${ projectId }/`)\n        .then(res => {\n            const project = res.data;\n            dispatch(getProjectDetailSuccess(project));\n        })\n        .catch(err => {\n            dispatch(getProjectDetailFail(err));\n        });\n    };\n};\n  \nexport const createProject = (token, project) => {\n\n    return dispatch => {\n    \n        dispatch(createProjectStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.post('http://0.0.0.0:8000/projects/create/', project)\n        .then(res => {\n            dispatch(createProjectSuccess(res));\n        })\n        .catch(err => {\n            dispatch(createProjectFail(err));\n        });\n    };\n};\n\nexport const updateProject = (token, projectObject) => {\n    \n    return dispatch => {\n    \n        dispatch(getProjectListStart());\n        axios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n        };\n        axios.put(`http://0.0.0.0:8000/projects/update/${ projectObject.projectId }/`, \n        projectObject)\n\t\t.then(res => {\n\t\t\tconst project = {\n                projectId: projectObject.id,\n\t\t\t\ttitle: projectObject.title,\n                status: projectObject.status,\n                sector: projectObject.sector\n            };\n            dispatch(getProjectListSuccess(project));\n\t\t})\n\t\t.catch(err => {\n            dispatch(getProjectListFail(err));\n\t\t});\n    };\n}\n\nexport const deleteProject = (token, projectId) => {\n    \n    return dispatch => {\n    \n        axios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${ token }`\n\t\t};\n        axios.delete(`http://0.0.0.0:8000/projects/delete/${ projectId }/`);\n\t};\n}","import axios from 'axios';\nimport { \n    CREATE_MEETING_START, CREATE_MEETING_SUCCESS, CREATE_MEETING_FAIL,\n    GET_MEETING_DETAIL_START, GET_MEETING_DETAIL_SUCCESS, GET_MEETING_DETAIL_FAIL,\n    MEETING_LIST_START, MEETING_LIST_SUCCESS, MEETING_LIST_FAIL,\n    MEETING_ALL_LIST_START, MEETING_ALL_LIST_SUCCESS, MEETING_ALL_LIST_FAIL\n} from './actionsTypes';\n\nconst getMeetingDetailStart = () => {\n    \n    return {\n        type: GET_MEETING_DETAIL_START \n    };\n}\n\nconst getMeetingDetailSuccess = meeting => {\n    \n    return {\n    \n        type: GET_MEETING_DETAIL_SUCCESS,\n        meeting\n    };\n}\n\nconst getMeetingDetailFail = error => {\n    \n    return {\n    \n        type: GET_MEETING_DETAIL_FAIL,\n        error: error\n    };\n}\n\nconst createMeetingStart = () => {\n    \n    return {\n        type: CREATE_MEETING_START\n    };\n}\n\nconst createMeetingSuccess = meeting => {\n    \n    return {\n    \n        type: CREATE_MEETING_SUCCESS,\n        meeting\n    };\n}\n\nconst createMeetingFail = error => {\n    \n    return {\n    \n        type: CREATE_MEETING_FAIL,\n        error: error\n    };\n}\n\nconst getMeetingListStart = () => {\n    \n    return {\n        type: MEETING_LIST_START\n    };\n}\n\nconst getMeetingListSuccess = meetings => {\n    \n    return {\n    \n        type: MEETING_LIST_SUCCESS,\n        meetings\n    };\n}\n\nconst getMeetingListFail = error => {\n    \n    return {\n    \n        type: MEETING_LIST_FAIL,\n        error: error\n    };\n}\n\nconst getMeetingAllListStart = () => {\n    \n    return {\n        type: MEETING_ALL_LIST_START\n    };\n}\n\nconst getMeetingAllListSuccess = allMeetings => {\n    \n    return {\n    \n        type: MEETING_ALL_LIST_SUCCESS,\n        allMeetings\n    };\n}\n\nconst getMeetingAllListFail = error => {\n    \n    return {\n    \n        type: MEETING_ALL_LIST_FAIL,\n        error: error\n    };\n}\n\nexport const getAllMeeting = (token) => {\n    \n    return dispatch => {\n    \n        dispatch(getMeetingAllListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/meetings/`)\n        .then(res => {\n            const meeting = res.data;\n            dispatch(getMeetingAllListSuccess(meeting));\n        })\n        .catch(err => {\n            dispatch(getMeetingAllListFail(err));\n        });\n    };\n};\n\nexport const getMeetings = (token, projectId) => {\n    \n    return dispatch => {\n    \n        dispatch(getMeetingListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/meetings/meetings_project/${ projectId }/`)\n        .then(res => {\n            const meetings = res.data;\n            dispatch(getMeetingListSuccess(meetings));\n        })\n        .catch(err => {\n            dispatch(getMeetingListFail(err));\n        });\n    };\n};\n\nexport const getMeeting = (token, meetingId) => {\n    \n    return dispatch => {\n    \n        dispatch(getMeetingDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/meetings/detail/${ meetingId }/`)\n        .then(res => {\n            const meeting = res.data;\n            dispatch(getMeetingDetailSuccess(meeting));\n        })\n        .catch(err => {\n            dispatch(getMeetingDetailFail(err));\n        });\n    };\n};\n  \nexport const createMeeting = (token, meeting) => {\n\n    return dispatch => {\n    \n        dispatch(createMeetingStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.post('http://0.0.0.0:8000/meetings/create/', meeting)\n        .then(meeting => {\n            dispatch(createMeetingSuccess(meeting));\n        })\n        .catch(err => {\n            dispatch(createMeetingFail(err));\n        });\n    };\n};\n\nexport const updateMeeting = (token, meetingObject) => {\n\n    return dispatch => {\n    \n        dispatch(getMeetingDetailStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${ token }`\n\t\t};\n        axios.put(`http://0.0.0.0:8000/meetings/update/${ meetingObject.id }/`, \n        meetingObject)\n\t\t.then(meeting => {\n\t\t\tdispatch(getMeetingDetailSuccess(meeting.data));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(getMeetingDetailFail(err));\n\t\t});\n\t};\n}\n\nexport const deleteMeeting = (token, meetingId) => {\n    \n    return dispatch => {\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${ token }`\n\t\t};\n        axios.delete(`http://0.0.0.0:8000/meetings/delete/${ meetingId }/`);\n\t};\n}","export function dynamicSort(property) {\n    \n    var sortOrder = 1;\n\n    if(property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n\n    return function (a,b) {\n        if(sortOrder === -1){\n            return b[property].localeCompare(a[property]);\n        }else{\n            return a[property].localeCompare(b[property]);\n        }        \n    }\n}\n\nexport function getSectorInProject(sectors, currentProject) {\n\n    let sector_name = '';\n\n    for(let aux = 0; aux < sectors.length; aux ++) {\n        if(currentProject.sector === sectors[aux].id) {\n            sector_name = sectors[aux].name;\n            break;\n        } else {\n\n        }\n    }\n\n    return sector_name;\n}\n\nexport function size(obj) {\n\t\t\n    var size = 0, key;\n    \n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n}\n\nexport function getUsersInSector(users, sectors, currentProject) {\n\n    let dataSourceUsers = {\n        innerArrayUsers: [\n\n        ]\n    }\n\n    for(let aux = 0; aux < users.length; aux ++) {\n        \n        if(users[aux].is_administrator === true) {\n        \n            for(let auxSector = 0; auxSector < sectors.length; auxSector ++) {\n        \n                if(users[aux].sector === sectors[auxSector].id \n                    && users[aux].sector !== null \n                    && users[aux].sector === currentProject.sector) {\n        \n                        dataSourceUsers.innerArrayUsers.push({\n\n                            key: users[aux].id,\n                            name: users[aux].name,\n                            username: users[aux].username\n                        }\n                    );\n                }\n            }\n        } else {\n\n        }\n    }\n\n    return dataSourceUsers.innerArrayUsers;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { List, Skeleton, Table, Tag, Button, Icon } from 'antd';\n\nimport { getProjects } from '../../store/actions/project';\nimport { getUser } from '../../store/actions/auth';\nimport { getAllMeeting } from '../../store/actions/meeting';\nimport { dynamicSort } from '../utils';\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\n\nclass ProjectsList extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n\n            const user = JSON.parse(localStorage.getItem('user'));\n            this.forceUpdate();\n            this.props.getProjects(user.token);\n            this.props.getAllMeeting(user.token);\n\t\t\tthis.props.getUser(user.token, this.props.currentUser.userId);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n\n                this.forceUpdate();\n                this.props.getProjects(newProps.token);\n                this.props.getAllMeeting(newProps.token);\n                this.props.getUser(newProps.token, newProps.currentUser.userId);\n                this.forceUpdate();\n            }\n        }\n    }\n\n    render() {\n        \n        const { currentUser } = this.props;\n        const projects = this.props.projects;\n        const allMeetings = this.props.allMeetings;\n        let project_id = 0;\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        let confirm = false;\n\n        let dataSourceMeetings = {\n            innerArray: [\n\n            ]\n        }\n\n        for(let aux = 0; aux < allMeetings.length; aux ++) {\n\n            if(allMeetings[aux].status === 'Confirmada') {\n                confirm = true;\n            } else {\n                confirm = false;\n            }\n\n            if(currentUser.name === allMeetings[aux].meeting_leader) {\n\n                dataSourceMeetings.innerArray.push({\n                        \n                    key: allMeetings[aux].id,\n                    title: allMeetings[aux].title,\n                    subject_matter: allMeetings[aux].subject_matter,\n                    sector: allMeetings[aux].sector\n                });\n            } else {\n\n                for(let usersMeeting = 0; usersMeeting < allMeetings[aux].users.length; usersMeeting ++) {\n\n                    if(currentUser.name === allMeetings[aux].users[usersMeeting]) {\n                    \n                        dataSourceMeetings.innerArray.push({\n                            \n                            key: allMeetings[aux].id,\n                            title: allMeetings[aux].title,\n                            subject_matter: allMeetings[aux].subject_matter,\n                            sector: allMeetings[aux].sector\n                        });\n                        confirm = true;\n                    } else {\n                        confirm = false;\n                    }\n                }\n            }\n        }\n\n        for(let aux = 0; aux < projects.length; aux ++) {\n\n            if(currentUser.sector === projects[aux].sector) {\n\n                project_id = projects[aux].id;\n                dataSource.innerArray.push({\n                \n                    key: projects[aux].id,\n                    title: projects[aux].title,\n                    sector: projects[aux].sector,\n                    tags: [ projects[aux].status ]\n                });\n            } else {\n                \n            }\n        }\n\n        dataSource.innerArray.sort(dynamicSort('title'));\n        dataSourceMeetings.innerArray.sort(dynamicSort('title'));\n\n        return (\n            \n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage />\n                    ) : (\n                            this.props.loading ? (\n                                <Skeleton active />\n                            ) : (\n                                <div className = 'contentList'>\n                                    <h1 className = 'texth1'> Projetos Setoriais </h1>\n                                    <Table columns = {\n                                    [{\n                                        title: 'Título',\n                                        dataIndex: 'title',\n                                        key: 'title',\n                                        render: (text, record) => (\n                                            <Link to = { `/lista_de_reunioes/${ record.key }/`} >\n                                                <List.Item>\n                                                    <b>{ text }</b>\n                                                </List.Item>\n                                            </Link>\n                                        )   \n                                    },\n                                    {\n                                        title: 'Setor Responsável',\n                                        dataIndex: 'sector',\n                                        key: 'sector',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Status',\n                                        key: 'tags',\n                                        dataIndex: 'tags',\n                                        render: tags => (\n                                            <span>\n                                            {\n                                                tags.map(tag => {\n                                                    let color = tag.length > 5 ? 'geekblue' : 'green';\n                                                    if (tag === 'Pendente') {\n                                                        color = 'orange';\n                                                    } else {\n                                                        color = 'green';\n                                                    }\n                                                    return (\n                                                    <Tag color = { color } key = { tag }>\n                                                        <b> { tag.toUpperCase() } </b> \n                                                    </Tag>\n                                                    );\n                                                })\n                                            }\n                                            </span>\n                                        ),\n                                    },\n                                    {\n                                        title: 'Ação',\n                                        key: 'action',\n                                        render: (record) => (\n                                            <span>\n                                                <Button \n                                                    type = 'ghost' \n                                                    htmlType = 'submit' \n                                                    className = 'buttonEdit'\n                                                >\n                                                    <Link to = { `/editar_projeto/${ record.key }/`} >\n                                                        <Icon type = 'edit' className = 'icons'/>\n                                                            <b> Editar Projeto </b>\n                                                    </Link>\n                                                </Button>\n                                            </span>\n                                        ),\n                                    },\n                                    ]}\n                                    dataSource = {\n                                        dataSource.innerArray\n                                    } \n                                />\n                                <h1 className = 'texth1'> Reuniões Que Participo </h1>\n                                \n                                <Table columns = {\n                                    [{\n                                        title: 'Título',\n                                        dataIndex: 'title',\n                                        key: 'title',\n                                        render: (text) => (\n                                            <b> { text } </b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Assunto',\n                                        dataIndex: 'subject_matter',\n                                        key: 'subject_matter',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Setor Responsável',\n                                        dataIndex: 'sector',\n                                        key: 'sector',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Ação',\n                                        key: 'action',\n                                        render: (record) => (\n                                            <span>\n                                                {\n                                                    confirm === true ? (\n                                                        <Button \n                                                            type = 'ghost' \n                                                            htmlType = 'submit' \n                                                            className = 'buttonSave'\n                                                        >\n                                                            <Link to = { `/reuniao_confirmada/${ record.key }/`} >\n                                                                <Icon type = 'eye' className = 'icons'/>\n                                                                    <b> Ver Reunião </b>\n                                                            </Link>\n                                                        </Button>\n                                                    ) : (\n                                                        <Button \n                                                            type = 'ghost' \n                                                            htmlType = 'submit' \n                                                            className = 'buttonSave'\n                                                        >\n                                                            <Link to = { `/detalhes_reuniao/${ record.key }/${ project_id }/`} >\n                                                                <Icon type = 'eye' className = 'icons'/>\n                                                                    <b> Ver Reunião </b>\n                                                            </Link>\n                                                        </Button>\n                                                    )\n                                                }\n                                            \n                                            </span>\n                                        ),\n                                    },\n                                        ]}\n                                        dataSource = {\n                                            dataSourceMeetings.innerArray\n                                        } \n                                    />\n                            </div>\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return {\n        \n        token: state.auth.token,\n        projects: state.project.projects,\n        loading: state.project.loading,\n        currentUser: state.auth.currentUser,\n        allMeetings: state.meeting.allMeetings\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n        \n\t\tgetUser: (token, userId) => dispatch(getUser(token, userId)),\n        getProjects: token => dispatch(getProjects(token)),\n        getAllMeeting: token => dispatch(getAllMeeting(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsList);","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport ProjectList from '../projects/ProjectList';\n\nconst { Content } = Layout;\n\nclass Homepage extends Component {\n\n    render () {\n\n        return (\n            \n            <div>\n                {\n                    this.props.token !== null ? (\n                        <Content>\n                            <ProjectList/>\n                        </Content>\n                    ) : (\n                        <div className = 'contentProjectOff'>\n                            <p className = 'textOff'>\n                                Bem Vindo ao sistema de Gerenciamento de Reuniões e Atas (Grata), o \n                                software que a sua empresa necessita para alcançar maiores níveis de\n                                aproveitamento em seus encontros. Planeje suas reuniões, defina os\n                                participantes, gere atas, diminua o desperdício de tempo com papeis e\n                                deixe que o Grata ajude você e sua empresa a alcançar seus objetivos\n                                estratégicos.\n                                <br></br>\n                                <br></br>                                \n                                O Grata é uma ferramenta Open-Source,\n                                ou seja, o código dela é aberto e pode ser encontrado nos repositórios \n                                <a href = 'https://github.com/FGAProjects/Grata-Frontend'> FrontEnd </a> \n                                e <a href = 'https://github.com/FGAProjects/Grata-Backend'>Backend.</a>\n                                <br></br>\n                                Caso Deseje uma documentação sobre o projeto, basta clicar neste\n                                <a href = 'https://github.com/FGAProjects/TCC'> link</a>.\n                                <br></br>\n                                Contato com o desenvolvedor via github: \n                                <a href = 'https://github.com/MrVictor42'> MrVictor42</a>.\n                            </p>\n                        </div>\n                    )   \n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return {\n        token: state.auth.token\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Homepage));","import React, { Component } from 'react';\nimport { Button, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport notPermission from '../../images/notPermission.gif';\n\nclass NotPermission extends Component {\n\n    render() {\n        return (\n            <div align = 'center'>\n                <div className = 'contentNotPermission'>\n                    <h1 className = 'texth1'> \n                        Caro Usuário (a), Você Não Possui Autorização Para Acessar Esta Página.\n                    </h1>\n                    <img className = 'imgContent' src = { notPermission } alt = '' />\n\n                    <Button\n                        className = 'buttonEdit' \n                        type = 'ghost' \n                        htmlType = 'submit'\n                        style = {{\n                            marginBottom: '30px'\n                        }} \n                    >\n                        <Link to = { '/' } >\n                            <Icon className = 'icons' type = 'arrow-right'/>\n                                Página Inicial\n                        </Link>\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NotPermission;","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, Select, message } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fail } from 'assert';\n\nimport Homepage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\nimport Hoc from '../../hoc/hoc';\n\nimport { authSignup } from '../../store/actions/auth';\n\nconst Option = Select.Option;\n  \nclass UserRegister extends Component {\n\n\tconstructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical'\n\t\t};\n\t}\n\n\tstate = {\n\t\tconfirmDirty: false\n\t};\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\t\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\n\t\t\tif (!err) {\n\t\t\t\tlet is_administrator = false;\n\n\t\t\t\tif(values.userType === 'administrator') {\n\t\t\t\t\tis_administrator = true;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tconst user = {\n\n\t\t\t\t\tusername: values.username,\n\t\t\t\t\tname: values.name,\n\t\t\t\t\tramal: values.ramal,\n\t\t\t\t\temail: values.email,\n\t\t\t\t\tpassword1: values.password1,\n\t\t\t\t\tpassword2: values.password2,\n\t\t\t\t\tis_administrator: is_administrator\n\t\t\t\t}\n\n\t\t\t\tif((this.props.onAuth(user)) !== fail) {\n\t\t\t\t\tmessage.success('O Usuário ' + values.username + ' Foi Cadastrado Com Sucesso!');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Cadastrar o Usuário. ' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n\t};\n\n\thandleConfirmBlur = e => {\n\t\t\n\t\tconst { value } = e.target;\n\t\tthis.setState({ \n\t\t\tconfirmDirty: this.state.confirmDirty || !!value \n\t\t});\n\t};\n\n\tcompareToFirstPassword = (rule, value, callback) => {\n\t\t\n\t\tconst { form } = this.props;\n\t\tif (value && value !== form.getFieldValue('password1')) {\n\t\t\tcallback('As senhas digitadas não são iguais!');\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tvalidateToNextPassword = (rule, value, callback) => {\n\t\t\n\t\tconst { form } = this.props;\n\t\tif (value && this.state.confirmDirty) {\n\t\t\tform.validateFields(['password2'], { force: true });\n\t\t}\n\t\tcallback();\n\t};\n\n\trender() {\n\t\t\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuser.is_administrator ? (\n\t\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Criar Novo Usuário </h1>\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit = { this.handleSubmit } >\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Nome Completo' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('name', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira Seu Nome Completo!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'user' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Nome Completo'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Usuário' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('username', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque Seu Usuário!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'O Usuário Pode Ter no Máximo 10 Caracteres!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'user' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Usuário'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'E-mail' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('email', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Esse tipo de E-mail Não é Válido!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Coloque Seu E-mail!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix = { <Icon type = 'mail' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Email'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Ramal' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('ramal', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque Seu Ramal!' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'phone' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'number' placeholder = 'Ramal'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label='Senha' hasFeedback className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('password1', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira Sua Senha!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidator: this.validateToNextPassword,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'lock' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'password' placeholder = 'Senha'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Repita a Senha' hasFeedback \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('password2', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Repita a Sua Senha!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidator: this.compareToFirstPassword,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'lock' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'password' placeholder = 'Repita sua senha' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur = { this.handleConfirmBlur } \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Tipo de Usuário' hasFeedback \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('userType', {\n\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Tipo de Usuário!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select placeholder = 'Escolha o Tipo de Usuário' >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value = 'administrator'> Administrador </Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value = 'participant'> Participante da Reunião </Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' htmlType = 'submit' className = 'buttonSave'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'save'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCadastrar Usuário\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'default' className = 'buttonCancel'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/lista_de_projetos/' }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'stop'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<NotPermission/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst UserRegisterForm = Form.create()(UserRegister);\n\nconst mapStateToProps = (state) => {\n\n\treturn {\n\t\t\n\t\tloading: state.loading,\n\t\terror: state.error,\n\t\ttoken: state.auth.token\n\t};\n}\n\nconst mapDispatchToProps = dispatch => {\n\n\treturn {\n\t\tonAuth: (user) => dispatch(authSignup(user))\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRegisterForm);","import React, { Component } from 'react';\nimport { Skeleton, Form, Input, Button, Modal, message, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Homepage from '../homepage/Homepage';\nimport Hoc from '../../hoc/hoc';\n\nimport { getUser, deleteUser } from '../../store/actions/auth';\n\nconst { confirm } = Modal;\n\nclass UserDetail extends Component {\n\n\tconstructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical'\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\tthis.props.getUser(this.props.token, this.props.currentUser.userId);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\t\tthis.props.getUser(newProps.token, newProps.currentUser.userId);\n\t\t\t}\n\t\t}\n\t}\n\n\tshowDeleteConfirm = (token, name, userId) => {\n\t\t\n\t\tconst propsForms = this.props;\n\t\t\n\t\tconfirm ({\n\t\t\ttitle: 'Exclusão de Conta',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir a Conta de ' + name + '?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n\t\t\n\t\t\tonOk() {\n\t\t\t\tpropsForms.deleteUser(token, userId);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Conta Excluída Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tpropsForms.history.push('/')\n\t\t\t},\n\t\t\tonCancel() {\n\t\t\t\tmessage.success('Exclusão de Conta Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst { currentUser } = this.props;\n\t\tlet token = this.props.token;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\n\t\tif(currentUser.sector === null) {\n\t\t\tcurrentUser.sector = 'Não Possui Setor no Momento';\n\t\t}\n\n\t\tif(token === undefined) {\n\t\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\t\ttoken = user.token;\n\t\t}\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Informações Cadastradas </h1>\n\t\t\t\t\t\t\t\t\t<Form layout = 'vertical' className = 'formUser'>\n\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\tlabel = 'Nome' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.name } \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\tlabel = 'Usuário' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.username } \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\tlabel = 'Email' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.email } \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\n\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\tlabel = 'Setor' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.sector } \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\tlabel = 'Ramal' \n\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.ramal } \n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcurrentUser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Administrador' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcurrentUser.is_participant === true ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Participante da Reunião'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t) : null\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonEdit' \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/alterar_informacoes/' } >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'icons'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'edit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEditar Perfil\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonDelete'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = { () => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.showDeleteConfirm(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost'\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'delete' />\n\t\t\t\t\t\t\t\t\t\t\t\t\tExcluir Perfil \n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst UserDetailForm = Form.create()(UserDetail);\n\nconst mapStateToProps = state => {\n\n\treturn {\n\n\t\ttoken: state.auth.token,\n\t\tcurrentUser: state.auth.currentUser\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\n\treturn {\n\n\t\tgetUser: (token, userId) => dispatch(getUser(token, userId)),\n\t\tdeleteUser: (token, userId) => dispatch(deleteUser(token, userId))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetailForm);","import axios from 'axios';\nimport {\n    CREATE_SECTOR_START, CREATE_SECTOR_SUCCESS, CREATE_SECTOR_FAIL,\n    SECTOR_LIST_START, SECTOR_LIST_SUCCESS, SECTOR_LIST_FAIL,\n    GET_SECTOR_DETAIL_START, GET_SECTOR_DETAIL_SUCCESS, GET_SECTOR_DETAIL_FAIL\n} from './actionsTypes';\n\nconst getSectorListStart = () => {\n    return {\n        type: SECTOR_LIST_START\n    };\n}\n\nconst getSectorListSuccess = sectors => {\n    return {\n        type: SECTOR_LIST_SUCCESS,\n        sectors\n    };\n}\n\nconst getSectorListFail = error => {\n    return {\n        type: SECTOR_LIST_FAIL,\n        error: error\n    };\n}\n\nconst getSectorDetailStart = () => {\n    return {\n        type: GET_SECTOR_DETAIL_START\n    };\n}\n\nconst getSectorDetailSuccess = sector => {\n    return {\n        type: GET_SECTOR_DETAIL_SUCCESS,\n        sector\n    };\n}\n  \nconst getSectorDetailFail = error => {\n    return {\n        type: GET_SECTOR_DETAIL_FAIL,\n        error: error\n    }\n}\n\nconst createSectorStart = () => {\n    return {\n        type: CREATE_SECTOR_START\n    };\n};\n  \nconst createSectorSuccess = sector => {\n    return {\n        type: CREATE_SECTOR_SUCCESS,\n        sector\n    };\n};\n  \nconst createSectorFail = error => {\n    return {\n        type: CREATE_SECTOR_FAIL,\n        error: error\n    };\n};\n\nexport const getSectors = token => {\n    return dispatch => {\n        dispatch(getSectorListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get('http://0.0.0.0:8000/sectors/')\n        .then(res => {\n            const sectors = res.data;\n            dispatch(getSectorListSuccess(sectors));\n        })\n        .catch(err => {\n            dispatch(getSectorListFail(err));\n        });\n    };\n};\n\nexport const getSector = (token, sectorId) => {\n    return dispatch => {\n        dispatch(getSectorDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/sectors/detail/${ sectorId }/`)\n        .then(res => {\n            const sector = res.data;\n            dispatch(getSectorDetailSuccess(sector));\n        })\n        .catch(err => {\n            dispatch(getSectorDetailFail(err));\n        });\n    };\n};\n  \nexport const createSector = (token, sector) => {\n    return dispatch => {\n        dispatch(createSectorStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${token}`\n        };\n        axios.post('http://0.0.0.0:8000/sectors/create/', sector)\n        .then(res => {\n            dispatch(createSectorSuccess(res));\n        })\n        .catch(err => {\n            dispatch(createSectorFail(err));\n        });\n    };\n};\n\nexport const updateSector = (token, sectorObject) => {\n\treturn dispatch => {\n\t\tdispatch(getSectorListStart());\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t  \tAuthorization: `Token ${token}`\n\t\t};\n\t\taxios.put(`http://0.0.0.0:8000/sectors/update/${ sectorObject.id }/`, sectorObject)\n\t\t.then(res => {\n\t\t\tconst sector = {\n                sectorId: sectorObject.id,\n\t\t\t\tinitials: sectorObject.initials,\n\t\t\t\tname: sectorObject.name\n\t\t\t};\n\t\t\tdispatch(getSectorListSuccess(sector));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(getSectorListFail(err));\n\t\t});\n\t};\n}\n\nexport const deleteSector = (token, sectorId) => {\n\treturn dispatch => {\n\t\taxios.defaults.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Token ${ token }`\n\t\t};\n        axios.delete(`http://0.0.0.0:8000/sectors/delete/${ sectorId }/`);\n\t};\n}","import React, { Component } from 'react';\nimport { Skeleton, Form, Input, Button, Icon, message, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\n\nimport { getUser, updateUser } from '../../store/actions/auth';\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\n\nconst Option = Select.Option;\n\nclass UserEdit extends Component {\n\n    constructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\n\t\t\tthis.props.getUser(this.props.token, this.props.currentUser.userId);\n\t\t\tthis.props.getSectors(this.props.token);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tthis.props.getUser(newProps.token, newProps.currentUser.userId);\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\t\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\t\n\t\t\tif (!err) {\n\t\t\n\t\t\t\tconst { currentUser } = this.props;\n\t\t\t\tconst userGetItem = JSON.parse(localStorage.getItem('user'));\n\t\t\t\tconst token = userGetItem.token;\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tlet sector_id = 0;\n\n\t\t\t\tif(values.sector === undefined) {\n\t\t\n\t\t\t\t\tmessage.warning('O Setor Não Pode Ser Nulo.' + \n\t\t\t\t\t\t\t\t\t'Caso Não Tenha Setores Cadastrados, ' +\n\t\t\t\t\t\t\t\t\t'Entre em Contato Com o Administrador do Setor ' + \n\t\t\t\t\t\t\t\t\t'ou Com o Desenvolvedor');\n\t\t\t\t\tthis.props.history.push('/informacoes_usuario/');\n\t\t\t\t} else {\n\t\t\n\t\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\n\t\t\t\t\t\tif(sectors[aux].initials === values.sector) {\n\t\t\t\t\t\t\tsector_id = sectors[aux].id;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\n\t\t\t\t\tconst user = {\n\n\t\t\t\t\t\tuserId: currentUser.id,\n\t\t\t\t\t\temail: currentUser.email,\n\t\t\t\t\t\tusername: currentUser.username,\n\t\t\t\t\t\tramal: values.ramal,\n\t\t\t\t\t\tname: values.name,\n\t\t\t\t\t\tis_administrator: currentUser.is_administrator,\n\t\t\t\t\t\tis_participant: !currentUser.is_administrator,\n\t\t\t\t\t\tsector: sector_id\n\t\t\t\t\t};\n\n\t\t\t\t\tif((this.props.updateUser(token, user)) !== fail) {\n\t\t\t\t\t\tmessage.success('O Usuário ' + currentUser.username + \n\t\t\t\t\t\t\t\t\t\t' Teve Suas Informações Alteradas Com Sucesso!');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.error('Não Foi Possível Alterar Informações do Usuário. ' + \n\t\t\t\t\t\t\t\t\t'Entre em contato com o desenvolvedor!');\n\t\t\t\t\t}\n\t\t\t\t\tthis.props.history.push('/informacoes_usuario/');\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n\t};\n\n    render() {\n\n\t\tconst { currentUser } = this.props;\n\t\tconst sectors = this.props.sectors;\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\t\t\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n\t\t}\n\n\t\tif(currentUser.sector === null) {\n\t\t\tcurrentUser.sector = 'Não Possui Setor no Momento';\t\t\t\n\t\t}\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n            dataSource.innerArray.push(\n                {\n                    key: sectors[aux].id,\n                    initials: sectors[aux].initials,\n                    name: sectors[aux].name\n                }\n\t\t\t); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : this.props.loading ? (\n\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Informações Cadastradas </h1>\n\t\t\t\t\t\t\t\t<Form layout = 'vertical' className = 'formUser'>\n\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\tlabel = 'Nome' \n\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.name } \n\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\tlabel = 'Usuário' \n\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.username } \n\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\tlabel = 'Email' \n\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.email } \n\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\tlabel = 'Setor' \n\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.sector } \n\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\tlabel = 'Ramal' \n\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\tvalue = { currentUser.ramal } \n\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcurrentUser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Administrador' \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcurrentUser.is_participant === true ? (\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Tipo de Usuário' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = 'Participante da Reunião'\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } />\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t) : null\t\n\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsectors.length === 0 ? (\n\t\t\t\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t\t\t\t<div align = 'center' className = 'content'>\n\t\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> \n\t\t\t\t\t\t\t\t\t\t\t\tVocê Não Possui Setor Cadastrado um Antes e Volte Aqui Depois \n\t\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' className = 'buttonSubmit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/criar_setor/' } >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'highlight'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCriar Setor\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' className = 'buttonCancel'>\t\t\t\t\t\t\t\t<Link to = { '/informacoes_usuario/' } >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'stop'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Informações A Serem Alteradas </h1>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form layout = 'vertical' onSubmit = { this.handleSubmit } >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Nome Completo'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('name', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira Seu Nome Completo!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix = { <Icon type = 'user'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Nome Completo'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Setor' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\thasFeedback \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('sector', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Setor do Usuário!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select placeholder = 'Escolha o Setor' >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ dataSource.innerArray.map(sector => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey = { sector.key } \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { sector.initials }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ sector.name }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Ramal'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('ramal', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque Seu Ramal!' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix = { <Icon type = 'phone'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'number'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Ramal'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonEdit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'edit'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAlterar Informações\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' className = 'buttonCancel'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/informacoes_usuario/' }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'stop' className = 'icons'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n    }\n}\n\nconst UserEditForm = Form.create()(UserEdit);\n\nconst mapStateToProps = state => {\n\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n\t\tcurrentUser: state.auth.currentUser,\n\t\tsectors: state.sector.sectors\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n\t\tgetUser: (token, userId) => dispatch(getUser(token, userId)),\n\t\tupdateUser: (token, user) => dispatch(updateUser(token, user)),\n\t\tgetSectors: token => dispatch(getSectors(token))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Table, Tag } from 'antd';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\n\nimport { getUsers } from '../../store/actions/auth';\nimport { dynamicSort } from '../utils';\n\nclass UserList extends Component {\n\n    componentDidMount() {\n\n        try {\n\n            if (this.props.token !== undefined && this.props.token !== null) {\n        \n                this.forceUpdate();\n                this.props.getUsers(this.props.token);\n            }\n        } catch (error) {\n\n        }    \n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\n        try {\n\n            if (newProps.token !== this.props.token) {\n        \n                if (newProps.token !== undefined && newProps.token !== null) {\n            \n                    this.forceUpdate();\n                    this.props.getUsers(newProps.token);\n                }\n            }\n        } catch(error) {\n\n        }\n    }\n\n    render() {\n        \n\t\tconst users = this.props.users;\n        let permission = '';\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n\n            if(users[aux].is_administrator === true) {\n                permission = 'Administrador';\n            } else {\n                permission = 'Participante da Reunião';\n            }\n            \n            if(users[aux].sector === null || users[aux].sector === undefined) {\n                users[aux].sector = 'Não Possui Setor no Momento';\n            }\n\n            dataSource.innerArray.push({\n\n                key: users[aux].id,\n                name: users[aux].name,\n                username: users[aux].username,\n                ramal: users[aux].ramal,\n                setor: users[aux].sector,\n                email: users[aux].email,\n                tags: [permission]\n            }); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('name'));\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active />\n                        ) : (\n                                <div className = 'contentList'>\n                                    <Table columns = {\n                                    [{\n                                        title: 'Nome',\n                                        dataIndex: 'name',\n                                        key: 'name',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Usuário',\n                                        dataIndex: 'username',\n                                        key: 'username',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Ramal',\n                                        dataIndex: 'ramal',\n                                        key: 'ramal',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Setor',\n                                        dataIndex: 'setor',\n                                        key: 'setor',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Email',\n                                        dataIndex: 'email',\n                                        key: 'email',\n                                        render: (text) => (\n                                            <b>{text}</b>\n                                        )\n                                    },\n                                    {\n                                        title: 'Tipo de Permissão',\n                                        key: 'tags',\n                                        dataIndex: 'tags',\n                                        render: tags => (\n                                            <span>\n                                            {\n                                                tags.map(tag => {\n                                                    let color = tag.length > 5 ? 'geekblue' : 'green';\n                                                    if (tag === 'Participante da Reunião') {\n                                                        color = 'volcano';\n                                                    }\n                                                    return (\n                                                    <Tag color = { color } key = { tag }>\n                                                        <b> { tag.toUpperCase() } </b>\n                                                    </Tag>\n                                                    );\n                                                })\n                                            }\n                                            </span>\n                                        ),\n                                    },\n                                    ]}\n                                    dataSource = {\n                                        dataSource.innerArray\n                                    } \n                                />\n                            </div>\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\n    return {\n    \n        token: state.auth.token,\n        users: state.auth.users,\n        loading: state.auth.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n        getUsers: token => dispatch(getUsers(token)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Transfer, Switch, Table, Tag, Button, Icon, message } from 'antd';\nimport difference from 'lodash/difference';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\n\nimport { getUsers } from '../../store/actions/auth';\nimport { getProjects } from '../../store/actions/project';\nimport { getMeeting, updateMeeting } from '../../store/actions/meeting';\nimport { dynamicSort } from '../utils';\n\nclass UserListMeeting extends Component {\n\n    state = {\n        \n\t\tshowSearch: false,\n\t\tcont: 0\n    };\n\n    componentDidMount() {\n\n\t\ttry {\n\n\t\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\t\t\n\t\t\t\tconst meeting_id = this.props.match.params.meeting_id;\n\t\t\t\tthis.props.getMeeting(this.props.token, meeting_id);\n\t\t\t\tthis.props.getUsers(this.props.token);\n\t\t\t\tthis.props.getProjects(this.props.token);\n\t\t\t}\n\t\t} catch(error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\n        try {\n\n            if (newProps.token !== this.props.token) {\n        \n                if (newProps.token !== undefined && newProps.token !== null) {\n            \n                    const meeting_id = newProps.match.params.meeting_id;\n                    this.props.getMeeting(newProps.token, meeting_id);\n\t\t\t\t\tthis.props.getUsers(newProps.token);\n\t\t\t\t\tthis.props.getProjects(newProps.token);\n                    this.forceUpdate();\n                }\n            }\n        } catch(error) {\n            console.log(error);\n        }\n\t}\n\n\thandleSubmit = () => {\n\t\t\n\t\tif(this.state.targetKeys === undefined) {\n\t\t\tmessage.warning('Por Favor, Adicione Pelo Menos Uma Pessoa a Reunião');\n\t\t} else {\n\n\t\t\tconst { currentMeeting } = this.props;\n\t\t\tconst projects = this.props.projects;\n\t\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\t\tconst token = user.token;\n\t\t\tconst users = [\n\n\t\t\t];\n\t\t\tconst targetKeys = this.state.targetKeys;\n\t\t\tlet project_id = 0;\n\t\t\n\t\t\tfor(let aux = 0; aux < projects.length; aux ++) {\n\n\t\t\t\tif(projects[aux].title === currentMeeting.project) {\n\t\t\t\t\tproject_id = projects[aux].id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(let aux = 0; aux < targetKeys.length; aux ++) {\n\t\t\t\t\n\t\t\t\tusers.push({\n\t\t\t\t\tid: targetKeys[aux]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst meeting = {\n\n\t\t\t\tmeeting: currentMeeting.id,\n\t\t\t\tstatus: 'Agendada',\n\t\t\t\ttitle: currentMeeting.title,\n\t\t\t\tsubject_matter: currentMeeting.subject_matter,\n\t\t\t\tinitial_date: currentMeeting.initial_date,\n\t\t\t\tfinal_date: currentMeeting.final_date,\n\t\t\t\tinitial_hour: currentMeeting.initial_hour,\n\t\t\t\tfinal_hour: currentMeeting.final_hour,\n\t\t\t\tsector: currentMeeting.sector,\n\t\t\t\tproject: currentMeeting.project,\n\t\t\t\tusers\n\t\t\t};\n\n\t\t\tthis.props.updateMeeting(token, meeting);\n\t\t\tmessage.success('Usuários Foram Adicionados a Reunião Com Sucesso');\n\t\t\tthis.props.history.push(`/detalhes_reuniao/${ currentMeeting.id }/${ project_id }`);\n\t\t}\n\t}\n\n    onChange = nextTargetKeys => {\n\n\t\tthis.setState({ \n\t\t\ttargetKeys: nextTargetKeys\n\t\t});\n    };\n\n    triggerShowSearch = showSearch => {\n\t\t\n\t\tthis.setState({ \n            showSearch \n        });\n    };\n    \n    render() {\n\t\t\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n        const { targetKeys, showSearch } = this.state;\n        const users = this.props.users;\n        let dataSource = {\n            innerArray: [\n                \n            ]\n\t\t};\n\n        for(let aux = 0; aux < users.length; aux ++) {\n\n            if(users[aux].sector === null || users[aux].sector === undefined) {\n\n            } else {\n\n\t\t\t\tdataSource.innerArray.push({\n                    key: users[aux].id,\n                    title: users[aux].name,\n                    ramal: users[aux].ramal,\n                    tag: [users[aux].sector],\n                });\n\t\t\t}\n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('title'));\n\t\t\n        return (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t\t<div className = 'contentSearch'>\n\t\t\t\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\t\t\t\tunCheckedChildren = \"Pesquisar Por Nome\"\n\t\t\t\t\t\t\t\t\t\t\t\tcheckedChildren = \"Esconder Pesquisa\"\n\t\t\t\t\t\t\t\t\t\t\t\tchecked = { showSearch }\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = { this.triggerShowSearch }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonSwitch'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonSearch'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'save' className = 'icons'/>\n\t\t\t\t\t\t\t\t\t\t\t\tSalvar e Agendar Reunião\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'contentTableUserSearch'>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataSource = { dataSource.innerArray } \n\t\t\t\t\t\t\t\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\t\t\t\t\t\t\t\toperations = {[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Adicionar',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Remover'\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption = {(inputValue, item) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tleftColumns = {[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'title',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender: title =><Tag color = 'blue'><b> { title } </b></Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'ramal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Ramal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender: ramal =><Tag color = 'red'><b> { ramal } </b></Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'tag',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender: tag =><Tag color = 'green'><b> { tag } </b></Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'title',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender: title =><Tag color = 'blue'><b> { title } </b></Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'ramal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Ramal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender: ramal =><Tag color = 'red'><b> { ramal } </b></Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'tag',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender: tag =><Tag color = 'green'><b> { tag } </b></Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<NotPermission/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false } >\n      \t{({\n\t\t\tdirection,\n\t\t\tfilteredItems,\n\t\t\tonItemSelectAll,\n\t\t\tonItemSelect,\n\t\t\tselectedKeys: listSelectedKeys,\n\t\t\tdisabled: listDisabled,\n\t\t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n  \n        \tconst rowSelection = {\n\t\t\t\tgetCheckboxProps: item => ({ \n\t\t\t\t\tdisabled: listDisabled || item.disabled \n\t\t\t\t}),\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys\n        \t};\n  \n        \treturn (\n\t\t\t\t\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\tpointerEvents: listDisabled ? 'none' : null \n\t\t\t\t\t}}\n\t\t\t\t\tonRow = {({ \n\t\t\t\t\t\tkey, disabled: itemDisabled \n\t\t\t\t\t}) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tif (itemDisabled || listDisabled) return;\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n        \t);\n\t\t}}\n    </Transfer>\n);\n  \nconst mapStateToProps = state => {\n    \n    return {\n    \n        token: state.auth.token,\n        users: state.auth.users,\n\t\tloading: state.auth.loading,\n\t\tprojects: state.project.projects,\n        currentMeeting: state.meeting.currentMeeting\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n\n        getUsers: token => dispatch(getUsers(token)),\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n\t\tupdateMeeting: (token, meeting) => dispatch(updateMeeting(token, meeting)),\n\t\tgetProjects: token => dispatch(getProjects(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserListMeeting);","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, message, Select } from 'antd';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\n\nimport { createProject } from '../../store/actions/project';\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\n\nconst Option = Select.Option;\n\nclass ProjectCreate extends Component {\n\n\tconstructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n    componentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\tthis.props.getSectors(this.props.token);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\t\t\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\t\t\tconst token = user.token;\n\t\t\t\tlet sector_id = '';\n\n\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\n\t\t\t\t\tif(sectors[aux].initials === values.sector) {\n\t\t\t\t\t\tsector_id = sectors[aux].id;\n\t\t\t\t\t} \n\t\t\t\t}\n\n\t\t\t\tconst project = {\n\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tstatus: 'Pendente',\n\t\t\t\t\tsector: sector_id\n\t\t\t\t};\n\n\t\t\t\tif((this.props.createProject(token, project)) !== fail) {\n\t\t\t\t\tmessage.success('O Projeto Foi Cadastrado Com Sucesso!');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Cadastrar o Projeto.' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n\t};\n\n\trender() {\n\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\t\tconst sectors = this.props.sectors;\n\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\t\n\t\t\tdataSource.innerArray.push(\n                {\n                    key: sectors[aux].id,\n                    initials: sectors[aux].initials,\n                    name: sectors[aux].name,\n                }\n\t\t\t); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Criar Projeto </h1>\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit = { this.handleSubmit }>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Título'className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('title', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque o Título!' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Usuário'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label ='Setor' hasFeedback className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('sector', {\n\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Escolha o Setor do Usuário!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select placeholder = 'Escolha o Setor' >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ dataSource.innerArray.map(sector => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey = { sector.key } \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { sector.initials }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ sector.name }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>  \n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Status' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('status', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix = { <Icon type = 'mail' /> } placeholder = 'Pendente'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' htmlType = 'submit' className = 'buttonSave'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'save'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCadastrar Projeto\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'default' className = 'buttonCancel'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/lista_de_projetos/' }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'stop'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<NotPermission/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst ProjectCreateForm = Form.create()(ProjectCreate);\n\nconst mapStateToProps = (state) => {\n\n\treturn {\n\n\t\ttoken: state.auth.token,\n\t\tsectors: state.sector.sectors\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\n\t\tcreateProject: (token, project) => dispatch(createProject(token, project)),\n\t\tgetSectors: token => dispatch(getSectors(token))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectCreateForm);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, message, Skeleton, Modal } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { fail } from 'assert';\n\nimport Hoc from '../../hoc/hoc';\nimport NotPermission from '../notPermission/NotPermission';\nimport Homepage from '../homepage/Homepage';\n\nimport { getProject, updateProject, deleteProject } from '../../store/actions/project';\n\nconst { confirm } = Modal;\n\nclass ProjectEdit extends Component {\n\n    constructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                const project_id = this.props.match.params.project_id;\n                this.props.getProject(newProps.token, project_id);\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        \n        e.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n        \n            if (!err) {\n                \n                const { currentProject } = this.props;\n                const user = JSON.parse(localStorage.getItem('user'));\n                const token = user.token;\n\n\t\t\t\tconst project = {\n                    projectId: currentProject.id,\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tstatus: currentProject.status\n                };\n                \n\t\t\t\tif((this.props.updateProject(token, project)) !== fail) {\n                    message.success('As Informações do Projeto ' +\n                                    'Foram Alteradas Com Sucesso');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não foi possível cadastrar o projeto.' + \n\t\t\t\t\t\t\t\t  'Entre em contato com o desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/lista_de_projetos/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n    };\n    \n    showDeleteConfirm = (token, project_id) => {\n        \n        const propsForms = this.props;\n        \n        confirm ({\n            \n            title: 'Exclusão de Projeto',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir Este Projeto ?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n            \n            onOk() {\n            \n                propsForms.deleteProject(token, project_id);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Projeto Excluído Com Sucesso!',\n                });\n                propsForms.history.push('/lista_de_projetos/');\n\t\t\t},\n\t\t\tonCancel() {\n                message.success('Exclusão de Projeto Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n    render() {\n        \n        const user = JSON.parse(localStorage.getItem('user'));\n        const token = user.token;\n        const { currentProject } = this.props;\n        const { getFieldDecorator } = this.props.form;\n        const { formLayout } = this.state;\n        const formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\n        return(\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active />\n                        ) : (\n                            <Hoc>\n                                {\n                                    user.is_administrator === true ? (\n                                        <div className = 'content'>\n                                            <h1 className = 'texth1'> Informações Cadastradas </h1>\n                                            <Form layout = 'vertical' >\n                                                <Form.Item \n                                                    label = 'Nome' \n                                                    { ...formItemLayout }\n                                                    className = 'formFields'\n                                                >\n                                                    <Input \n                                                        value = { currentProject.title } \n                                                        disabled = { true } \n                                                    />\n                                                </Form.Item>\n                                            </Form>\n                                            <Form layout = 'vertical' >\n                                                <Form.Item \n                                                    label = 'Status' \n                                                    { ...formItemLayout }\n                                                    className = 'formFields'\n                                                >\n                                                    <Input \n                                                        value = { currentProject.status } \n                                                        disabled = { true } \n                                                    />\n                                                </Form.Item>\n                                            </Form>\n                                            <Form layout = 'vertical' >\n                                                <Form.Item \n                                                    label = 'Setor' \n                                                    { ...formItemLayout }\n                                                    className = 'formFields'\n                                                >\n                                                    <Input \n                                                        value = { currentProject.sector } \n                                                        disabled = { true } \n                                                    />\n                                                </Form.Item>\n                                            </Form>\n                                            <h1 className = 'texth1'> Informações A Serem Alteradas </h1>\n                                            <Form onSubmit = { this.handleSubmit } >\n                                                <Form.Item label = 'Título' { ...formItemLayout } className = 'formFields'>\n                                                    {\n                                                        getFieldDecorator('title', {\n                                                            rules: [{ \n                                                                required: true, \n                                                                message: 'Por favor, Coloque o Título!' \n                                                            }],\n                                                        })(\n                                                            <Input prefix = { <Icon type = 'form' className = 'icons'/> }\n                                                                placeholder = 'Usuário'\n                                                            />\n                                                        )\n                                                    }\n                                                </Form.Item>\n\n                                                <Form.Item label = 'Setor' { ...formItemLayout } className = 'formFields'>\n                                                    {\n                                                        getFieldDecorator('sector', {\n                                                        rules: [\n                                                            {\n                                                                required: false,\n                                                            }\n                                                            ],\n                                                        })(\n                                                            <Input prefix = { <Icon type = 'form' className = 'icons'/> }\n                                                                placeholder = { currentProject.sector }\n                                                                disabled = { true }\n                                                            />  \n                                                        )\n                                                    }\n                                                </Form.Item>\n\n                                                <Form.Item label = 'Status' { ...formItemLayout } className = 'formFields'>\n                                                    {\n                                                        getFieldDecorator('status', {\n                                                        \n                                                        })(\n                                                            <Input prefix = { <Icon type = 'mail' className = 'icons'/> }\n                                                                placeholder = 'Pendente'\n                                                                disabled = { true }\n                                                            />\n                                                        )\n                                                    }\n                                                </Form.Item>\n\n                                                <Form.Item>\n                                                    <div align = 'center'>\n                                                        <Button className = 'buttonEdit' type = 'ghost' htmlType = 'submit'>\n                                                            <Icon className = 'icons' type = 'edit'/>\n                                                            Alterar Informações\t\n                                                        </Button>\n                                                        <Button type = 'ghost' className = 'buttonCancel'>\n                                                            <Link to = { '/lista_de_projetos/' }>\n                                                                <Icon type = 'stop' className = 'icons'/>\n                                                                Cancelar\n                                                            </Link>\n                                                        </Button>\n                                                        <Button className = 'buttonDelete' type = 'ghost' \n                                                            onClick = { () => \n                                                                this.showDeleteConfirm(\n                                                                    token,\n                                                                    currentProject.id\n                                                                )\n                                                            } \n                                                        >\n                                                            <Icon type = 'delete' />\n                                                            Excluir Projeto \n                                                        </Button>\n                                                    </div>\n                                                </Form.Item>\n                                            </Form>\n                                        </div>\n                                    ) : (\n                                        <NotPermission/>\n                                    )\n                                }\n                            </Hoc>\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst ProjectEditForm = Form.create()(ProjectEdit);\n\nconst mapStateToProps = state => {\n    \n    return {\n    \n        token: state.auth.token,\n        currentProject: state.project.currentProject,\n        loading: state.project.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n    \n        getProject: (token, id) => dispatch(getProject(token, id)),\n        updateProject: (token, project) => dispatch(updateProject(token, project)),\n        deleteProject: (token, projectId) => dispatch(deleteProject(token, projectId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectEditForm);","import React, { Component } from 'react';\nimport { DatePicker, TimePicker, Button, Form, Input, Icon, message } from 'antd';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport NotPermission from '../notPermission/NotPermission';\nimport Homepage from '../homepage/Homepage';\n\nimport { createMeeting } from '../../store/actions/meeting';\nimport { getProject } from '../../store/actions/project';\nimport { getSectors } from '../../store/actions/sector';\n\nconst { RangePicker } = DatePicker;\n\nclass MeetingCreate extends Component {\n\n\tcomponentDidMount() {\n\t\t\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\n\t\t\tthis.props.getProject(this.props.token, this.props.match.params.project_id);\n\t\t\tthis.props.getSectors(this.props.token);\n\t\t\tthis.forceUpdate();\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tthis.props.getProject(newProps.token, newProps.match.params.project_id);\n\t\t\t\tthis.props.getSectors(newProps.token);\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t}\n\t}\n\n    handleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\n\t\t\tif (!err) {\n\n\t\t\t\tconst { currentProject } = this.props;\n\t\t\t\tconst sectors = this.props.sectors;\n\t\t\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\t\t\tconst userId = user.userId;\n\t\t\t\tconst token = user.token;\n\t\t\t\tconst project_id = this.props.match.params.project_id;\n\t\t\t\tconst date_value = values['range-picker'];\n\t\t\t\t\n\t\t\t\tlet sector_id = '';\n\n\t\t\t\tfor(let aux = 0; aux < sectors.length; aux ++) {\n\t\t\n\t\t\t\t\tif(sectors[aux].name === currentProject.sector) {\n\t\t\t\t\t\tsector_id = sectors[aux].id;\n\t\t\t\t\t} \n\t\t\t\t}\n\n\t\t\t\tconst meeting = {\n\t\t\t\t\t\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tsubject_matter: values.subject_matter,\n\t\t\t\t\tstatus: 'Pendente',\n\t\t\t\t\tinitial_date: date_value[0].format('DD/MM/YYYY'),\n\t\t\t\t\tfinal_date: date_value[1].format('DD/MM/YYYY'),\n\t\t\t\t\tinitial_hour: values['time-picker-initial'].format('HH:mm:ss'),\n\t\t\t\t\tfinal_hour: values['time-picker-final'].format('HH:mm:ss'),\n\t\t\t\t\tproject: project_id,\n\t\t\t\t\tsector: sector_id,\n\t\t\t\t\tmeeting_leader: userId,\n\t\t\t\t\ttopics: [\n\n\t\t\t\t\t],\n\t\t\t\t\trules: [\n\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\tusers: [\n\n\t\t\t\t\t],\n\t\t\t\t\tquestionnaires: [\n\n\t\t\t\t\t]\n\t\t\t\t};\n\n\t\t\t\tif((this.props.createMeeting(token, meeting)) !== fail) {\n\t\t\t\t\tmessage.success('Reunião Criada Com Sucesso!');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Criar a Reunião. ' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t} \n\t\t\t\tthis.props.history.push(`/lista_de_reunioes/${ project_id }/`);\n\t\t\t} else {\n\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\t\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tconst { currentProject } = this.props;\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst formItemLayout = {\n\t\t\tlabelCol: {\n\t\t\t  xs: { span: 24 },\n\t\t\t  sm: { span: 6 },\n\t\t\t},\n\t\t\twrapperCol: {\n\t\t\t  xs: { span: 24 },\n\t\t\t  sm: { span: 16 },\n\t\t\t},\n\t\t};\n\t\tconst rangeConfig = {\n\t\t\t\n\t\t\trules: [{ \n\t\t\t\n\t\t\t\ttype: 'array', \n\t\t\t\trequired: true, \n\t\t\t\tmessage: 'Por Favor, Selecione a Hora!' \n\t\t\t}],\n\t\t};\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Criação de Reunião </h1>\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit = { this.handleSubmit }>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Título' hasFeedback { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('title', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira o Título da Reunião!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax: 30,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'O Título Pode Ter no Máximo 30 Caracteres!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Ex: O Título Dessa Reunião é ...'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Assunto' hasFeedback { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('subject_matter', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira o Assunto da Reunião!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax: 40,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'O Título Pode Ter no Máximo 40 Caracteres!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Ex: O Assunto Dessa Reunião é ...'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Status' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('status', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: false \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Pendente'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Local' hasFeedback { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('local', {\n\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = { currentProject.sector }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Data Inicio - Data Fim' hasFeedback { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('range-picker', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Selecione as Datas de Inicio e Fim!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, rangeConfig) (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RangePicker showTime format = 'DD/MM/YYYY' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Hora de Inicio' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('time-picker-initial', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Selecione a Hora de Inicio!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t}) (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TimePicker />\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Hora de Encerramento' hasFeedback { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('time-picker-final', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Selecione a Hora de Encerramento!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t}) (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TimePicker />\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' htmlType = 'submit' className = 'buttonSave'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'save'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCadastrar Reunião\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'ghost' className = 'buttonCancel'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { `/lista_de_reunioes/${ currentProject.id }` } >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'stop' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<NotPermission/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst MeetingCreateForm = Form.create()(MeetingCreate);\n\nconst mapStateToProps = (state) => {\n\t\n\treturn {\n\t\n\t\tloading: state.meeting.loading,\n\t\terror: state.meeting.error,\n\t\ttoken: state.auth.token,\n\t\tcurrentProject: state.project.currentProject,\n\t\tsectors: state.sector.sectors\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n\t\tcreateMeeting: (token, meeting) => dispatch(createMeeting(token, meeting)),\n\t\tgetProject: (token, project_id) => dispatch(getProject(token, project_id)),\n\t\tgetSectors: token => dispatch(getSectors(token))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingCreateForm);","import React, { Component } from 'react';\nimport { List, Skeleton, Table, Tag, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\n\nimport { getUser } from '../../store/actions/auth';\nimport { getProject } from '../../store/actions/project';\nimport { getMeetings } from '../../store/actions/meeting';\nimport { dynamicSort } from '../utils';\n\nclass MeetingList extends Component {\n\n\tcomponentDidMount() {\n\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n\t\t\t\n\t\t\tthis.forceUpdate();\n\t\t\tconst project_id = this.props.match.params.project_id;\n\t\t\tthis.props.getMeetings(this.props.token, project_id);\n\t\t\tthis.props.getProject(this.props.token, project_id);\n\t\t\tthis.props.getUser(this.props.token, this.props.currentUser.userId);\n\t\t}\n\t}\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\t\t\n\t\t\t\tthis.forceUpdate();\n\t\t\t\tconst project_id = newProps.match.params.project_id;\n\t\t\t\tthis.props.getMeetings(newProps.token, project_id);\n\t\t\t\tthis.props.getProject(newProps.token, project_id);\n\t\t\t\tthis.props.getUser(newProps.token, newProps.currentUser.userId);\n            }\n        }\n    }\n\n    render() {\n\t\t\n\t\tconst { currentUser } = this.props;\n\t\tconst project_id = this.props.match.params.project_id;\n\t\tconst meetings = this.props.meetings;\n\t\tlet dataSource = {\n            innerArray: [\n                \n            ]\n\t\t}\n\n\t\tfor (let aux = 0; aux < meetings.length; aux ++) {\n\n\t\t\tif(currentUser.sector === meetings[aux].sector) {\n\n\t\t\t\tdataSource.innerArray.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: meetings[aux].id,\n\t\t\t\t\t\ttitle: meetings[aux].title,\n\t\t\t\t\t\tinitial_date: meetings[aux].initial_date,\n\t\t\t\t\t\tfinal_date: meetings[aux].final_date,\n\t\t\t\t\t\tinitial_hour: meetings[aux].initial_hour,\n\t\t\t\t\t\tfinal_hour: meetings[aux].final_hour,\n\t\t\t\t\t\tsector: meetings[aux].sector,\n\t\t\t\t\t\ttags: [meetings[aux].status]\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\n        dataSource.innerArray.sort(dynamicSort('title'));\n\t\t\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div align = 'right'>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\tclassName = 'buttonNew'\n\t\t\t\t\t\t\t\tsize = 'large'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Link to = { `/criar_reuniao/projeto/${ project_id }/`} >\n\t\t\t\t\t\t\t\t\tNova Reunião\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t\t<div className = 'contentList'>\n\t\t\t\t\t\t\t\t\t<Table columns = {\n\t\t\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Título',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'title',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'title',\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to = {`/detalhes_reuniao/${ record.key }/${ project_id }`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b> { text } </b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t)   \n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Setor Responsável',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'sector',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Data de Inicio',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'initial_date',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'initial_date',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Data de Encerramento',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'final_date',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'final_date',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Hora de Inicio',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'initial_hour',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'initial_hour',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Hora de Encerramento',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'final_hour',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'final_hour',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Status',\n\t\t\t\t\t\t\t\t\t\t\tkey: 'tags',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'tags',\n\t\t\t\t\t\t\t\t\t\t\trender: tags => (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttags.map(tag => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet color = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (tag === 'Pendente') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'orange';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(tag === 'Agendada') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'geekblue';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if(tag === 'Cancelada') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'red';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor = 'green';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tag color = { color } key = { tag }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b> { tag.toUpperCase() } </b> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tdataSource = {\n\t\t\t\t\t\t\t\t\t\tdataSource.innerArray\n\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n\t\tmeetings: state.meeting.meetings,\n\t\tcurrentProject: state.project.currentProject,\n\t\tcurrentUser: state.auth.currentUser\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n\t\tgetUser: (token, userId) => dispatch(getUser(token, userId)),\n\t\tgetMeetings: (token, project_id) => dispatch(getMeetings(token, project_id)),\n\t\tgetProject: (token, project_id) => dispatch(getProject(token, project_id))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingList);","import React, { Component } from 'react';\nimport { Form, Input, Button, Modal, Icon, message } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\n\nimport { getUser } from '../../store/actions/auth';\nimport { getMeeting, updateMeeting } from '../../store/actions/meeting';\n\nconst { confirm } = Modal;\n\nclass MeetingDetail extends Component {\n\n    constructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical'\n\t\t};\n\t}\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            const user = JSON.parse(localStorage.getItem('user'));\n\t\t    const token = user.token;\n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(token, meeting_id);\n\t\t\tthis.props.getUser(token, this.props.currentUser.userId);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n                \n\t\t\t\tthis.forceUpdate();\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n                this.props.getMeeting(newProps.token, meeting_id);\n                this.props.getUser(newProps.token, newProps.currentUser.userId);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    cancelMeeting = (token, project_id, sector_id) => {\n\t\t\n        const propsForms = this.props;\n        const { currentMeeting } = this.props; \n\t\t\n\t\tconfirm ({\n\t\t\ttitle: 'Cancelar Reunião',\n\t\t\tcontent: 'Tem Certeza Que Deseja Cancelar Esta Reunião ? Esta Ação Não Poderá Ser Desfeita!',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n\t\t\n\t\t\tonOk() {\n\n                const meeting = {\n\n                    meeting: currentMeeting.id,\n                    status: 'Cancelada',\n                    title: currentMeeting.title,\n                    subject_matter: currentMeeting.subject_matter,\n                    initial_date: currentMeeting.initial_date,\n                    final_date: currentMeeting.final_date,\n                    initial_hour: currentMeeting.initial_hour,\n                    final_hour: currentMeeting.final_hour,\n                    sector: sector_id,\n                    project: project_id,\n                };\n\n\t\t\t\tpropsForms.updateMeeting(token, meeting);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Reunião Cancelada Com Sucesso!',\n\t\t\t\t});\n                propsForms.history.push(`/lista_de_reunioes/${ project_id }/`);\n\t\t\t},\n\t\t\tonCancel() {\n\t\t\t\tmessage.success('Exclusão de Reunião Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n    info () {\n        \n        Modal.info({\n            title: 'Ata Incompleta',\n            content: (\n                <div>\n                    <p> A Ata ainda não possui elementos a serem mostrados. </p>\n                    <p> Cadastre os elementos informacionais da Ata clicando \n                        no botão ao lado 'Marcar Reunião'. </p>\n                </div>\n            ),\n            onOk() {\n\n            },\n        });\n    }\n\n    confirmMeeting(currentMeeting) {\n\n        const propsForms = this.props;\n        const user = JSON.parse(localStorage.getItem('user'));\n        const token = user.token;\n\n        confirm({\n\n            title: ' Confirmação de Reunião',\n            content: 'Ao Confirmar a Reunião, Não Será Possível Editar Mais a Reunião',\n            \n            onOk() {\n                const meeting = {\n\n                    id: currentMeeting.id,\n\t\t\t\t\tmeeting: currentMeeting.id,\n\t\t\t\t\ttitle: currentMeeting.title,\n\t\t\t\t\tsubject_matter: currentMeeting.subject_matter,\n\t\t\t\t\tstatus: 'Confirmada',\n\t\t\t\t\tinitial_date: currentMeeting.initial_date,\n\t\t\t\t\tfinal_date: currentMeeting.final_date,\n\t\t\t\t\tinitial_hour: currentMeeting.initial_hour,\n\t\t\t\t\tfinal_hour: currentMeeting.final_hour,\n\t\t\t\t};\n                propsForms.updateMeeting(token, meeting);\n                Modal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Reunião Confirmada Com Sucesso!',\n                });\n                propsForms.history.push(`/reuniao_confirmada/${ currentMeeting.id }/`);\n            },\n            onCancel() {\n                message.success('Ação Cancelada Com Sucesso!');\n            },\n        });\n    }\n    \n    render() {\n\n\t\tconst { currentUser } = this.props;\n        const project_id = this.props.match.params.project_id;\n        const { currentMeeting } = this.props;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n        \n        const formItemLayoutMinimum = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 3 },\n\t\t}\n        : null;\n        let permission = false;\n        \n        if(currentUser.name === currentMeeting.meeting_leader) {\n            permission = true;\n        } else {\n            permission = false;\n        }\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        <div align = 'right'>\n                            {\n                                currentMeeting.status === 'Cancelada' ? (\n                                    <p>  </p>\n                                ) : (\n                                    <Hoc>\n                                        {\n                                            permission === true ? (\n                                               <Hoc>\n                                                   {\n                                                       currentMeeting.status === 'Agendada' ? (\n                                                            <div>\n                                                                <Button \n                                                                    type = 'ghost'\n                                                                    className = 'buttonEdit' \n                                                                    htmlType = 'submit' \n                                                                    onClick = { () => this.confirmMeeting(\n                                                                        currentMeeting,\n                                                                        project_id\n                                                                    )}\n                                                                    style = {{\n                                                                        marginTop: '40px',\n                                                                        marginRight: '30px'\n                                                                    }}\n                                                                >\n                                                                    Confirmar Reunião\n                                                                </Button>\n                                                            </div> \n                                                       ) : null\n                                                   }\n                                                </Hoc>  \n                                            ) : <NotPermission/>\n                                        }\n                                        {\n                                            permission === true ? (\n                                                <Hoc>\n                                                    {\n                                                        currentMeeting.status === 'Confirmada' ? (\n                                                            <Button \n                                                                type = 'ghost' \n                                                                className = 'buttonSave' \n                                                                style = {{\n                                                                    marginTop: '40px', \n                                                                    marginLeft: '-10px',\n                                                                    marginRight: '30px',\n                                                                    marginBottom: '-20px'\n                                                                }}\n                                                            >\n                                                                <Link to = { `/visualizar_ata/${ currentMeeting.id }/${ project_id }/ `} >\n                                                                    Visualizar Ata\n                                                                </Link>\n                                                            </Button>\n                                                        ) : null\n                                                    }\n                                                    \n                                                </Hoc>\n                                            ) : null\n                                        }\n                                        {\n                                            permission === true ? (\n                                                <Hoc>\n                                                    {\n                                                        currentMeeting.status === 'Pendente' ? (\n                                                            <div align = 'right'>\n                                                                <Button \n                                                                    type = 'ghost' \n                                                                    className = 'buttonAtaIncomplete'          \n                                                                    onClick = { this.info }\n                                                                >\n                                                                    Visualizar Ata\n                                                                </Button>\n                                                                <Button type = 'ghost' className = 'buttonNew'>\n                                                                    <Link to = { `/criar_topicos/${ currentMeeting.id }/`} >\n                                                                        Marcar Reunião\n                                                                    </Link>\n                                                                </Button>\n                                                            </div>\n                                                        ) : null\n                                                    }\n                                                </Hoc>\n                                            ) : <NotPermission/>\n                                        }\n                                        {\n                                            currentMeeting.status === 'Cancelada' ? (\n                                                <h1 className = 'texth1'> Esta Reunião Foi Cancelada </h1>\n                                            ) : (\n                                                <Hoc>\n                                                    <div className = 'content'>\n                                                        <h1 className = 'texth1'> Informações Cadastradas </h1>\n                                                        <Form layout = 'vertical' className = 'formUser'>\n                                                            <Form.Item \n                                                                label = 'Nome' \n                                                                { ...formItemLayout }\n                                                                className = 'formFields'\t\n                                                        >\n                                                            <Input \n                                                                value = { currentMeeting.title } \n                                                                disabled = { true } \n                                                            />\n                                                            </Form.Item>\n\n                                                            <Form.Item \n                                                                label = 'Assunto' \n                                                                { ...formItemLayout } \n                                                                className = 'formFields'\n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.subject_matter } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n\n                                                            <Form.Item\n                                                                label = 'Status'\n                                                                { ...formItemLayoutMinimum }\n                                                                className = 'formFields'    \n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.status } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n\n                                                            <Form.Item \n                                                                label = 'Líder da Reunião' \n                                                                { ...formItemLayout }\n                                                                className = 'formFields'\n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.meeting_leader } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n\n                                                            <Form.Item \n                                                                label = 'Local' \n                                                                { ...formItemLayout }\n                                                                className = 'formFields'\n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.sector } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n                                                            <Form.Item \n                                                                label = 'Data de Inicio' \n                                                                { ...formItemLayoutMinimum }\n                                                                className = 'formFields'    \n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.initial_date } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n                                                            <Form.Item \n                                                                label = 'Hora de Inicio' \n                                                                { ...formItemLayoutMinimum }\n                                                                className = 'formFields' \n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.initial_hour } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n\n                                                            <Form.Item \n                                                                label = 'Hora de Encerramento' \n                                                                { ...formItemLayoutMinimum }\n                                                                className = 'formFields'\n                                                            >\n                                                                <Input \n                                                                    value = { currentMeeting.final_hour } \n                                                                    disabled = { true } \n                                                                />\n                                                            </Form.Item>\n                                                        </Form>\n                                                        {\n                                                            permission === true ? (\n                                                                <div>\n                                                                    {\n                                                                        currentMeeting.status === 'Pendente' ? (\n                                                                            <div align = 'center'>\n                                                                                <Button \n                                                                                    type = 'ghost' \n                                                                                    className = 'buttonEdit' \n                                                                                    style = {{ marginBottom: '30px' }}\n                                                                                >\n                                                                                    <Link to = { `/editar_reuniao/${ currentMeeting.id }/${ project_id }` } >\n                                                                                        <Icon type = 'edit' className = 'icons'/>\n                                                                                        Editar Reunião\n                                                                                    </Link>\n                                                                                </Button>\n                                                                                <Button className = 'buttonBack'>\n                                                                                    <Link to = { `/lista_de_reunioes/${ project_id }/` } >\n                                                                                        <Icon type = 'arrow-left' className = 'icons'/>\n                                                                                            Voltar\n                                                                                    </Link>\n                                                                                </Button>\n                                                                            </div>\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                            ) : (\n                                                                <div align = 'center'>\n                                                                    <Button className = 'buttonBack' style = {{ marginBottom: '30px' }}>\n                                                                        <Link to = { `/lista_de_reunioes/${ project_id }/` } >\n                                                                            <Icon type = 'arrow-left' className = 'icons'/>\n                                                                                Voltar\n                                                                        </Link>\n                                                                    </Button>\n                                                                </div>\n                                                            )\n                                                        }\n                                                        {\n                                                            permission === true ? (\n                                                                <div>\n                                                                    {\n                                                                        currentMeeting.status === 'Agendada' ? (\n                                                                            <div align = 'center'>\n                                                                                <Button className = 'buttonBack'>\n                                                                                    <Link to = { `/lista_de_reunioes/${ project_id }/` } >\n                                                                                       <Icon type = 'arrow-left' className = 'icons'/>\n                                                                                        Visualizar Reuniões\n                                                                                    </Link>\n                                                                                </Button>\n                                                                                <Button \n                                                                                    className = 'buttonSave' \n                                                                                    style = {{ \n                                                                                        marginBottom: '30px',\n                                                                                        marginLeft: '20px'\n                                                                                    }}>\n                                                                                    <Link to = { `/adicionar_usuarios_a_reuniao/${ currentMeeting.id }/` } >\n                                                                                        <Icon type = 'save' className = 'icons'/>\n                                                                                            Adicionar Mais Usuários\n                                                                                    </Link>\n                                                                                </Button>\n                                                                                \n                                                                                <Button \n                                                                                    onClick = { () => this.cancelMeeting(\n                                                                                        this.props.token, \n                                                                                        project_id\n                                                                                    )}\n                                                                                    type = 'ghost' \n                                                                                    htmlType = 'submit'\n                                                                                    className = 'buttonDelete' \n                                                                                >\n                                                                                    <Icon \n                                                                                        type = 'delete' \n                                                                                        style = {{ marginRight: '10px' }} />\n                                                                                        Cancelar Reunião\n                                                                                </Button>\n                                                                            </div>\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                            ) : <NotPermission/>\n                                                        }\n                                                    </div>\n                                                </Hoc>\n                                            )\n                                        }\n                                    </Hoc>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst MeetingDetailForm = Form.create()(MeetingDetail);\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n        currentMeeting: state.meeting.currentMeeting,\n        currentUser: state.auth.currentUser\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n    \n        getUser: (token, userId) => dispatch(getUser(token, userId)),\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        updateMeeting: (token, meeting) => dispatch(updateMeeting(token, meeting))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingDetailForm);","import React, { Component } from 'react';\nimport { Skeleton, Form, Input, Button, message, Icon, DatePicker, Modal ,TimePicker } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fail } from 'assert';\n\nimport Hoc from '../../hoc/hoc';\nimport NotPermission from '../notPermission/NotPermission';\nimport Homepage from '../homepage/Homepage';\n\nimport { getMeeting, updateMeeting, deleteMeeting } from '../../store/actions/meeting';\n\nconst { RangePicker } = DatePicker;\nconst { confirm } = Modal;\n\nclass MeetingEdit extends Component {\n\n    constructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n\t\t\t\tthis.props.getMeeting(newProps.token, meeting_id);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n\t}\n\t\n\tshowDeleteConfirm = (token, meetingId) => {\n\t\t\n\t\tconst propsForms = this.props;\n\t\t\n\t\tconfirm ({\n\t\t\ttitle: 'Exclusão de Reunião',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir Esta Reunião ?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n\t\t\n\t\t\tonOk() {\n\t\t\t\tpropsForms.deleteMeeting(token, meetingId);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Reunião Excluída Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tpropsForms.history.push('/lista_de_projetos/')\n\t\t\t},\n\t\t\tonCancel() {\n\t\t\t\tmessage.success('Exclusão de Reunião Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n    handleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\n\t\t\t\tconst { currentMeeting } = this.props;\n\t\t\t\tconst project_id = this.props.match.params.project_id;\n\t\t\t\tconst token = this.props.token;\n\t\t\t\tconst date_value = values['range-picker'];\n\t\t\t\t\n\t\t\t\tconst meeting = {\n\n\t\t\t\t\tmeeting: currentMeeting.id,\n\t\t\t\t\ttitle: values.title,\n\t\t\t\t\tsubject_matter: values.subject_matter,\n\t\t\t\t\tstatus: currentMeeting.status,\n\t\t\t\t\tinitial_date: date_value[0].format('DD/MM/YYYY'),\n\t\t\t\t\tfinal_date: date_value[1].format('DD/MM/YYYY'),\n\t\t\t\t\tinitial_hour: values['time-picker-initial'].format('HH:mm:ss'),\n\t\t\t\t\tfinal_hour: values['time-picker-final'].format('HH:mm:ss'),\n\t\t\t\t};\n\n\t\t\t\tif((this.props.updateMeeting(token, meeting)) !== fail) {\n\t\t\t\t\tmessage.success('As Informações da Reunião Foram Alteradas Com Sucesso!');\n\t\t\t\t\tthis.props.history.push(`/detalhes_reuniao/${ currentMeeting.id }/${ project_id }`);\n\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Alterar as Informações da Reunião. ' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t} \n\t\t\t} else {\n\n\t\t\t}\n\t\t});\n\t};\n\n    render() {\n\t\t\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tconst token = user.token;\n        const project_id = this.props.match.params.project_id;\n        const { currentMeeting } = this.props;\n\t\tconst { formLayout } = this.state;\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n        : null;\n        const rangeConfig = {\n\t\t\trules: [{ \n\t\t\t\ttype: 'array', \n\t\t\t\trequired: true, \n\t\t\t\tmessage: 'Por Favor, Selecione a Hora!' \n\t\t\t}],\n\t\t};        \n        const formItemLayoutMinimum = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 3 },\n\t\t}\n\t\t: null;\n\n        return (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tthis.props.loading ? (\n\t\t\t\t\t\t\t<Skeleton active/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Hoc> \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tuser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Informações Cadastradas da Reunião </h1>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Título' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.title } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Assunto' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.subject_matter } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Líder da Reunião' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.meeting_leader } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Local' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.sector } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Status' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayoutMinimum }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.status } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Data de Inicio' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayoutMinimum }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.initial_date } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Data de Inicio' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayoutMinimum }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.final_date } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Hora de Inicio' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayoutMinimum }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.initial_hour } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Hora de Encerramento' \n\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayoutMinimum }\n\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = { currentMeeting.final_hour } \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true } \n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '30px'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Informações a Serem Alteradas </h1>\n\t\t\t\t\t\t\t\t\t\t\t<Form layout = 'vertical' onSubmit = { this.handleSubmit } >\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Título' \n\t\t\t\t\t\t\t\t\t\t\t\t\thasFeedback \n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('title', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira o Título da Reunião!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax: 30,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'O Título Pode Ter no Máximo 30 Caracteres!',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Ex: O Título Dessa Reunião é ...'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Assunto' \n\t\t\t\t\t\t\t\t\t\t\t\t\thasFeedback\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields' \n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('subject_matter', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Insira o Assunto da Reunião!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax: 40,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'O Título Pode Ter no Máximo 40 Caracteres!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Ex: O Assunto Dessa Reunião é ...'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Status'\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('status', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: false \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = 'Pendente'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Local' \n\t\t\t\t\t\t\t\t\t\t\t\t\thasFeedback\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields' \n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('local', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form' className = 'icons'/> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = { currentMeeting.sector }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = { true }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Data Inicio - Data Fim' \n\t\t\t\t\t\t\t\t\t\t\t\t\thasFeedback\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('range-picker', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Selecione as Datas de Inicio e Fim!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, rangeConfig) (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RangePicker showTime format = 'DD/MM/YYYY' />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Hora de Inicio'\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('time-picker-initial', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Selecione a Hora de Inicio!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}) (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TimePicker />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel = 'Hora de Encerramento' \n\t\t\t\t\t\t\t\t\t\t\t\t\thasFeedback\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ ...formItemLayout } \n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'formFields'\t\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('time-picker-final', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por Favor, Selecione a Hora de Encerramento!'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}) (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TimePicker />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonEdit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{ marginBottom: '40px' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'edit' className ='icons'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAlterar Informações\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = { () => this.showDeleteConfirm(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentMeeting.id, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproject_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonDelete'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'delete' className = 'icons'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExcluir Reunião\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype = 'ghost' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = 'buttonBack'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { `/detalhes_reuniao/${ currentMeeting.id }/${ project_id }/` } >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'arrow-left' className = 'icons'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoltar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<NotPermission/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n        );\n    }\n}\n\nconst MeetingDetailEditForm = Form.create()(MeetingEdit);\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n\t\tcurrentMeeting: state.meeting.currentMeeting,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n\t\tgetMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n\t\tupdateMeeting: (token, meeting) => dispatch(updateMeeting(token, meeting)),\n\t\tdeleteMeeting: (token, meeting_id) => dispatch(deleteMeeting(token, meeting_id))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingDetailEditForm);","import React, { Component } from 'react';\nimport { Form, Input, Button, Icon, List, Avatar } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\n\nimport { getQuesttionaireMeeting } from '../../store/actions/quiz';\nimport { getMeeting } from '../../store/actions/meeting';\nimport { getUser } from '../../store/actions/auth';\n\nclass MeetingConfirm extends Component {\n\n    constructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical'\n\t\t};\n    }\n    \n    state = { \n        visible: false \n    };\n\n    showDrawer = () => {\n    \n        this.setState({\n            visible: true,\n        });\n    };\n    \n    onClose = () => {\n    \n        this.setState({\n            visible: false,\n        });\n    };\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            const user = JSON.parse(localStorage.getItem('user'));\n            const token = user.token;\n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(token, meeting_id);\n            this.props.getUser(token, this.props.currentUser.userId);\n            this.props.getQuesttionaireMeeting(token, meeting_id);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n                \n\t\t\t\tthis.forceUpdate();\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n                this.props.getMeeting(newProps.token, meeting_id);\n                this.props.getUser(newProps.token, newProps.currentUser.userId);\n                this.props.getQuesttionaireMeeting(newProps.token, meeting_id);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    render() {\n        \n        const { currentMeeting } = this.props;\n        const { currentUser } = this.props;\n        const { questtionaires } = this.props;\n        const project_id = this.props.match.params.project_id;\n        const { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n        \n        const formItemLayoutMinimum = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 5 },\n\t\t}\n        : null;\n        let permission = false;\n\n        if(currentUser.name === currentMeeting.meeting_leader) {\n            permission = true;\n        } else {\n            permission = false;\n        }\n\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        }\n\n        for(let aux = 0; aux < questtionaires.length; aux ++) {\n\n            dataSource.innerArray.push({\n\n                key: questtionaires[aux].id,\n                title: questtionaires[aux].title,\n            }); \n        }\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        <Hoc>\n                            {\n                                permission === true ? (\n\n                                    <div>\n                                        <Button \n                                            type = 'ghost' \n                                            className = 'buttonSave' \n                                            style = {{\n                                                marginRight: '20px',\n                                                marginLeft: '830px'\n                                            }}\n                                        >\n                                            <Link to = { `/visualizar_ata/${ currentMeeting.id }/ `} >\n                                                Visualizar Ata\n                                            </Link>\n                                        </Button>\n\n                                        <Button type = 'ghost' \n                                            htmlType = 'submit' \n                                            className = 'buttonNew'\n                                            style = {{\n                                                marginRight: '0px'\n                                            }} \n                                        >\n                                            <Link to = { `/criar_questionario/${ currentMeeting.id }/`}>\n                                                Criar Questionário\n                                            </Link>\n                                        </Button>\n\n                                        <Button className = 'buttonBack'>\n                                            <Link to = { `/lista_de_reunioes/${ project_id }/` } >\n                                                <Icon type = 'arrow-left' className = 'icons'/>\n                                                Visualizar Reuniões\n                                            </Link>\n                                        </Button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <p className = 'spaceTop'>  </p>\n                                    </div>\n                                )\n                            }\n                            <div className = 'container'>\n                                <div className = 'op1'>\n                                    <h1 className = 'texth1'> Informações Cadastradas </h1>\n                                        <Form layout = 'vertical' className = 'formUser'>\n                                            <Form.Item \n                                                label = 'Nome' \n                                                { ...formItemLayout }\n                                                className = 'formFields'\t\n                                            >\n                                                <Input \n                                                    value = { currentMeeting.title } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item \n                                                label = 'Assunto' \n                                                { ...formItemLayout } \n                                                className = 'formFields'\n                                            >\n                                                <Input \n                                                    value = { currentMeeting.subject_matter } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item\n                                                label = 'Status'\n                                                { ...formItemLayoutMinimum }\n                                                className = 'formFields'    \n                                            >\n                                                <Input \n                                                    value = { currentMeeting.status } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item \n                                                label = 'Líder da Reunião' \n                                                { ...formItemLayout }\n                                                className = 'formFields'\n                                            >\n                                                <Input \n                                                    value = { currentMeeting.meeting_leader } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item \n                                                label = 'Local' \n                                                { ...formItemLayout }\n                                                className = 'formFields'\n                                            >\n                                                <Input \n                                                    value = { currentMeeting.sector } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item \n                                                label = 'Data de Inicio' \n                                                { ...formItemLayoutMinimum }\n                                                className = 'formFields'    \n                                            >\n                                                <Input \n                                                    value = { currentMeeting.initial_date } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item \n                                                label = 'Hora de Inicio' \n                                                { ...formItemLayoutMinimum }\n                                                className = 'formFields' \n                                            >\n                                                <Input \n                                                    value = { currentMeeting.initial_hour } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n\n                                            <Form.Item \n                                                label = 'Hora de Encerramento' \n                                                { ...formItemLayoutMinimum }\n                                                className = 'formFields'\n                                            >\n                                                <Input \n                                                    value = { currentMeeting.final_hour } \n                                                    disabled = { true } \n                                                />\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                    {\n                                        permission === true ? (\n                                            <div className = 'op2'>\n                                                <h1 className = 'texth1'> Questionário(s) Cadastrado(s) </h1>\n                                                <List\n                                                    dataSource = {\n                                                        dataSource.innerArray\n                                                    }\n                                                    bordered\n                                                    renderItem = { quiz => (\n                                                        <List.Item\n                                                            key = { quiz.key }\n                                                            actions = {[\n                                                                <Link to = { `/resultado_questionario/${ currentMeeting.id }/${ quiz.key }/`} >\n                                                                    Visualizar Resultados\n                                                                </Link>\n                                                            ]}\n                                                        >\n                                                        <List.Item.Meta\n                                                            avatar = {\n                                                                <Avatar \n                                                                    src = 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'/>\n                                                            }\n                                                            title = { \n                                                                <b> { quiz.title } </b>\n                                                            }\n                                                        />\n                                                        </List.Item>\n                                                    )}\n                                                />\n                                            </div>\n                                        ) : (\n                                            <div className = 'op2'>\n                                                <h1 className = 'texth1'> Questionário(s) Cadastrado(s) </h1>\n                                                <List\n                                                    dataSource = {\n                                                        dataSource.innerArray\n                                                    }\n                                                    bordered\n                                                    renderItem = { quiz => (\n                                                        <List.Item\n                                                            key = { quiz.key }\n                                                            actions = {[\n                                                                <Link to = { `/responder_questionario/${ currentMeeting.id }/${ quiz.key }/`} >\n                                                                    Responder Questionário\n                                                                </Link>\n                                                            ]}\n                                                        >\n                                                        <List.Item.Meta\n                                                            avatar = {\n                                                                <Avatar \n                                                                    src = 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'/>\n                                                            }\n                                                            title = { \n                                                                <b> { quiz.title } </b>\n                                                            }\n                                                        />\n                                                        </List.Item>\n                                                    )}\n                                                />\n                                            </div>\n                                        )\n                                    }\n                            </div>\n                        </Hoc>\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst MetailConfirmForm = Form.create()(MeetingConfirm);\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n        currentMeeting: state.meeting.currentMeeting,\n        currentUser: state.auth.currentUser,\n        questtionaires: state.quiz.questtionaires\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        getUser: (token, userId) => dispatch(getUser(token, userId)),\n        getQuesttionaireMeeting: (token, meeting_id) => dispatch(getQuesttionaireMeeting(token, meeting_id))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetailConfirmForm);","import axios from 'axios';\nimport {\n    CREATE_QUESTTIONAIRE_QUIZ_START, CREATE_QUESTTIONAIRE_QUIZ_SUCCESS, CREATE_QUESTTIONAIRE_QUIZ_FAIL,\n    GET_QUESTTIONAIRE_MEETING_LIST_START, GET_QUESTTIONAIRE_MEETING_LIST_SUCCESS, GET_QUESTTIONAIRE_MEETING_LIST_FAIL,\n    GET_QUESTTIONAIRE_DETAIL_START, GET_QUESTTIONAIRE_DETAIL_SUCCESS, GET_QUESTTIONAIRE_DETAIL_FAIL,\n    GET_QUESTION_QUESTTIONAIRE_DETAIL_START, GET_QUESTION_QUESTTIONAIRE_DETAIL_SUCCESS, GET_QUESTION_QUESTTIONAIRE_DETAIL_FAIL,\n    CREATE_RESPOND_QUIZ_START, CREATE_RESPOND_QUIZ_SUCCESS, CREATE_RESPOND_QUIZ_FAIL,\n    GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_START, GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_SUCCESS, GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_FAIL\n} from './actionsTypes';\n\nconst createQuesttionaireQuizStart = () => {\n\n    return {\n        type: CREATE_QUESTTIONAIRE_QUIZ_START\n    };\n}\n\nconst createQuesttionaireQuizSuccess = questtionaire => {\n\n    return {\n\n        type: CREATE_QUESTTIONAIRE_QUIZ_SUCCESS,\n        questtionaire\n    };\n}\n\nconst createQuesttionaireQuizFail = error => {\n\n    return {\n\n        type: CREATE_QUESTTIONAIRE_QUIZ_FAIL,\n        error: error\n    }\n}\n\nconst getQuesttionaireMeetingListStart = () => {\n\n    return {\n        type: GET_QUESTTIONAIRE_MEETING_LIST_START\n    }\n}\n\nconst getQuettionaireMeetingListSuccess = questtionaires => {\n\n    return {\n\n        type: GET_QUESTTIONAIRE_MEETING_LIST_SUCCESS,\n        questtionaires\n    }\n}\n\nconst getQuesttionaireMeetingListFail = error => {\n\n    return {\n\n        type: GET_QUESTTIONAIRE_MEETING_LIST_FAIL,\n        error: error\n    }\n}\n\nconst getQuesttionaireDetailStart = () => {\n\n    return {\n        type: GET_QUESTTIONAIRE_DETAIL_START\n    };\n}\n\nconst getQuesttionaireDetailSuccess = questtionaire => {\n\n    return {\n\n        type: GET_QUESTTIONAIRE_DETAIL_SUCCESS,\n        questtionaire\n    }\n}\n\nconst getQuesttionaireDetailFail = error => {\n\n    return {\n\n        type: GET_QUESTTIONAIRE_DETAIL_FAIL,\n        error: error\n    }\n}\n\nconst getQuestionListQuesttionaireDetailStart = () => {\n\n    return {\n        type: GET_QUESTION_QUESTTIONAIRE_DETAIL_START\n    };\n}\n\nconst getQuestionListQuesttionaireDetailSuccess = questions => {\n\n    return {\n\n        type: GET_QUESTION_QUESTTIONAIRE_DETAIL_SUCCESS,\n        questions\n    };\n}\n\nconst getQuestionListQuesttionaireDetailFail = error => {\n\n    return {\n\n        type: GET_QUESTION_QUESTTIONAIRE_DETAIL_FAIL,\n        error: error\n    };\n}\n\nconst createRespondQuizStart = () => {\n\n    return {\n        type: CREATE_RESPOND_QUIZ_START\n    };\n}\n\nconst createRespondQuizSuccess = respondQuiz => {\n\n    return {\n\n        type: CREATE_RESPOND_QUIZ_SUCCESS\n    }\n}\n\nconst createRespondQuizFail = error => {\n\n    return {\n\n        type: CREATE_RESPOND_QUIZ_FAIL,\n        error: error\n    }\n}\n\nconst getGradedQuesttionaireInQuesttionaireListStart = () => {\n\n    return {\n        type: GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_START\n    }\n}\n\nconst getGradedQuesttionaireInQuesttionaireListSuccess = resultsGraded => {\n\n    return {\n\n        type: GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_SUCCESS,\n        resultsGraded\n    }\n}\n\nconst getGradedQuesttionaireQuesttionaireListFail = error => {\n\n    return {\n\n        type: GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_FAIL,\n        error: error\n    }\n}\n\nexport const createQuesttionaireQuiz = (token, quiz) => {\n\n    return dispatch => {\n    \n        dispatch(createQuesttionaireQuizStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.post('http://0.0.0.0:8000/questionnaires/create/', quiz)\n        .then(questtionaire => {\n            dispatch(createQuesttionaireQuizSuccess(questtionaire));\n        })\n        .catch(err => {\n            dispatch(createQuesttionaireQuizFail(err));\n        });\n    };\n};\n\nexport const getQuesttionaireMeeting = (token, meetingId) => {\n    \n    return dispatch => {\n    \n        dispatch(getQuesttionaireMeetingListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/meetings/questtionaires_meeting/${ meetingId }/`)\n        .then(res => {\n            const questtionaires = res.data;\n            dispatch(getQuettionaireMeetingListSuccess(questtionaires));\n        })\n        .catch(err => {\n            dispatch(getQuesttionaireMeetingListFail(err));\n        });\n    };\n};\n\nexport const getQuesttionaire = (token, quizId) => {\n\n    return dispatch => {\n    \n        dispatch(getQuesttionaireDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/questionnaires/detail/${ quizId }/`)\n        .then(res => {\n            const questtionaire = res.data;\n            dispatch(getQuesttionaireDetailSuccess(questtionaire));\n        })\n        .catch(err => {\n            dispatch(getQuesttionaireDetailFail(err));\n        });\n    };\n};\n\nexport const getQuestionsMeeting = (token, questtionaireId) => {\n    \n    return dispatch => {\n    \n        dispatch(getQuestionListQuesttionaireDetailStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/quiz/detail/${ questtionaireId }/`)\n        .then(res => {\n            const questions = res.data;\n            dispatch(getQuestionListQuesttionaireDetailSuccess(questions));\n        })\n        .catch(err => {\n            dispatch(getQuestionListQuesttionaireDetailFail(err));\n        });\n    };\n};\n\nexport const createRespondQuiz = (token, respondQuiz) => {\n\n    return dispatch => {\n    \n        dispatch(createRespondQuizStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.post('http://0.0.0.0:8000/graded_questtionaire/create/', respondQuiz)\n        .then(respondQuizData => {\n            dispatch(createRespondQuizSuccess(respondQuizData));\n        })\n        .catch(err => {\n            dispatch(createRespondQuizFail(err));\n        });\n    };\n};\n\nexport const getGradedQuesttionaires = (token, questtionaireId) => {\n    \n    return dispatch => {\n    \n        dispatch(getGradedQuesttionaireInQuesttionaireListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get(`http://0.0.0.0:8000/graded_questtionaire/list_in_questtionaire/${ questtionaireId }/`)\n        .then(res => {\n            const resultsGraded = res.data;\n            dispatch(getGradedQuesttionaireInQuesttionaireListSuccess(resultsGraded));\n        })\n        .catch(err => {\n            dispatch(getGradedQuesttionaireQuesttionaireListFail(err));\n        });\n    };\n};","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, message } from 'antd';\nimport { connect } from 'react-redux';\n\nimport Hoc from '../../hoc/hoc';\nimport NotPermission from '../notPermission/NotPermission';\nimport Homepage from '../homepage/Homepage';\n\nimport { getMeeting, updateMeeting } from '../../store/actions/meeting';\n\nlet id = 0;\n\nclass Topics extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(this.props.token, meeting_id);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n\t\t\t\tthis.props.getMeeting(newProps.token, meeting_id);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    remove = k => {\n        \n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        \n        if (keys.length === 1) {\n            return;\n        }\n        \n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    };\n    \n    add = () => {\n        \n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        \n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    };\n\n    handleSubmit = e => {\n        \n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n\n                const { currentMeeting } = this.props; \n                const user = JSON.parse(localStorage.getItem('user'));\n\t\t        const token = user.token;               \n                const topics = [\n\n                ];\n\n                for(let aux = 0; aux < values.topics.length; aux ++) {\n\n                    topics.push({\n                        title: values.topics[aux]\n                    });\n                }\n    \n                const meeting = {\n\n                    id: currentMeeting.id,\n                    meeting: currentMeeting.id,\n                    title: currentMeeting.title,\n                    subject_matter: currentMeeting.subject_matter,\n                    status: currentMeeting.status,\n                    initial_date: currentMeeting.initial_date,\n                    final_date: currentMeeting.final_date,\n                    initial_hour: currentMeeting.initial_hour,\n                    final_hour: currentMeeting.final_hour,\n                    sector: currentMeeting.sector,\n                    project: currentMeeting.project,\n                    topics\n                };\n    \n                this.props.updateMeeting(token, meeting);\n                message.success('Tópicos Adicionados Com Sucesso!');\n                this.props.history.push(`/criar_regras/${ currentMeeting.id }/`);\n            }\n        });\n    };\n\n    render() {\n\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 4 },\n            },\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 0 },\n            }\n        };\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n        getFieldDecorator('keys', { initialValue: [] });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item className = 'formFields'\n                { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel) }\n                label = { index === 0 ? 'Tópicos' : '' }\n                required = { false }\n                key = { k }\n            >\n                {\n                    getFieldDecorator(`topics[${k}]`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: 'Por Favor, Adicione um Tópico ou Excluia Este Campo.',\n                        },\n                    ],\n                    })(\n                        <Input \n                            placeholder = 'Título do Tópico' \n                            style = {{ \n                                width: '60%', \n                                marginRight: 8 \n                            }} \n                        />\n                    )\n                }\n                { \n                    keys.length > 1 ? (\n                        <Icon\n                            className = 'dynamic-delete-button'\n                            type = 'minus-circle-o'\n                            onClick={() => this.remove(k) }\n                        />\n                    ) : null \n                }\n            </Form.Item>\n        ));\n\n        return(\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        <Hoc>\n                            {\n                                user.is_administrator === true ? (\n                                    <div className = 'content' >\n                                        <h1 className = 'texth1'> Tópicos da Reunião </h1>\n                                        <Form onSubmit = { this.handleSubmit }>\n                                            { formItems }\n                                            <Form.Item {...formItemLayoutWithOutLabel } className = 'formFields'>\n                                                <Button type = 'dashed' onClick = { this.add } className = 'buttonAdd'>\n                                                    <Icon type = 'plus'/> Adicionar Tópico\n                                                </Button>\n                                            </Form.Item>\n\n                                            <div align = 'center'>\n                                                <Form.Item { ...formItemLayoutWithOutLabel }>\n                                                    <Button type = 'ghost' htmlType = 'submit' className = 'buttonSave'>\n                                                        Cadastrar e Próximo\n                                                        <Icon type = 'right' className = 'icons'/>\n                                                    </Button>\n                                                </Form.Item>\n                                            </div>\n                                        </Form>\n                                    </div>\n                                ) : (\n                                    <NotPermission/>\n                                )\n                            }\n                            \n                        </Hoc>\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst TopicsDynamicFieldSet = Form.create()(Topics);\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n        currentMeeting: state.meeting.currentMeeting\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n        \n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        updateMeeting: (token, meeting) => dispatch(updateMeeting(token, meeting))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsDynamicFieldSet);","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, message } from 'antd';\nimport { connect } from 'react-redux'\nimport { fail } from 'assert';\nimport { Link } from 'react-router-dom';\n\nimport Homepage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\nimport Hoc from '../../hoc/hoc';\n\nimport { createSector } from '../../store/actions/sector';\n\nclass SectorCreate extends Component {\n\n\tconstructor() {\n\t\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n\t}\n\n\thandleSubmit = e => {\n\t\t\n\t\te.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n\t\t\tif (!err) {\n\n\n\t\t\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\t\t\tconst token = user.token;\n\t\t\t\tconst sector = {\n\n\t\t\t\t\tinitials: values.initials,\n\t\t\t\t\tname: values.name\n\t\t\t\t};\n\n\t\t\t\tif((this.props.createSector(token, sector)) !== fail) {\n\t\t\t\t\tmessage.success('O Setor ' + sector.initials + ' Foi Cadastrado Com Sucesso');\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error('Não Foi Possível Cadastrar o Setor.' + \n\t\t\t\t\t\t\t\t  'Entre em Contato Com o Desenvolvedor!');\n\t\t\t\t}\n\t\t\t\tthis.props.history.push('/lista_de_setores/');\t\t\t\n\t\t\t} else {\n                message.error('Formúlario Com Problemas.' + \n                              'Entre em Contato Com o Desenvolvedor!');\n\t\t\t}\t\n\t\t});\n\t};\n\n\trender() {\n\t\t\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tconst { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n\t\t: null;\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuser.is_administrator === true ? (\n\t\t\t\t\t\t\t\t\t<div className = 'content'>\n\t\t\t\t\t\t\t\t\t\t<h1 className = 'texth1'> Criação de Setor </h1>\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit = { this.handleSubmit } >\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Sigla' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('initials', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque a Sigla!' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form'/> } placeholder = 'Sigla'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item label = 'Nome do Setor' className = 'formFields' { ...formItemLayout }>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetFieldDecorator('name', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules: [{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Por favor, Coloque o Nome do Setor!' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input prefix = { <Icon type = 'form'/> } placeholder = 'Nome do Setor'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className = 'buttonSave' type = 'ghost' htmlType = 'submit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type = 'save'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCadastrar Setor\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type = 'default' className = 'buttonCancel'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to = { '/lista_de_setores/' }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon className = 'icons' type = 'stop'/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancelar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<NotPermission/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst SectorCreateForm = Form.create()(SectorCreate);\n\nconst mapStateToProps = (state) => {\n\n\treturn {\n\n\t\tloading: state.loading,\n\t\terror: state.error,\n\t\ttoken: state.auth.token\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\n\treturn {\n\t\tcreateSector: (token, project) => dispatch(createSector(token, project))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectorCreateForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Form, Input, Button, Icon, message, Modal } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { fail } from 'assert';\n\nimport Hoc from '../../hoc/hoc';\nimport NotPermission from '../notPermission/NotPermission';\nimport Homepage from '../homepage/Homepage';\n\nimport { getSector, updateSector, deleteSector } from '../../store/actions/sector';\n\nconst { confirm } = Modal;\n\nclass SetorEdit extends Component {\n\n    constructor() {\n        \n        super();\n\t\tthis.state = {\n\t\t\tformLayout: 'vertical',\n\t\t};\n    }\n    \n    componentDidMount() {\n\n\t\tif (this.props.token !== undefined && this.props.token !== null) {\n        \n            const sectorId = this.props.match.params.sector_id;\n\t\t\tthis.props.getSector(this.props.token, sectorId);\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n        \n            if (newProps.token !== undefined && newProps.token !== null) {\n        \n                const sector_id = newProps.match.params.sector_id;\n\t\t\t\tthis.props.getSector(newProps.token, sector_id);\n\t\t\t}\n\t\t}\n    }\n    \n    handleSubmit = e => {\n        \n        e.preventDefault();\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\n        \n            if (!err) {\n        \n                const token = this.props.token;\n                const { currentSector } = this.props;\n\n                const sector = {\n\n                    id: currentSector.id,\n                    initials: values.initials,\n                    name: values.name\n                };\n        \n                if((this.props.updateSector(token, sector)) !== fail) {\n                    message.success('As Informações do Setor Foram Alteradas Com Sucesso!');\n                } else {\n                    message.error('Ocorreu um Erro ao Alterar as Informações do Setor. ' +\n                                  'Entre em Contato Com o Desenvolvedor!');\n                } this.props.history.push('/lista_de_setores/');\t\t\t\n\t\t\t} else {\n\n\t\t\t}\t\n\t\t});\n    };\n    \n    showDeleteConfirm = (token, sectorId) => {\n        \n        const propsForms = this.props;\n        \n        confirm ({\n\t\t\ttitle: 'Exclusão de Setor',\n\t\t\tcontent: 'Tem Certeza Que Deseja Excluir Este Setor ?',\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n        \n            onOk() {\n\t\t\t\tpropsForms.deleteSector(token, sectorId);\n\t\t\t\tModal.success({\n\t\t\t\t\ttitle: 'Ação Concluída!',\n\t\t\t\t\tcontent: 'Setor Excluído Com Sucesso!',\n                });\n                propsForms.history.push('/lista_de_setores/');\n\t\t\t},\n        \n            onCancel() {\n                message.success('Exclusão de Setor Cancelada Com Sucesso!');\n\t\t\t},\n\t\t});\n\t}\n\n    render() {\n        \n        const user = JSON.parse(localStorage.getItem('user'));\n        const { currentSector } = this.props;\n        const { getFieldDecorator } = this.props.form;\n\t\tconst { formLayout } = this.state;\n\t\tconst formItemLayout = formLayout === 'vertical'? {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 14 },\n\t\t}\n        : null;\n        \n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active/>\n                        ) : (\n                            user.is_administrator === true ? (\n                                <div className = 'content'>\n                                    <h1 className = 'texth1'> Informações Cadastradas </h1>\n                                    <Form layout = 'vertical' onSubmit = { this.handleSubmit }>\n                                        <Form.Item label = 'Sigla' \n                                            { ...formItemLayout } \n                                            className = 'formFields'\n                                        >\n                                            <Input \n                                                value = { currentSector.initials } \n                                                disabled = { true } \n                                            />\n                                        </Form.Item>\n\n                                        <Form.Item \n                                            label = 'Nome' \n                                            { ...formItemLayout }\n                                            className = 'formFields'\n                                        >\n                                            <Input \n                                                value = { currentSector.name } \n                                                disabled = { true } \n                                            />\n                                        </Form.Item>\n                                    </Form>\n\n                                    <h1 className = 'texth1'> Informações A Serem Alteradas </h1>\n                                    <Form layout = 'vertical' onSubmit = { this.handleSubmit }>\n                                        <Form.Item \n                                                label = 'Sigla' \n                                                { ...formItemLayout } \n                                                className = 'formFields'>\n                                            {\n                                                getFieldDecorator('initials', {\n                                                    rules: [{ \n                                                        required: true, \n                                                        message: 'Por favor, Coloque a Sigla!' \n                                                    },\n                                                    {\n                                                        max: 6,\n                                                        message: 'O Usuário Pode Ter no Máximo 6 Caracteres!',\n                                                    }],\n                                                })(\n                                                    <Input prefix = { <Icon type = 'form'/> } placeholder = 'Sigla'/>\n                                                )\n                                            }\n                                        </Form.Item>\n\n                                        <Form.Item \n                                            label = 'Nome do Setor' \n                                            { ...formItemLayout } \n                                                className = 'formFields'>\n                                            {\n                                                getFieldDecorator('name', {\n                                                    rules: [{ \n                                                        required: true, \n                                                        message: 'Por favor, Coloque o Nome do Setor!' \n                                                    }],\n                                                })(\n                                                    <Input prefix = { <Icon type = 'form'/> } \n                                                    placeholder = 'Nome do Setor'/>\n                                                )\n                                            }\n                                        </Form.Item>\n\n                                        <Form.Item>\n                                            <div align = 'center'>\n                                                <Button type = 'ghost' htmlType = 'submit' className = 'buttonEdit'>\n                                                    <Icon type = 'edit'/>\n                                                    Alterar Informações\t\n                                                </Button>\n                                                <Button type = 'ghost' className = 'buttonCancel'>\n                                                    <Link to = { '/lista_de_setores/' }>\n                                                    <Icon className = 'icons' type = 'stop'/>\n                                                        Cancelar\n                                                    </Link>\n                                                </Button>\n                                                <Button\n                                                    className = 'buttonDelete'\n                                                    onClick = { () => \n                                                        this.showDeleteConfirm(\n                                                            this.props.token,\n                                                            currentSector.id\n                                                        )\n                                                    } \n                                                    type = 'danger' >\n                                                        <Icon type = 'delete' />\n                                                        Excluir Setor\n                                                </Button>\n                                            </div>\n                                        </Form.Item>\n                                    </Form>\n                                </div>\n                            ) : (\n                                <NotPermission/>\n                            )\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst SectorEditForm = Form.create()(SetorEdit);\n\nconst mapStateToProps = state => {\n\n    return {\n    \n        token: state.auth.token,\n        currentSector: state.sector.currentSector,\n        loading: state.sector.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n    \n        getSector: (token, sectorId) => dispatch(getSector(token, sectorId)),\n        updateSector: (token, sector) => dispatch(updateSector(token, sector)),\n        deleteSector: (token, sectorId) => dispatch(deleteSector(token, sectorId))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectorEditForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Skeleton, Table, Icon, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\n\nimport { getSectors } from '../../store/actions/sector';\nimport { dynamicSort } from '../utils';\n\nclass SectorList extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            this.props.getSectors(this.props.token);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        \n        if (newProps.token !== this.props.token) {\n         \n            if (newProps.token !== undefined && newProps.token !== null) {\n         \n                this.forceUpdate();\n                this.props.getSectors(newProps.token);   \n            }\n        }\n    }\n\n    render() {\n        \n        const sectors = this.props.sectors;\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        }\n        \n        for(let aux = 0; aux < sectors.length; aux ++) {\n            \n            dataSource.innerArray.push({\n                key: sectors[aux].id,\n                initials: sectors[aux].initials,\n                name: sectors[aux].name\n            }); \n\t\t}\n\n\t\tdataSource.innerArray.sort(dynamicSort('initials'));\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active />\n                        ) : (\n                                <div className = 'contentList'>\n                                    <Table columns = {[\n                                        {\n                                            title: 'Sigla',\n                                            dataIndex: 'initials',\n                                            key: 'initials',\n                                            render: (text) => (\n                                                <b> { text } </b>\n                                            )\n                                        },\n                                        {\n                                            title: 'Nome',\n                                            dataIndex: 'name',\n                                            key: 'name',\n                                            render: (text) => (\n                                                <b> { text } </b>\n                                            )\n                                        },\n                                        {\n                                            title: 'Ação',\n                                            key: 'action',\n                                            render: (record) => (\n                                            <span>\n                                                <Button \n                                                    type = 'ghost' \n                                                    className = 'buttonEdit' \n                                                    htmlType = 'submit' \n                                                >\n                                                    <Link to = { `/editar_setor/${ record.key }` } >\n                                                        <Icon type = 'edit' className = 'icons'/>\n                                                            Editar Setor\n                                                    </Link>\n                                                </Button>\n                                            </span>\n                                            ),\n                                        },\n                                    ]\n                                    }\n                                    dataSource = {\n                                        dataSource.innerArray\n                                    } \n                                />\n                            </div>\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return {\n\n        token: state.auth.token,\n        sectors: state.sector.sectors,\n        loading: state.auth.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n        getSectors: token => dispatch(getSectors(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectorList);","import React, { Component } from 'react';\nimport { Form, Input, Icon, Button, message } from 'antd';\nimport { connect } from 'react-redux';\n\nimport Hoc from '../../hoc/hoc';\nimport NotPermission from '../notPermission/NotPermission';\nimport Homepage from '../homepage/Homepage';\n\nimport { getMeeting, updateMeeting } from '../../store/actions/meeting';\n\nlet id = 0;\n\nclass Rules extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(this.props.token, meeting_id);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n\t\t\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n\t\t\t\tthis.props.getMeeting(newProps.token, meeting_id);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    remove = k => {\n        \n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        \n        if (keys.length === 1) {\n            return;\n        }\n        \n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    };\n    \n    add = () => {\n        \n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        \n        form.setFieldsValue({\n            keys: nextKeys\n        });\n    };\n\n    handleSubmit = e => {\n        \n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                \n                const { currentMeeting } = this.props;\n                const user = JSON.parse(localStorage.getItem('user'));\n\t\t        const token = user.token;                \n                const rules = [\n\n                ];\n\n                for(let aux = 0; aux < values.rulesConduct.length; aux ++) {\n\n                    rules.push({\n                        title: values.rulesConduct[aux]\n                    });\n                }\n\n                const meeting = {\n\n                    id: currentMeeting.id,\n                    meeting: currentMeeting.id,\n                    title: currentMeeting.title,\n                    subject_matter: currentMeeting.subject_matter,\n                    status: currentMeeting.status,\n                    initial_date: currentMeeting.initial_date,\n                    final_date: currentMeeting.final_date,\n                    initial_hour: currentMeeting.initial_hour,\n                    final_hour: currentMeeting.final_hour,\n                    sector: currentMeeting.sector,\n                    project: currentMeeting.project,\n                    rules\n                };\n\n                this.props.updateMeeting(token, meeting);\n                message.success('Regras de Conduta Foram Adicionadas Com Sucesso');\n                this.props.history.push(`/adicionar_usuarios_a_reuniao/${ currentMeeting.id }/`);\n            }\n        });\n    };\n\n    render() {\n\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 4 },\n            },\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 0 },\n            }\n        };\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n        getFieldDecorator('keys', { \n            initialValue: [] \n        });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item className = 'formFields'\n                { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel) }\n                label = { index === 0 ? 'Regras de Conduta' : '' }\n                required = { false }\n                key = { k }\n            >\n                {\n                    getFieldDecorator(`rulesConduct[${k}]`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: 'Por Favor, Adicione uma Regra de Conduta ou Excluia Este Campo.'\n                        },\n                    ],\n                    })(\n                        <Input \n                            placeholder = 'Regras de Conduta da Reunião' \n                            style = {{ \n                                width: '60%', \n                                marginRight: 8 \n                            }} \n                        />\n                    )\n                }\n                { \n                    keys.length > 1 ? (\n                        <Icon\n                            className = 'dynamic-delete-button'\n                            type = 'minus-circle-o'\n                            onClick={() => this.remove(k) }\n                        />\n                    ) : null \n                }\n            </Form.Item>\n        ));\n\n        return(\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        <Hoc>\n                            {\n                                user.is_administrator === true ? (\n                                    <div className = 'content' >\n                                        <h1 className = 'texth1'> Regras de Conduta </h1>\n                                        <Form onSubmit = { this.handleSubmit }>\n                                            { formItems }\n                                            <Form.Item {...formItemLayoutWithOutLabel } className = 'formFields'>\n                                                <Button type = 'dashed' onClick = { this.add } className = 'buttonAdd'>\n                                                    <Icon type = 'plus' className = 'icons'/> Adicionar Regra\n                                                </Button>\n                                            </Form.Item>\n\n                                            <Form.Item { ...formItemLayoutWithOutLabel }>\n                                                <div align = 'center'>\n                                                    <Button type = 'ghost' htmlType = 'submit' className = 'buttonSave'>\n                                                        Cadastrar e Próximo\n                                                        <Icon type = 'right' className = 'icons'/>\n                                                    </Button>\n                                                </div>\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                ) : (\n                                    <NotPermission/>\n                                )\n                            }\n                        </Hoc>\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst RulesDynamicFieldSet = Form.create()(Rules);\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n        currentMeeting: state.meeting.currentMeeting\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n        \n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        updateMeeting: (token, meeting) => dispatch(updateMeeting(token, meeting))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RulesDynamicFieldSet);","import React, { Component } from 'react';\nimport { Descriptions, Badge, Button, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Hoc from '../../hoc/hoc';\nimport { size } from '../utils';\nimport Homepage from '../homepage/Homepage';\n\nimport { getMeeting } from '../../store/actions/meeting';\n\nclass Record extends Component {\n\n\tstate = {\n\t\tloading: true,\n\t\ticonLoading: false,\n\t};\n\t\n\tenterLoading = () => {\n\t\tthis.setState({ loading: true });\n\t};\n\t\n\tenterIconLoading = () => {\n\t\tthis.setState({ iconLoading: true });\n\t};\n\n\tcomponentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(this.props.token, meeting_id);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n                \n\t\t\t\tthis.forceUpdate();\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n\t\t\t\tthis.props.getMeeting(newProps.token, meeting_id);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n\t}\n\n\trender() {\n\n\t\tconst { currentMeeting } = this.props;\n\t\tconst users = size(currentMeeting.users);\n\t\tconst topics = size(currentMeeting.topics);\n\t\tconst rules = size(currentMeeting.rules);\n\n\t\tlet usersMeeting = {\n            innerArray: [\n                \n            ]\n\t\t};\n\n\t\tlet topicsMeeting = {\n\t\t\tinnerArray: [\n\n\t\t\t]\n\t\t};\n\n\t\tlet rulesMeeting = {\n\t\t\tinnerArray: [\n\n\t\t\t]\n\t\t};\n\n\t\tfor(let aux = 0; aux < users; aux ++) {\n\t\t\t\n\t\t\tusersMeeting.innerArray.push(\n                {\n\t\t\t\t\tkey: aux,\n                    users: currentMeeting.users[aux]\n                }\n\t\t\t); \n\t\t}\n\n\t\tfor(let aux = 0; aux < topics; aux ++) {\n\t\t\t\n\t\t\ttopicsMeeting.innerArray.push(\n\t\t\t\t{\n\t\t\t\t\tkey: aux,\n\t\t\t\t\ttopics: currentMeeting.topics[aux]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfor(let aux = 0; aux < rules; aux ++) {\n\t\t\t\n\t\t\trulesMeeting.innerArray.push(\n\t\t\t\t{\n\t\t\t\t\tkey: aux,\n\t\t\t\t\trules: currentMeeting.rules[aux]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\n\t\t\t<Hoc>\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Homepage/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Hoc>\n\t\t\t\t\t\t\t<div align = 'right'>\n\t\t\t\t\t\t\t\t<Button type = 'ghost' \n\t\t\t\t\t\t\t\t\thtmlType = 'submit' \n\t\t\t\t\t\t\t\t\tclassName = 'buttonBack'\n\t\t\t\t\t\t\t\t\tstyle = {{\n\t\t\t\t\t\t\t\t\t\tmarginTop: '30px',\n\t\t\t\t\t\t\t\t\t\tmarginRight: '30px'\n\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Link to = { `/reuniao_confirmada/${ currentMeeting.id }/`}>\n\t\t\t\t\t\t\t\t\t\t<Icon type = 'arrow-left' className = 'icons'/>\n\t\t\t\t\t\t\t\t\t\tVoltar\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<div className = 'contentRecord'>\n\t\t\t\t\t\t\t\t\t<Descriptions \n\t\t\t\t\t\t\t\t\t\ttitle = {` ${currentMeeting.title} `} \n\t\t\t\t\t\t\t\t\t\tlayout = 'vertical' \n\t\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t\tclassName = 'texth1'\t\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Título da Reunião'> \n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.title } \n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Assunto da Reunião'>\n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.subject_matter }\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Setor Responsável'>\n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.sector }\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Data de Abertura'>\n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.initial_date }\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Data de Encerramento'>\n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.final_date }\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Hora de Inicio'>\n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.initial_hour }\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Hora de Encerramento'>\n\t\t\t\t\t\t\t\t\t\t\t{ currentMeeting.final_hour }\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Status da Reunião' span = { 3 }>\n\t\t\t\t\t\t\t\t\t\t\t<Badge status = 'processing' text = { `${ currentMeeting.status }` } />\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Usuários Confirmados na Reunião'> \n\t\t\t\t\t\t\t\t\t\t\t{ usersMeeting.innerArray.map(user =>\n\t\t\t\t\t\t\t\t\t\t\t\t<li key = { user.key }> { user.users } </li>\t\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Tópicos'> \n\t\t\t\t\t\t\t\t\t\t\t{ topicsMeeting.innerArray.map(topic =>\n\t\t\t\t\t\t\t\t\t\t\t\t<li key = { topic.key }> { topic.topics } </li>\t\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item label = 'Regras da Reunião' span={3}>\n\t\t\t\t\t\t\t\t\t\t\t{ rulesMeeting.innerArray.map(rule =>\n\t\t\t\t\t\t\t\t\t\t\t\t<li key = { rule.key }> { rule.rules } </li>\t\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t</Descriptions>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Hoc>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.meeting.loading,\n\t\tcurrentMeeting: state.meeting.currentMeeting\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport Hoc from '../../hoc/hoc';\n\nconst FormItem = Form.Item;\n\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n\t\n\tremove = k => {\n\n\t\tconst { form } = this.props;\n\t\tconst keys = form.getFieldValue('keys');\n\t\t\n\t\tif (keys.length === 1) return;\n\t\t\n\t\tform.setFieldsValue({\n\t\t\tkeys: keys.filter(key => key !== k)\n\t\t});\n\t};\n\n  \tadd = () => {\n\t\t\n\t\tconst { form } = this.props;\n\t\tconst keys = form.getFieldValue('keys');\n\t\tconst nextKeys = keys.concat(++id);\n\t\t\n\t\tform.setFieldsValue({\n\t\t\tkeys: nextKeys\n\t\t});\n  \t};\n\n  \trender() {\n\t\t  \n\t\tconst { getFieldDecorator, getFieldValue } = this.props.form;\n\t\tgetFieldDecorator('keys', { initialValue: [] });\n\t\tconst keys = getFieldValue('keys');\n\t\tconst formItems = keys.map((k, index) => (\n\n\t\t\t<FormItem label = { index === 0 ? 'Escolhas' : ''} key = { k }>\n\t\t\t\t{\n\t\t\t\t\tgetFieldDecorator(`questions[${ this.props.id }]choices[${k}]`, {\n\t\t\t\t\t\tvalidateTrigger: ['onChange', 'onBlur'],\n\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\twhitespace: true,\n\t\t\t\t\t\t\tmessage: 'Por Favor, Adicione Uma Opção Para Resposta.'\n\t\t\t\t\t\t}]\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input placeholder = 'Escolha a Resposta'/>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{ keys.length > 1 ? (\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tclassName = 'dynamic-delete-button'\n\t\t\t\t\t\ttype = 'minus-circle-o'\n\t\t\t\t\t\tdisabled = { keys.length === 1 }\n\t\t\t\t\t\tonClick = {() => this.remove(k)}\n\t\t\t\t\t/>\n\t\t\t\t) : null }\n\t\t\t</FormItem>\n\t\t));\n\n    \treturn (\n      \n\t\t\t<Hoc>\n\t\t\t\t<FormItem label = 'Pergunta: '>\n\t\t\t\t{\n\t\t\t\t\tgetFieldDecorator(`question[${ this.props.id }]`, {\n\t\t\t\t\t\tvalidateTrigger: ['onChange', 'onBlur'],\n\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tmessage: 'Por Favor, Insira Uma Pergunta'\n\t\t\t\t\t\t}]\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input placeholder = 'Adicionar Uma Pergunta' />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</FormItem>\n\t\t\t\t\n\t\t\t\t{ formItems }\n\n\t\t\t\t<FormItem>\n\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t<Button type = 'dashed' onClick = { this.add } style = {{ width: \"60%\" }}>\n\t\t\t\t\t\t\t<Icon type = 'plus'/> Adicione Uma Opção de Resposta\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</FormItem>\n\t\t\t</Hoc>\n\t\t);\n\t}\n}\n\nexport default QuestionForm;","import React, { Component } from 'react';\nimport { Form, Input, Button, Icon, Divider, Skeleton, message } from 'antd';\nimport { connect } from 'react-redux';\n\nimport Hoc from '../../hoc/hoc';\nimport QuestionForm from './QuestionForm';\nimport HomePage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\n\nimport { getUser } from '../../store/actions/auth';\nimport { createQuesttionaireQuiz } from '../../store/actions/quiz';\nimport { getMeeting, updateMeeting } from '../../store/actions/meeting';\n\nconst FormItem = Form.Item;\n\nclass QuizCreator extends Component {\n\n    state = {\n        formCount: 1,\n        formLayout: 'vertical'\n    };\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            this.forceUpdate();\n            const user = JSON.parse(localStorage.getItem('user'));\n            const token = user.token;\n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(token, meeting_id);\n\t\t\tthis.props.getUser(token, this.props.currentUser.userId);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n                \n\t\t\t\tthis.forceUpdate();\n\t\t\t\tconst meeting_id = newProps.match.params.meeting_id;\n                this.props.getMeeting(newProps.token, meeting_id);\n                this.props.getUser(newProps.token, newProps.currentUser.userId);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    add = () => {\n    \n        const { formCount } = this.state;\n        this.setState({\n            formCount: formCount + 1\n        });\n    };\n    \n    remove = () => {\n        \n        const { formCount } = this.state;\n        this.setState({\n            formCount: formCount - 1\n        });\n    };\n    \n    handleSubmit = e => {\n    \n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n    \n            if (!err) {\n\n                const { currentMeeting } = this.props;\n\t\t\t\tconst meeting_id = this.props.match.params.meeting_id;\n                const user = JSON.parse(localStorage.getItem('user'));\n                const token = user.token;\n                const questions = [\n\n                ];\n\n                for (let aux = 0; aux < values.questions.length; aux ++) {\n                    questions.push({\n\n                        title: values.question[aux],\n                        choices: values.questions[aux].choices.filter(el => el !== null)\n                    });\n                }\n\n                const questtionaire = {\n                    \n                    title: values.title,\n                    questions\n                }\n\n                const meeting = {\n\n                    id: currentMeeting.id,\n                    meeting: currentMeeting.id,\n                    title: currentMeeting.title,\n                    status: currentMeeting.status,\n                    subject_matter: currentMeeting.subject_matter,\n                    initial_date: currentMeeting.initial_date,\n                    final_date: currentMeeting.final_date,\n                    initial_hour: currentMeeting.initial_hour,\n                    final_hour: currentMeeting.final_hour,\n                    sector: currentMeeting.sector,\n                    project: currentMeeting.project,\n                    questtionaire: questtionaire\n                }\n\n                this.props.updateMeeting(token, meeting);\n                message.success('Questionário Criado Com Sucesso!');\n                this.props.history.push(`/reuniao_confirmada/${ meeting_id }/`);\n            }\n        });\n    };\n    \n    render() {\n        \n        const { currentUser } = this.props;\n        const { currentMeeting } = this.props;\n        const { getFieldDecorator } = this.props.form;\n        const questions = [];\n        let permission = false;\n\n        for (let aux = 0; aux < this.state.formCount; aux ++) {\n            questions.push(\n                <Hoc key = { aux }>\n                    { questions.length > 0 ? (\n                        <Icon\n                            className = 'dynamic-delete-button'\n                            type = 'minus-circle-o'\n                            disabled = { questions.length === 0 }\n                            onClick={() => this.remove()}\n                        />\n                    ) : null}\n                    <QuestionForm id = { aux } { ...this.props } />\n                    <Divider />\n                </Hoc>\n            );\n        }\n\n        if(currentUser.name === currentMeeting.meeting_leader) {\n            permission = true;\n        } else {\n            permission = false;\n        }\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <HomePage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active />\n                        ) : (\n                            <Hoc>\n                                {\n                                    permission === true ? (\n                                        <div className = 'content'>\n                                            <Form onSubmit = { this.handleSubmit }>\n                                                <h1 className = 'texth1'> Crie um Questionário </h1>\n                                                <FormItem label = { 'Título do Questionário: '}>\n                                                    {\n                                                        getFieldDecorator(`title`, {\n                                                            validateTrigger: ['onChange', 'onBlur'],\n                                                            rules: [{\n                                                                required: true,\n                                                                message: 'Por Favor, Coloque o Título ao Questionário'\n                                                            }]\n                                                        })(\n                                                            <Input placeholder = 'Adicione um Títúlo ao Questionário'/>\n                                                        )\n                                                    }\n                                                </FormItem>\n                                                { questions }\n                                                \n                                                <FormItem>\n                                                    <div align = 'center'>\n                                                        <Button type = 'secondary' onClick = { this.add }>\n                                                            <Icon type = 'plus'/> Adicione Outra Questão\n                                                        </Button>\n                                                    </div>\n                                                </FormItem>\n\n                                                <FormItem>\n                                                    <div align = 'center'>\n                                                        <Button type = 'ghost' htmlType = 'submit' className = 'buttonSave'>\n                                                            Salvar Questionário\n                                                        </Button>\n                                                    </div>\n                                                </FormItem>\n                                            </Form>\n                                        </div>\n                                    ) : (\n                                        <NotPermission/>\n                                    )\n                                }\n                            </Hoc>    \n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst QuizCreatorForm = Form.create()(QuizCreator);\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.quiz.loading,\n        currentMeeting: state.meeting.currentMeeting,\n        currentUser: state.auth.currentUser\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\t\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        createQuesttionaireQuiz: (token, questtionaire) => dispatch(createQuesttionaireQuiz(token, questtionaire)),\n        getUser: (token, userId) => dispatch(getUser(token, userId)),\n\t\tupdateMeeting: (token, meeting) => dispatch(updateMeeting(token, meeting)),\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreatorForm);","import axios from 'axios';\nimport {\n    GET_CHOICES_START, GET_CHOICES_SUCCESS, GET_CHOICES_FAIL\n} from './actionsTypes';\n\nconst getChoicesListStart = () => {\n    \n    return {\n        type: GET_CHOICES_START\n    };\n}\n\nconst getChoicesListSuccess = choices => {\n    \n    return {\n    \n        type: GET_CHOICES_SUCCESS,\n        choices\n    };\n}\n\nconst getChoicesListFail = error => {\n    \n    return {\n    \n        type: GET_CHOICES_FAIL,\n        error: error\n    };\n}\n\nexport const getChoices = (token) => {\n    \n    return dispatch => {\n    \n        dispatch(getChoicesListStart());\n        axios.defaults.headers = {\n            'Content-Type': 'application/json',\n            Authorization: `Token ${ token }`\n        };\n        axios.get('http://0.0.0.0:8000/choices/')\n        .then(res => {\n            const choices = res.data;\n            dispatch(getChoicesListSuccess(choices));\n        })\n        .catch(err => {\n            dispatch(getChoicesListFail(err));\n        });\n    };\n};","import React, { Component } from 'react';\nimport { Skeleton, Progress} from 'antd';\nimport { connect } from 'react-redux';\n\nimport Hoc from '../../hoc/hoc';\nimport Homepage from '../homepage/Homepage';\nimport NotPermission from '../notPermission/NotPermission';\n\nimport { getUser } from '../../store/actions/auth';\nimport { getMeeting } from '../../store/actions/meeting';\nimport { getChoices } from '../../store/actions/choices';\nimport { getGradedQuesttionaires } from '../../store/actions/quiz';\n\nclass ResultsQuiz extends Component {\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            const user = JSON.parse(localStorage.getItem('user'));\n            const token = user.token;\n            const questtionaire_id = this.props.match.params.questtionaire_id;\n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getMeeting(token, meeting_id);\n            this.props.getUser(token, this.props.currentUser.userId);\n            this.props.getGradedQuesttionaires(token, questtionaire_id);\n            this.props.getChoices(token);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n                \n                const questtionaire_id = newProps.match.params.questtionaire_id;\n                const meeting_id = newProps.match.params.meeting_id;\n                this.props.getMeeting(newProps.token, meeting_id);\n                this.props.getGradedQuesttionaires(newProps.token, questtionaire_id);\n                this.props.getUser(newProps.token, newProps.currentUser.userId);\n                this.props.getChoices(newProps.token);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    render() {\n        \n        const resultsGraded = this.props.resultsGraded;\n        const { currentMeeting } = this.props;\n        const { currentUser } = this.props;\n        const choices = this.props.choices;\n        let permission = false;\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        };\n        // let dataSourceFinal = {\n        //     innerArray: [\n\n        //     ]\n        // };\n        let cont = 94;\n\n        if(currentUser.name === currentMeeting.meeting_leader) {\n            permission = true;\n        }\n\n        for(let aux = 0; aux < choices.length; aux ++) {\n\n            for(let auxResultsGraded = 0; auxResultsGraded < resultsGraded.length; auxResultsGraded ++) {\n\n                if(choices[aux].title === resultsGraded[auxResultsGraded].choice) {\n                    cont ++;\n                    dataSource.innerArray.push({\n                        key: auxResultsGraded,\n                        question: resultsGraded[auxResultsGraded].quiz,\n                        choice: choices[aux].title,\n                        cont: cont,\n                        porcent: 0\n                    });\n                } else {\n                    // cont = 0;\n                }\n            }\n        }\n\n        // for(let aux = 0; aux < dataSource.innerArray.length; aux ++) {\n\n            \n        // }\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active />\n                        ) : (\n                            <Hoc>\n                                {\n                                    permission === false ? (\n                                        <NotPermission/>\n                                    ) : (\n                                        <div className = 'content'>\n                                            <h1 className = 'texth1'> Porcentagem de Respostas </h1>\n                                            {\n                                                dataSource.innerArray.map(result =>\n                                                    <div key = { result.key }>\n                                                        <h2> Pergunta: { result.question } </h2>\n                                                        <h3> Resposta: { result.choice } </h3>\n                                                        <Progress \n                                                            percent = { result.cont } \n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                    )\n                                }\n                            </Hoc>\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n\t\n\t\ttoken: state.auth.token,\n        loading: state.quiz.loading,\n        currentQuesttionaire: state.quiz.currentQuesttionaire,\n        resultsGraded: state.quiz.resultsGraded,\n        currentMeeting: state.meeting.currentMeeting,\n        currentUser: state.auth.currentUser,\n        choices: state.choices.choices\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n        \n        getUser: (token, userId) => dispatch(getUser(token, userId)),\n        getGradedQuesttionaires: (token, questtionaire_id) => dispatch(getGradedQuesttionaires(token, questtionaire_id)),\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        getChoices: (token) => dispatch(getChoices(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsQuiz);","import React from 'react';\nimport { Steps, Button } from 'antd';\n\nconst Step = Steps.Step;\n\nclass Questions extends React.Component {\n    \n    state = {\n        current: 0\n    };\n\n    next() {\n    \n        const current = this.state.current + 1;\n        this.setState({ current });\n    }\n\n    prev() {\n  \n        const current = this.state.current - 1;\n        this.setState({ current });\n    }\n\n    render() {\n    \n        const { current } = this.state;\n        const { questions } = this.props;\n    \n        return (\n      \n            <div>\n                <Steps progressDot current = { current }>\n                    { questions.map((q, index) => (\n                        <Step key = { index } />\n                    ))}\n                </Steps>\n                \n                <div>\n                    { questions[ current ] }\n                </div>\n\n                <div>\n                    { current < questions.length - 1 && (\n                        <Button type = 'primary' onClick={() => this.next()}>\n                            Próximo\n                        </Button>\n                    )}\n\n                    { current === questions.length - 1 && (\n                        <Button type = 'primary' onClick={() => this.props.submit()}>\n                            Concluir\n                        </Button>\n                    )}\n\n                    { current > 0 && (\n                        <Button style ={{ marginLeft: 8 }} onClick={() => this.prev()}>\n                            Voltar\n                        </Button>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Questions;","import React from 'react';\nimport { Radio } from 'antd';\n\nconst RadioGroup = Radio.Group;\n\nclass Choices extends React.Component {\n\t  \n\trender() {\n\n\t\tconst { questionId } = this.props;\n\t\tconst { usersAnswers } = this.props;\n\t\t\n\t\treturn (\n\t\t\n\t\t\t<RadioGroup\n\t\t\t\tonChange = {(e, qId) => this.props.change(e, questionId)}\n\t\t\t\tvalue = {\n\t\t\t\t\tusersAnswers[questionId] !== undefined &&\n\t\t\t\t\tusersAnswers[questionId] !== null\n\t\t\t\t\t\t? usersAnswers[questionId]\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ this.props.choices.map((choice, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Radio style = { radioStyle } value = { choice } key = { index }>\n\t\t\t\t\t\t{ choice }\n\t\t\t\t\t\t</Radio>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</RadioGroup>\n\t\t);\n  \t}\n}\n\nconst radioStyle = {\n\t\n\tdisplay: 'block',\n\theight: '30px',\n\tlineHeight: '30px'\n};\n\nexport default Choices;","import React, { Component } from 'react';\nimport { Card, Skeleton, message } from 'antd';\nimport { connect } from 'react-redux';\n\nimport Hoc from '../../hoc/hoc';\nimport Questions from '../../components/Questions';\nimport Choices from '../../components/Choices';\nimport Homepage from '../homepage/Homepage';\n\nimport { getUser } from '../../store/actions/auth';\nimport { getMeeting } from '../../store/actions/meeting';\nimport { getQuestionsMeeting, createRespondQuiz } from '../../store/actions/quiz';\nimport { getChoices } from '../../store/actions/choices';\nimport { size } from '../utils';\n\nclass RespondQuiz extends Component {\n\n    state = {\n        usersAnswers: {}\n    };\n\n    componentDidMount() {\n        \n        if (this.props.token !== undefined && this.props.token !== null) {\n        \n            const user = JSON.parse(localStorage.getItem('user'));\n            const token = user.token;\n            const questtionaire_id = this.props.match.params.questtionaire_id;\n            const meeting_id = this.props.match.params.meeting_id;\n            this.props.getUser(token, this.props.currentUser.userId);\n            this.props.getQuestionsMeeting(token, questtionaire_id);\n            this.props.getMeeting(token, meeting_id);\n            this.props.getChoices(token);\n            this.forceUpdate();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n\t\t\n\t\tif (newProps.token !== this.props.token) {\n\t\t\n\t\t\tif (newProps.token !== undefined && newProps.token !== null) {\n                \n                const questtionaire_id = newProps.match.params.questtionaire_id;\n                const meeting_id = newProps.match.params.meeting_id;\n                this.props.getMeeting(newProps.token, meeting_id);\n                this.props.getQuestionsMeeting(newProps.token, questtionaire_id);\n                this.props.getUser(newProps.token, newProps.currentUser.userId);\n                this.props.getChoices(newProps.token);\n\t\t\t\tthis.forceUpdate();\n            }\n        }\n    }\n\n    onChange = (e, qId) => {\n        \n        const { usersAnswers } = this.state;\n        usersAnswers[qId] = e.target.value;\n        this.setState({ usersAnswers });\n    };\n    \n    handleSubmit() {\n\n        const { currentMeeting } = this.props;\n        const { currentUser } = this.props;\n        const { usersAnswers } = this.state;\n        const questionsQuesttionaires = this.props.questions;\n        const choices = this.props.choices;\n        const user = JSON.parse(localStorage.getItem('user'));\n        const questtionaire_id = this.props.match.params.questtionaire_id;\n        const token = user.token;\n        const sizeUsersAnswers = size(usersAnswers) + 1;\n        let dataSourceUsersAnswers = {\n            innerArray: [\n\n            ]\n        };\n        let dataSource = {\n            innerArray: [\n                \n            ]\n        };\n        let dataSourcesId = {\n            innerArray: [\n\n            ]\n        }\n\n        for(let aux = 0; aux < sizeUsersAnswers; aux ++) {\n            dataSourceUsersAnswers.innerArray.push(usersAnswers[aux]);\n        }\n\n        for(let aux = 0; aux < choices.length; aux ++) {\n\n            for(let auxUsersAnswers = 0; auxUsersAnswers < sizeUsersAnswers; auxUsersAnswers ++) {\n\n                if(choices[aux].title === dataSourceUsersAnswers.innerArray[auxUsersAnswers]) {\n                    dataSourcesId.innerArray.push(choices[aux].id);\n                }\n            }\n        }\n\n        for(let aux = 0; aux < questionsQuesttionaires.length; aux ++) {\n\n            dataSource.innerArray.push(\n                questionsQuesttionaires[aux].id\n            );\n        }\n\n        const quiz = {\n\n            answers: dataSourcesId.innerArray,\n            user: currentUser.id,\n            quiz: dataSource.innerArray,\n            questtionaire: questtionaire_id\n        };\n\n        this.props.createRespondQuiz(token, quiz);\n        message.success('Questionário Respondido');\n        this.props.history.push(`/reuniao_confirmada/${ currentMeeting.id }/`);\n    }\n\n    render() {\n        \n        const questionsQuesttionaires = this.props.questions;\n        const { usersAnswers } = this.state;\n\n        return (\n\n            <Hoc>\n                {\n                    this.props.token === null ? (\n                        <Homepage/>\n                    ) : (\n                        this.props.loading ? (\n                            <Skeleton active />\n                        ) : (\n                            <Hoc>\n                                <div className = 'content'>\n                                    <Card>\n                                        <Questions\n                                            submit ={() => this.handleSubmit()}\n                                            questions = {questionsQuesttionaires.map(question => {\n                                                return (\n                                                    <Card\n                                                        style = { cardStyle }\n                                                        type = 'inner'\n                                                        key = { question.id }\n                                                        title = {`${ question.order }. ${ question.title }`}\n                                                    >\n                                                        <Choices\n                                                            questionId = { question.order }\n                                                            choices = { question.choices }\n                                                            change = { this.onChange }\n                                                            usersAnswers = { usersAnswers }\n                                                        />\n                                                    </Card>\n                                                );\n                                            })}\n                                        />\n                                    </Card>                                                                                                \n                                </div>\n                            </Hoc>\n                        )\n                    )\n                }\n            </Hoc>\n        );\n    }\n}\n\nconst cardStyle = {\n    \n    marginTop: '20px',\n    marginBottom: '20px'\n};\n\nconst mapStateToProps = state => {\n\t\n\treturn {\n    \n        token: state.auth.token,\n        loading: state.quiz.loading,\n        questions: state.quiz.questions,\n        currentMeeting: state.meeting.currentMeeting,\n        currentUser: state.auth.currentUser,\n        choices: state.choices.choices\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n\t\n\treturn {\n\n        getQuestionsMeeting: (token, questtionaire_id) => dispatch(getQuestionsMeeting(token, questtionaire_id)),\n        createRespondQuiz: (token, respondQuiz) => dispatch(createRespondQuiz(token, respondQuiz)),\n        getMeeting: (token, meeting_id) => dispatch(getMeeting(token, meeting_id)),\n        getUser: (token, userId) => dispatch(getUser(token, userId)),\n        getChoices: (token) => dispatch(getChoices(token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RespondQuiz);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Hoc from \"./hoc/hoc\";\n\nimport Login from './containers/user/Login';\nimport Homepage from './containers/homepage/Homepage';\nimport UserRegister from './containers/user/UserRegister';\nimport UserDetail from './containers/user/UserDetail';\nimport UserEdit from './containers/user/UserEdit';\nimport UserList from './containers/user/UserList';\nimport UserMeeting from './containers/user/UserListMeeting';\nimport ProjectList from './containers/projects/ProjectList';\nimport ProjectCreate from './containers/projects/ProjectCreate';\nimport ProjectEdit from './containers/projects/ProjectEdit';\nimport MeetingCreate from './containers/meetings/MeetingCreate';\nimport MeetingList from './containers/meetings/MeetingList';\nimport MeetingDetail from './containers/meetings/MeetingDetail';\nimport MeetingEdit from './containers/meetings/MeetingEdit';\nimport MeetingConfirm from './containers/meetings/MeetingConfirm';\nimport TopicsCreate from './containers/topics/TopicsCreate';\nimport SectorCreate from './containers/sectors/SectorCreate';\nimport SectorEdit from './containers/sectors/SectorEdit';\nimport SectorList from './containers/sectors/SectorList';\nimport RulesCreate from './containers/rules/RulesCreate';\nimport Record from './containers/record/Record';\nimport QuizCreator from './containers/quiz/QuizCreator';\nimport ResultsQuiz from './containers/quiz/ResultsQuiz';\nimport RespondQuiz from './containers/quiz/RespondQuiz';\n\nconst BaseRouter = () => (\n    <Hoc>\n        <Route exact path = '/' component = { Homepage } />\n        <Route exact path = '/login/' component = { Login } />\n        <Route exact path = '/adicionar_usuario/' component = { UserRegister } />\n        <Route exact path = '/informacoes_usuario/' component = { UserDetail } />\n        <Route exact path = '/lista_usuarios/' component = { UserList } />\n        <Route exact path = '/alterar_informacoes/' component = { UserEdit } />\n        <Route exact path = '/lista_de_projetos/' component = { ProjectList } />\n        <Route exact path = '/criar_projeto/' component = { ProjectCreate } />\n        <Route exact path = '/editar_projeto/:project_id/' component = { ProjectEdit } />\n        <Route exact path = '/criar_reuniao/projeto/:project_id/' \n                            component = { MeetingCreate } />\n        <Route exact path = '/lista_de_reunioes/:project_id/' component = { MeetingList } />\n        <Route exact path = '/detalhes_reuniao/:meeting_id/:project_id/' \n                            component = { MeetingDetail } />\n        <Route exact path = '/reuniao_confirmada/:meeting_id/' \n                            component = { MeetingConfirm } />\n        <Route exact path = '/editar_reuniao/:meeting_id/:project_id' component = { MeetingEdit } />\n        <Route exact path = '/criar_topicos/:meeting_id/' component = { TopicsCreate } />\n        <Route exact path = '/criar_setor/' component = { SectorCreate } /> \n        <Route exact path = '/editar_setor/:sector_id/' component = { SectorEdit } />\n        <Route exact path = '/lista_de_setores/' component = { SectorList } />\n        <Route exact path = '/criar_regras/:meeting_id/' component = { RulesCreate } />\n        <Route exact path = '/adicionar_usuarios_a_reuniao/:meeting_id/' component = { UserMeeting } />\n        <Route exact path = '/visualizar_ata/:meeting_id/' component = { Record } />\n        <Route exact path = '/criar_questionario/:meeting_id/' component = { QuizCreator } />\n        <Route exact path = '/responder_questionario/:meeting_id/:questtionaire_id/' \n                            component = { RespondQuiz } />\n        <Route exact path = '/resultado_questionario/:meeting_id/:questtionaire_id/' \n                            component = { ResultsQuiz } />\n    </Hoc>\n);\n\nexport default BaseRouter;","import React, { Component } from 'react';\nimport { Icon, Input, AutoComplete } from 'antd';\n\nconst { Option, OptGroup } = AutoComplete;\n\nclass AutoCompleteComponent extends Component {\n\t\n    render () {\n\n\t\tconst dataSource = [{\n\t\t\ttitle: 'Reuniões',\n\t\t\t\tchildren: [{\n\t\t\t\t\ttitle: 'Reuniões ',\n\t\t\t\t\tcount: 10000,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t  },\n\t\t];\n\n\t\tconst options = dataSource.map(group => (\n\t\t\t<OptGroup key = { group.title }>\n\t\t\t\t{ group.children.map(opt => (\n\t\t\t\t\t<Option key = { opt.title } value = { opt.title }>\n\t\t\t\t\t\t{ opt.title }\n\t\t\t\t\t\t<span className = 'certain-search-item-count'> { opt.count } people</span>\n\t\t\t\t\t</Option>\n\t\t\t\t))}\n\t\t\t</OptGroup>\n\t\t));\n\t\t\n        return (\n\n\t\t\t<div className = 'autoComplete'>\n\t\t\t\t<AutoComplete\n\t\t\t\t\tclassName = 'certain-category-search'\n\t\t\t\t\tdropdownClassName = 'certain-category-search-dropdown'\n\t\t\t\t\tdropdownMatchSelectWidth = { false }\n\t\t\t\t\tdropdownStyle = {{ width: 300 }}\n\t\t\t\t\tsize = 'large'\n\t\t\t\t\tstyle = {{ width: '100%' }}\n\t\t\t\t\tdataSource ={ options }\n\t\t\t\t\tplaceholder = 'Procure Por Reuniões Em Que Está Inserido'\n\t\t\t\t\toptionLabelProp = 'value'\n\t\t\t\t>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tsuffix = { \n\t\t\t\t\t\t\t<Icon type = 'search' className = 'certain-category-icon' />\n\t\t\t\t\t\t} \n\t\t\t\t\t/>\n\t\t\t\t</AutoComplete>\n\t\t\t</div>\n        );\n    }\n}\n\nexport default AutoCompleteComponent;","import React, { Component } from 'react';\nimport { Menu, Dropdown, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass DropdownNav extends Component {\n\n    render () {\n\n\t\treturn (\n\n        \t<div>\n\t\t\t\t<Dropdown className = 'dropdown' overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<Menu.Item key = '0'>\n\t\t\t\t\t\t\t<Icon type = 'user' />\n\t\t\t\t\t\t\t\t<Link to = { '/informacoes_usuario/' } >\n\t\t\t\t\t\t\t\t\tVisualizar Perfil\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'edit' />\n\t\t\t\t\t\t\t\t<Link to= { '/alterar_informacoes/' } >\n\t\t\t\t\t\t\t\t\tEditar Perfil\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' \n\t\t\t\t\t\thref={ `/informacoes_usuario/` } >\n\t\t\t\t\t\t<Icon type = 'user' />  Usuário <Icon type = 'down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.is_administrator === true ? (\n\t\t\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t\t\t<Icon type = 'user-add' />\n\t\t\t\t\t\t\t\t\t\t<Link to = '/adicionar_usuario/' >\n\t\t\t\t\t\t\t\t\t\t\tAdicionar Usuário\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'team' />\n\t\t\t\t\t\t\t\t<Link to = '/lista_usuarios/' >\n\t\t\t\t\t\t\t\t\tVisualizar Usuários\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' href='/'>\n\t\t\t\t\t\t<Icon type = 'team' /> Participante <Icon type = 'down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.is_administrator === true ? (\n\t\t\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t\t\t<Icon type = 'project' />\n\t\t\t\t\t\t\t\t\t\t<Link to = { '/criar_setor/' } >\n\t\t\t\t\t\t\t\t\t\t\tAdicionar Setor\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'ordered-list' />\n\t\t\t\t\t\t\t\t<Link to= { '/lista_de_setores/' } >\n\t\t\t\t\t\t\t\t\tVisualizar Setores\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' \n\t\t\t\t\t\thref={ `/lista_de_setores/` } >\n\t\t\t\t\t\t<Icon type = 'unordered-list' />  Setores <Icon type = 'down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\n\t\t\t\t<Dropdown overlay = { \n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.props.is_administrator === true ? (\n\t\t\t\t\t\t\t\t<Menu.Item key = '0' >\n\t\t\t\t\t\t\t\t\t<Icon type = 'project' />\n\t\t\t\t\t\t\t\t\t\t<Link to = { '/criar_projeto/' } >\n\t\t\t\t\t\t\t\t\t\t\tAdicionar Projeto\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Menu.Item key = '1' >\n\t\t\t\t\t\t\t<Icon type = 'ordered-list' />\n\t\t\t\t\t\t\t\t<Link to = { '/lista_de_projetos/' } >\n\t\t\t\t\t\t\t\t\tVisualizar Projetos\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t } trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' \n\t\t\t\t\t\thref ={ `/lista_de_projetos/` } >\n\t\t\t\t\t\t<Icon type = 'unordered-list' />  Projetos <Icon type = 'down' />\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n\t\t\t\t<Dropdown trigger = { ['click'] } >\n\t\t\t\t\t<a className = 'ant-dropdown-link' href ='/' >\n\t\t\t\t\t\t<Icon type = 'book' /> Manuais\n\t\t\t\t\t</a>\n\t\t\t\t</Dropdown>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\n\treturn {\n\n\t\ttoken: state.auth.token,\n\t  \tis_administrator: state.auth.is_administrator\n  \t};\n};\n\nexport default withRouter(connect(mapStateToProps)(DropdownNav));","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport DropdownNav from './DropdownNav';\nimport { logout } from '../../store/actions/auth';\n\nconst { Header } = Layout;\n\nclass Navbar extends React.Component {\n\n    render () {\n\n        return (\n\n            <Header className = 'header'>\n                <Menu className = 'menu' mode = 'horizontal'>\n                    {\n                        this.props.token !== null ? (\n                            <Menu.Item>\n                                <DropdownNav/> \n                            </Menu.Item>\n                        ) : null\n                    }\n                    {\n                        this.props.token !== null ? (\n                            <Menu.Item className = 'text_logout' onClick = { this.props.logout }>\n                                <Icon type = 'logout'  />\n                                    Logout\n                            </Menu.Item>\n                            ) : (\n                            <Menu.Item>\n                                <Link to = '/login' > <p className = 'text'> Login </p></Link>\n                            </Menu.Item>\n                        )\n                    }                 \n                </Menu>\n            </Header>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n    return {\n        token: state.auth.token\n    };\n};\n\nconst mapDispatchToProps = (dispatch )=> {\n    \n    return {\n        logout: () => dispatch(logout())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navbar));","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AutoComplete from './AutoComplete';\nimport Navbar from '../navbar/Navbar';\nimport '../css/layout.css';\nimport '../css/buttons.css';\nimport '../css/user.css';\nimport '../css/navbar.css';\nimport '../css/icon.css';\nimport '../css/img.css';\n\nconst { Footer } = Layout;\n\nclass CustomLayout extends Component {\n  \n\trender() {\n\t\treturn (\n\t\t\t<Layout className = 'layout' >\n\t\t\t\t<Navbar />\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.token !== null ? (\n\t\t\t\t\t\t\t<AutoComplete />\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t\t{ this.props.children }\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tthis.props.token === null ? (\n\t\t\t\t\t\t<Footer className = 'footerOFF'>\n\t\t\t\t\t\t\tGrata - Gerenciamento de Reuniões e Atas ©2019 \n\t\t\t\t\t\t\tCriado por Victor Hugo Lopes Mota.\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Footer className = 'footerON'>\n\t\t\t\t\t\t\tGrata - Gerenciamento de Reuniões e Atas ©2019 \n\t\t\t\t\t\t\tCriado por Victor Hugo Lopes Mota.\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\n  \treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default withRouter(connect(mapStateToProps)(CustomLayout));","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\n\nimport * as actions from './store/actions/auth';\nimport Layout from './containers/layout/Layout';\n\nclass App extends Component {\n\t  \n\tcomponentDidMount() {\n\t\n\t\tthis.props.onTryAutoSignup();\n  \t}\n\n  \trender() {\n    \treturn (\n\t\t\t<Router>\n\t\t\t\t<Layout {...this.props}>\n\t\t\t\t\t<BaseRouter />\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n  \treturn {\n    \tisAuthenticated: state.auth.token !== null\n  \t};\n};\n\nconst mapDispatchToProps = dispatch => {\n  \treturn {\n    \tonTryAutoSignup: () => dispatch(actions.authCheckState())\n  \t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updateProperties) => {\n    return {\n        ...oldObject,\n        ...updateProperties \n    }\n}","import { \n\tAUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT,\n\tUSER_LIST_START, USER_LIST_SUCCESS, USER_LIST_FAIL \n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n\t\n\tusers: [],\n\tcurrentUser: {},\n\tis_administrator: null,\n    token: null,\n    error: null,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\n\t\terror: null,\n\t\tloading: true\n\t});\n};\n\nconst authSuccess = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\n\t\ttoken: action.user.token,\n\t\tcurrentUser: action.user,\n\t\tis_administrator: action.user.is_administrator,\n\t\terror: null,\n\t\tloading: false\n\t});\n};\n\nconst authFail = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\n\t\terror: action.error,\n\t\tloading: false\n\t});\n};\n\nconst authLogout = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\ttoken: null\n\t});\n};\n\nconst getUserListStart = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\n\t\terror: null,\n        loading: true\n    });\n};\n\nconst getUserListSuccess = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\n\t\tusers: action.users,\n        error: null,\n        loading: false\n    });\n};\n\nconst getUserListFail = (state, action) => {\n\t\n\treturn updateObject(state, {\n\t\n\t\terror: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n\t\n\tswitch (action.type) {\n\t\n\t\tcase AUTH_START:\n\t\t\treturn authStart(state, action);\n\t\tcase AUTH_SUCCESS:\n\t\t\treturn authSuccess(state, action);\n\t\tcase AUTH_FAIL:\n\t\t\treturn authFail(state, action);\n\t\tcase AUTH_LOGOUT:\n\t\t\treturn authLogout(state, action);\n\t\tcase USER_LIST_START:\n\t\t\treturn getUserListStart(state, action);\n\t\tcase USER_LIST_SUCCESS:\n\t\t\treturn getUserListSuccess(state, action);\n\t\tcase USER_LIST_FAIL:\n\t\t\treturn getUserListFail(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;","import { \n    PROJECT_LIST_START, PROJECT_LIST_SUCCESS, PROJECT_LIST_FAIL,\n    GET_PROJECT_DETAIL_START, GET_PROJECT_DETAIL_SUCCESS, GET_PROJECT_DETAIL_FAIL,\n    CREATE_PROJECT_START, CREATE_PROJECT_SUCCESS, CREATE_PROJECT_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n\n    projects: [],\n    currentProject: {},\n    sector: null,\n    error: null,\n    loading: false\n};\n\nconst getProjectListStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst getProjectListSuccess = (state, action) => {\n    return updateObject(state, {\n        projects: action.projects,\n        error: null,\n        loading: false\n    });\n};\n\nconst getProjectListFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n  \nconst getProjectDetailStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getProjectDetailSuccess = (state, action) => {\n    return updateObject(state, {\n        currentProject: action.project,\n        error: null,\n        loading: false\n    });\n};\n\nconst getProjectDetailFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst createProjectStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst createProjectSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false\n    });\n};\n\nconst createProjectFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PROJECT_LIST_START:\n            return getProjectListStart(state, action);\n        case PROJECT_LIST_SUCCESS:\n            return getProjectListSuccess(state, action);\n        case PROJECT_LIST_FAIL:\n            return getProjectListFail(state, action);\n        case GET_PROJECT_DETAIL_START:\n            return getProjectDetailStart(state, action);\n        case GET_PROJECT_DETAIL_SUCCESS:\n            return getProjectDetailSuccess(state, action);\n        case GET_PROJECT_DETAIL_FAIL:\n            return getProjectDetailFail(state, action);\n        case CREATE_PROJECT_START:\n            return createProjectStart(state, action);\n        case CREATE_PROJECT_SUCCESS:\n            return createProjectSuccess(state, action);\n        case CREATE_PROJECT_FAIL:\n            return createProjectFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import {\n    SECTOR_LIST_START, SECTOR_LIST_SUCCESS, SECTOR_LIST_FAIL,\n    GET_SECTOR_DETAIL_START, GET_SECTOR_DETAIL_SUCCESS, GET_SECTOR_DETAIL_FAIL,\n    CREATE_SECTOR_START, CREATE_SECTOR_SUCCESS, CREATE_SECTOR_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    sectors: [],\n    currentSector: {},\n    error: null,\n    loading: false\n};\n\nconst getSectorListStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getSectorListSuccess = (state, action) => {\n    return updateObject(state, {\n        sectors: action.sectors,\n        error: null,\n        loading: false\n    });\n};\n\nconst getSectorListFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n  \nconst getSectorDetailStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst getSectorDetailSuccess = (state, action) => {\n    return updateObject(state, {\n        currentSector: action.sector,\n        error: null,\n        loading: false\n    });\n};\n\nconst getSectorDetailFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst createSectorStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst createSectorSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false\n    });\n};\n\nconst createSectorFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SECTOR_LIST_START:\n            return getSectorListStart(state, action);\n        case SECTOR_LIST_SUCCESS:\n            return getSectorListSuccess(state, action);\n        case SECTOR_LIST_FAIL:\n            return getSectorListFail(state, action);\n        case GET_SECTOR_DETAIL_START:\n            return getSectorDetailStart(state, action);\n        case GET_SECTOR_DETAIL_SUCCESS:\n            return getSectorDetailSuccess(state, action);\n        case GET_SECTOR_DETAIL_FAIL:\n            return getSectorDetailFail(state, action);\n        case CREATE_SECTOR_START:\n            return createSectorStart(state, action);\n        case CREATE_SECTOR_SUCCESS:\n            return createSectorSuccess(state, action);\n        case CREATE_SECTOR_FAIL:\n            return createSectorFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import { \n    MEETING_LIST_START, MEETING_LIST_SUCCESS, MEETING_LIST_FAIL,\n    CREATE_MEETING_START, CREATE_MEETING_SUCCESS, CREATE_MEETING_FAIL,\n    GET_MEETING_DETAIL_START, GET_MEETING_DETAIL_SUCCESS, GET_MEETING_DETAIL_FAIL,\n    MEETING_ALL_LIST_START, MEETING_ALL_LIST_SUCCESS, MEETING_ALL_LIST_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    \n    meetings: [],\n    allMeetings: [],\n    currentMeeting: {},\n    error: null,\n    loading: false\n};\n\nconst getMeetingListStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst getMeetingListSuccess = (state, action) => {\n    \n    return updateObject(state, {\n    \n        meetings: action.meetings,\n        error: null,\n        loading: false\n    });\n};\n\nconst getMeetingListFail = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: action.error,\n        loading: false\n    });\n};\n\nconst getMeetingAllListStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst getMeetingAllListSuccess = (state, action) => {\n    \n    return updateObject(state, {\n    \n        allMeetings: action.allMeetings,\n        error: null,\n        loading: false\n    });\n};\n\nconst getMeetingAllListFail = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: action.error,\n        loading: false\n    });\n};\n\nconst getMeetingDetailStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst getMeetingDetailSuccess = (state, action) => {\n    \n    return updateObject(state, {\n    \n        currentMeeting: action.meeting,\n        error: null,\n        loading: false\n    });\n};\n\nconst getMeetingDetailFail = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: action.error,\n        loading: false\n    });\n};\n\nconst createMeetingStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst createMeetingSuccess = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: false\n    });\n};\n\nconst createMeetingFail = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n    \n        case MEETING_LIST_START:\n            return getMeetingListStart(state, action);\n        case MEETING_LIST_SUCCESS:\n            return getMeetingListSuccess(state, action);\n        case MEETING_LIST_FAIL:\n            return getMeetingListFail(state, action);\n        case MEETING_ALL_LIST_START:\n            return getMeetingAllListStart(state, action);\n        case MEETING_ALL_LIST_SUCCESS:\n            return getMeetingAllListSuccess(state, action);\n        case MEETING_ALL_LIST_FAIL:\n            return getMeetingAllListFail(state, action);\n        case GET_MEETING_DETAIL_START:\n            return getMeetingDetailStart(state, action);\n        case GET_MEETING_DETAIL_SUCCESS:\n            return getMeetingDetailSuccess(state, action);\n        case GET_MEETING_DETAIL_FAIL:\n            return getMeetingDetailFail(state, action);\n        case CREATE_MEETING_START:\n            return createMeetingStart(state, action);\n        case CREATE_MEETING_SUCCESS:\n            return createMeetingSuccess(state, action);\n        case CREATE_MEETING_FAIL:\n            return createMeetingFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import {\n    GET_QUESTTIONAIRE_MEETING_LIST_START, GET_QUESTTIONAIRE_MEETING_LIST_SUCCESS, GET_QUESTTIONAIRE_MEETING_LIST_FAIL,\n    GET_QUESTTIONAIRE_DETAIL_START, GET_QUESTTIONAIRE_DETAIL_SUCCESS, GET_QUESTTIONAIRE_DETAIL_FAIL,\n    GET_QUESTION_QUESTTIONAIRE_DETAIL_START, GET_QUESTION_QUESTTIONAIRE_DETAIL_SUCCESS, GET_QUESTION_QUESTTIONAIRE_DETAIL_FAIL,\n    CREATE_RESPOND_QUIZ_START, CREATE_RESPOND_QUIZ_SUCCESS, CREATE_RESPOND_QUIZ_FAIL,\n    GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_START, GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_SUCCESS, GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n\n    currentQuesttionaire: {},\n    questtionaires: [],\n    questions: [],\n    resultsGraded: [],\n    error: null,\n    loading: false\n}\n\nconst getQuesttionaireMeetingListStart = (state, action) => {\n\n    return updateObject(state, {\n\n        error: null,\n        loading: true\n    });\n}\n\nconst getQuesttionaireMeetingListSuccess = (state, action) => {\n\n    return updateObject(state, {\n\n        questtionaires: action.questtionaires,\n        error: null,\n        loading: false\n    });\n}\n\nconst getQuesttionaireMeetingListFail = (state, action) => {\n\n    return updateObject(state, {\n\n        error: action.error,\n        loading: false\n    });\n}\n\nconst getQuesttionaireDetailStart = (state, action) => {\n\n    return updateObject(state, {\n\n        error: null,\n        loading: true\n    });\n}\n\nconst getQuesttionaireDetailSuccess = (state, action) => {\n\n    return updateObject(state, {\n\n        currentQuesttionaire: action.questtionaire,\n        error: null,\n        loading: false\n    });\n}\n\nconst getQuesttionaireDetailFail = (state, action) => {\n\n    return updateObject(state, {\n\n        error: action.error,\n        loading: false\n    });\n}\n\nconst getQuestionListQuesttionaireDetailStart = (state, action) => {\n\n    return updateObject(state, {\n\n        error: null,\n        loading: true\n    });\n}\n\nconst getQuestionListQuesttionaireDetailSuccess = (state, action) => {\n\n    return updateObject(state, {\n\n        questions: action.questions,\n        error: null,\n        loading: false\n    });\n}\n\nconst getQuestionListQuesttionaireDetailFail = (state, action) => {\n\n    return updateObject(state, {\n\n        error: action.error,\n        loading: false\n    });\n}\n\nconst createRespondQuizStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst createRespondQuizSuccess = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: false\n    });\n};\n\nconst createRespondQuizFail = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: action.error,\n        loading: false\n    });\n};\n\nconst getGradedQuesttionaireInQuesttionaireListStart = (state, action) => {\n\n    return updateObject(state, {\n\n        error: null,\n        loading: true\n    });\n}\n\nconst getGradedQuesttionaireInQuesttionaireListSuccess = (state, action) => {\n\n    return updateObject(state, {\n\n        resultsGraded: action.resultsGraded,\n        error: null,\n        loading: false\n    });\n}\n\nconst getGradedQuesttionaireQuesttionaireListFail = (state, action) => {\n\n    return updateObject(state, {\n\n        error: action.error,\n        loading: false\n    });\n}\n\nconst reducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n    \n        case GET_QUESTTIONAIRE_MEETING_LIST_START:\n            return getQuesttionaireMeetingListStart(state, action);\n        case GET_QUESTTIONAIRE_MEETING_LIST_SUCCESS:\n            return getQuesttionaireMeetingListSuccess(state, action);\n        case GET_QUESTTIONAIRE_MEETING_LIST_FAIL:\n            return getQuesttionaireMeetingListFail(state, action);\n        case GET_QUESTTIONAIRE_DETAIL_START:\n            return getQuesttionaireDetailStart(state, action);\n        case GET_QUESTTIONAIRE_DETAIL_SUCCESS:\n            return getQuesttionaireDetailSuccess(state, action);\n        case GET_QUESTTIONAIRE_DETAIL_FAIL:\n            return getQuesttionaireDetailFail(state, action);\n        case GET_QUESTION_QUESTTIONAIRE_DETAIL_START:\n            return getQuestionListQuesttionaireDetailStart(state, action);\n        case GET_QUESTION_QUESTTIONAIRE_DETAIL_SUCCESS:\n            return getQuestionListQuesttionaireDetailSuccess(state, action);\n        case GET_QUESTION_QUESTTIONAIRE_DETAIL_FAIL:\n            return getQuestionListQuesttionaireDetailFail(state, action);\n        case CREATE_RESPOND_QUIZ_START:\n            return createRespondQuizStart(state, action);\n        case CREATE_RESPOND_QUIZ_SUCCESS:\n            return createRespondQuizSuccess(state, action);\n        case CREATE_RESPOND_QUIZ_FAIL:\n            return createRespondQuizFail(state, action);\n        case GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_START:\n            return getGradedQuesttionaireInQuesttionaireListStart(state, action);\n        case GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_SUCCESS:\n            return getGradedQuesttionaireInQuesttionaireListSuccess(state, action);\n        case GET_GRADED_QUESTTIONAIRE_IN_QUESTTIONAIRE_FAIL:\n            return getGradedQuesttionaireQuesttionaireListFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import {\n    GET_CHOICES_START, GET_CHOICES_SUCCESS, GET_CHOICES_FAIL\n} from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    \n    choices: [],\n    error: null,\n    loading: false\n};\n\nconst getChoicesListStart = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: null,\n        loading: true\n    });\n};\n\nconst getChoicesListSuccess = (state, action) => {\n    \n    return updateObject(state, {\n    \n        choices: action.choices,\n        error: null,\n        loading: false\n    });\n};\n\nconst getChoicesListFail = (state, action) => {\n    \n    return updateObject(state, {\n    \n        error: action.error,\n        loading: false\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n    \n        case GET_CHOICES_START:\n            return getChoicesListStart(state, action);\n        case GET_CHOICES_SUCCESS:\n            return getChoicesListSuccess(state, action);\n        case GET_CHOICES_FAIL:\n            return getChoicesListFail(state, action);\n        default:\n            return state;\n    }\n};\n  \nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ConfigProvider } from 'antd';\nimport pt_BR from 'antd/es/locale/pt_BR';\n\nimport authReducer from './store/reducers/auth';\nimport projectReducer from './store/reducers/project';\nimport sectorReducer from './store/reducers/sector';\nimport meetingReducer from './store/reducers/meeting';\nimport quizReducer from './store/reducers/quiz';\nimport choicesReducer from './store/reducers/choices';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n\t\n\tauth: authReducer,\n\tproject: projectReducer,\n\tsector: sectorReducer,\n\tmeeting: meetingReducer,\n\tquiz: quizReducer,\n\tchoices: choicesReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n\t<ConfigProvider locale = { pt_BR }>\n\t\t<Provider store = { store } >\n\t\t\t<App />\n\t\t</Provider>\n\t</ConfigProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}